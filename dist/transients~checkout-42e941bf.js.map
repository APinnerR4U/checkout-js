{"version":3,"sources":["webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Observable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subscription.ts","webpack://checkout/../../../src/common/utils/index.js","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/async.ts","webpack://checkout/../src/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/map.ts","webpack://checkout/webpack://checkoutKit/webpack/bootstrap","webpack://checkout/webpack://checkoutKit/external \"tslib\"","webpack://checkout/webpack://checkoutKit/external \"@bigcommerce/data-store\"","webpack://checkout/webpack://checkoutKit/external \"lodash\"","webpack://checkout/webpack://checkoutKit/external \"rxjs\"","webpack://checkout/webpack://checkoutKit/external \"@bigcommerce/memoize\"","webpack://checkout/webpack://checkoutKit/src/shipping/consignment-actions.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-strategy-actions.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-strategy-actions.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-strategy-actions.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/missing-data-error.ts","webpack://checkout/webpack://checkoutKit/external \"rxjs/operators\"","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-actions.ts","webpack://checkout/webpack://checkoutKit/src/order/order-actions.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-method-actions.ts","webpack://checkout/webpack://checkoutKit/src/billing/billing-address-actions.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-actions.ts","webpack://checkout/webpack://checkoutKit/src/coupon/coupon-actions.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/instrument-actions.ts","webpack://checkout/webpack://checkoutKit/src/coupon/gift-certificate-actions.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/embedded-checkout-events.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/standard-error.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/set-prototype-of.ts","webpack://checkout/webpack://checkoutKit/src/remote-checkout/remote-checkout-actions.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/request-error.ts","webpack://checkout/webpack://checkoutKit/src/config/config-actions.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/is-plain-object.ts","webpack://checkout/webpack://checkoutKit/src/geography/country-actions.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-country-actions.ts","webpack://checkout/webpack://checkoutKit/external \"@bigcommerce/request-sender\"","webpack://checkout/webpack://checkoutKit/src/payment/payment-status-types.ts","webpack://checkout/webpack://checkoutKit/src/store-credit/store-credit-actions.ts","webpack://checkout/webpack://checkoutKit/src/payment/errors/payment-method-client-unavailable-error.ts","webpack://checkout/webpack://checkoutKit/external \"@bigcommerce/script-loader\"","webpack://checkout/webpack://checkoutKit/src/common/http-request/content-type.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-actions.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/invalid-argument-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-method-types.ts","webpack://checkout/webpack://checkoutKit/src/common/http-request/join-includes.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/is-iframe-event.ts","webpack://checkout/webpack://checkoutKit/external \"local-storage-fallback\"","webpack://checkout/webpack://checkoutKit/external \"shallowequal\"","webpack://checkout/webpack://checkoutKit/src/common/utility/is-equal.ts","webpack://checkout/webpack://checkoutKit/external \"@bigcommerce/form-poster\"","webpack://checkout/webpack://checkoutKit/external \"reselect\"","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/iframe-event-poster.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/spam-protection-actions.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-actions.ts","webpack://checkout/webpack://checkoutKit/src/common/selector/with-memoized-combiner.ts","webpack://checkout/webpack://checkoutKit/src/common/error/error-actions.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-method-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-method-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/iframe-event-listener.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-default-includes.ts","webpack://checkout/webpack://checkoutKit/src/cart/map-to-internal-line-items.ts","webpack://checkout/webpack://checkoutKit/src/cart/map-gift-certificate-to-internal-line-item.ts","webpack://checkout/webpack://checkoutKit/src/common/http-request/internal-api-headers.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/braintree-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/braintree-sdk-creator.ts","webpack://checkout/webpack://checkoutKit/src/cart/map-to-internal-line-item.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/not-initialized-error.ts","webpack://checkout/webpack://checkoutKit/src/common/error/throw-error-action.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/amount-transformer.ts","webpack://checkout/webpack://checkoutKit/src/common/url/parse-url.ts","webpack://checkout/webpack://checkoutKit/src/common/data-store/cache-action.ts","webpack://checkout/webpack://checkoutKit/src/common/data-store/is-action-options.ts","webpack://checkout/webpack://checkoutKit/src/common/data-store/cachable-action-decorator.ts","webpack://checkout/webpack://checkoutKit/src/common/http-request/join-or-merge-includes.ts","webpack://checkout/webpack://checkoutKit/src/common/http-request/merge-includes.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/bind-decorator.ts","webpack://checkout/webpack://checkoutKit/external \"iframe-resizer\"","webpack://checkout/webpack://checkoutKit/external \"iframe-resizer/js/iframeResizer.contentWindow\"","webpack://checkout/webpack://checkoutKit/src/common/utility/omit-deep.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/shipping/consignment-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/shipping/consignment-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/masterpass/get-callback-url.ts","webpack://checkout/webpack://checkoutKit/src/shipping/map-to-internal-shipping-option.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/is-private.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/iframe-content/embedded-content-events.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/unrecoverable-error.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/map-from-internal-error-response.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/map-from-payment-error-response.ts","webpack://checkout/webpack://checkoutKit/src/common/error/request-error-factory.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/map-from-storefront-error-response.ts","webpack://checkout/webpack://checkoutKit/src/common/error/clear-error-reducer.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/replace.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/object-set.ts","webpack://checkout/webpack://checkoutKit/src/billing/billing-address-state.ts","webpack://checkout/webpack://checkoutKit/src/billing/billing-address-reducer.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/array-replace.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/object-merge.ts","webpack://checkout/webpack://checkoutKit/src/cart/cart-state.ts","webpack://checkout/webpack://checkoutKit/src/cart/cart-reducer.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-state.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-reducer.ts","webpack://checkout/webpack://checkoutKit/src/config/config-state.ts","webpack://checkout/webpack://checkoutKit/src/config/config-reducer.ts","webpack://checkout/webpack://checkoutKit/src/coupon/coupon-state.ts","webpack://checkout/webpack://checkoutKit/src/coupon/coupon-reducer.ts","webpack://checkout/webpack://checkoutKit/src/coupon/gift-certificate-state.ts","webpack://checkout/webpack://checkoutKit/src/coupon/gift-certificate-reducer.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-state.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-reducer.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-strategy-state.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-strategy-reducer.ts","webpack://checkout/webpack://checkoutKit/src/geography/country-state.ts","webpack://checkout/webpack://checkoutKit/src/geography/country-reducer.ts","webpack://checkout/webpack://checkoutKit/src/order/order-state.ts","webpack://checkout/webpack://checkoutKit/src/order/order-reducer.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-reducer.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-method-state.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-method-reducer.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/merge-or-push.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-strategy-state.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-strategy-reducer.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/instrument-state.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/instrument-reducer.ts","webpack://checkout/webpack://checkoutKit/src/remote-checkout/remote-checkout-state.ts","webpack://checkout/webpack://checkoutKit/src/remote-checkout/remote-checkout-reducer.ts","webpack://checkout/webpack://checkoutKit/src/shipping/consignment-state.ts","webpack://checkout/webpack://checkoutKit/src/shipping/consignment-reducer.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-country-state.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-country-reducer.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-strategy-state.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-strategy-reducer.ts","webpack://checkout/webpack://checkoutKit/src/store-credit/store-credit-reducer.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-state.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-reducer.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/create-freeze-proxy.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/supported-payment-instruments.ts","webpack://checkout/webpack://checkoutKit/src/address/is-address-equal.ts","webpack://checkout/webpack://checkoutKit/src/store-credit/store-credit-state.ts","webpack://checkout/webpack://checkoutKit/src/checkout/create-internal-checkout-selectors.ts","webpack://checkout/webpack://checkoutKit/src/billing/billing-address-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-selector.ts","webpack://checkout/webpack://checkoutKit/src/coupon/coupon-selector.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-selector.ts","webpack://checkout/webpack://checkoutKit/src/remote-checkout/remote-checkout-selector.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-address-selector.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-selector.ts","webpack://checkout/webpack://checkoutKit/src/cart/cart-selector.ts","webpack://checkout/webpack://checkoutKit/src/config/config-selector.ts","webpack://checkout/webpack://checkoutKit/src/geography/country-selector.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-strategy-selector.ts","webpack://checkout/webpack://checkoutKit/src/coupon/gift-certificate-selector.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/instrument-selector.ts","webpack://checkout/webpack://checkoutKit/src/form/form-selector.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-method-selector.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-strategy-selector.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-country-selector.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-strategy-selector.ts","webpack://checkout/webpack://checkoutKit/src/shipping/consignment-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-selector.ts","webpack://checkout/webpack://checkoutKit/src/order/order-selector.ts","webpack://checkout/webpack://checkoutKit/src/store-credit/store-credit-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout/create-checkout-store.ts","webpack://checkout/webpack://checkoutKit/src/checkout/create-action-transformer.ts","webpack://checkout/webpack://checkoutKit/src/common/error/create-request-error-factory.ts","webpack://checkout/webpack://checkoutKit/src/checkout/create-checkout-store-reducer.ts","webpack://checkout/webpack://checkoutKit/src/checkout/errors/checkout-not-available-error.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-params.ts","webpack://checkout/webpack://checkoutKit/src/coupon/map-to-internal-coupon.ts","webpack://checkout/webpack://checkoutKit/src/address/map-to-internal-address.ts","webpack://checkout/webpack://checkoutKit/src/billing/is-billing-address-like.ts","webpack://checkout/webpack://checkoutKit/src/common/selector/selector-decorator.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-error-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-status-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/create-checkout-button-selectors.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-initializer.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/strategies/checkout-button-method-type.ts","webpack://checkout/webpack://checkoutKit/src/common/dom/is-element-id.ts","webpack://checkout/webpack://checkoutKit/src/common/dom/set-unique-element-id.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/checkout-button-strategy-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/strategies/braintree/braintree-paypal-button-strategy.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/strategies/googlepay/googlepay-button-strategy.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/strategies/masterpass/masterpass-button-strategy.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/strategies/paypal/paypal-button-strategy.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/create-checkout-button-initializer.ts","webpack://checkout/webpack://checkoutKit/src/checkout-buttons/create-checkout-button-registry.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/errors/not-embeddable-error.ts","webpack://checkout/webpack://checkoutKit/src/common/storage/browser-storage.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/errors/invalid-login-token-error.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/embedded-checkout.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/loading-indicator.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/resizable-iframe-creator.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/embed-checkout.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/cache-key-maps.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/cache-key-resolver.ts","webpack://checkout/webpack://checkoutKit/external \"@bigcommerce/bigpay-client\"","webpack://checkout/webpack://checkoutKit/external \"messageformat\"","webpack://checkout/webpack://checkoutKit/src/common/error/errors/timeout-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/errors/payment-method-invalid-error.ts","webpack://checkout/webpack://checkoutKit/src/common/selector/create-selector.ts","webpack://checkout/webpack://checkoutKit/src/config/config-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/config/config-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/billing/billing-address-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/common/registry/registry.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/masterpass/masterpass-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/remote-checkout/errors/remote-checkout-synchronization-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/googlepay/googlepay-braintree-initializer.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/googlepay/googlepay-stripe-initializer.ts","webpack://checkout/webpack://checkoutKit/src/customer/map-to-internal-customer.ts","webpack://checkout/webpack://checkoutKit/src/coupon/map-to-internal-gift-certificate.ts","webpack://checkout/webpack://checkoutKit/src/order/map-to-internal-order.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/paypal/paypal-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/common/iframe/iframe-resizer.ts","webpack://checkout/webpack://checkoutKit/src/common/error/error-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/get-environment.ts","webpack://checkout/webpack://checkoutKit/src/common/log/create-logger.ts","webpack://checkout/webpack://checkoutKit/src/common/log/console-logger.ts","webpack://checkout/webpack://checkoutKit/src/common/log/noop-logger.ts","webpack://checkout/webpack://checkoutKit/src/common/log/get-default-logger.ts","webpack://checkout/webpack://checkoutKit/src/coupon/coupon-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/coupon/coupon-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/coupon/gift-certificate-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/coupon/gift-certificate-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-strategy-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/amazon-pay/amazon-pay-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/braintree-visacheckout-payment-processor.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/create-braintree-visacheckout-payment-processor.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-strategy-type.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/visacheckout-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/chasepay/chasepay-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/remote-checkout/remote-checkout-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/remote-checkout/remote-checkout-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/customer/customer-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/not-implemented-error.ts","webpack://checkout/webpack://checkoutKit/src/customer/strategies/amazon/amazon-pay-customer-strategy.ts","webpack://checkout/webpack://checkoutKit/src/customer/strategies/braintree/braintree-visacheckout-customer-strategy.ts","webpack://checkout/webpack://checkoutKit/src/customer/strategies/chasepay/chasepay-customer-strategy.ts","webpack://checkout/webpack://checkoutKit/src/customer/strategies/default/default-customer-strategy.ts","webpack://checkout/webpack://checkoutKit/src/customer/strategies/googlepay/googlepay-customer-strategy.ts","webpack://checkout/webpack://checkoutKit/src/customer/strategies/masterpass/masterpass-customer-strategy.ts","webpack://checkout/webpack://checkoutKit/src/customer/strategies/square/square-customer-strategy.ts","webpack://checkout/webpack://checkoutKit/src/geography/country-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/geography/country-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/order/order-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/errors/spam-protection-not-completed-error.ts","webpack://checkout/webpack://checkoutKit/src/order/order-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/order/errors/order-finalization-not-required-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-strategy-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/cart/cart-comparator.ts","webpack://checkout/webpack://checkoutKit/src/cart/errors/cart-changed-error.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-validator.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/errors/spam-protection-failed-error.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/spam-protection-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/spam-protection-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/store-credit/store-credit-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/store-credit/store-credit-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/payment/is-vaulted-instrument.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-request-transformer.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/adyenv2/adyenv2.ts","webpack://checkout/webpack://checkoutKit/src/payment/payment-strategy-registry.ts","webpack://checkout/webpack://checkoutKit/src/payment/errors/payment-argument-invalid-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/adyenv2/adyenv2-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/order/order-params.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/adyenv2/adyenv2-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/errors/payment-method-cancelled-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/affirm/affirm-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/affirm/affirmJs.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/affirm/affirm-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/afterpay/afterpay-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/afterpay/afterpay-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/address/is-internal-address-equal.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/omit-private.ts","webpack://checkout/webpack://checkoutKit/src/address/map-from-internal-address.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/amazon-pay/amazon-pay-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/common/overlay/overlay.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/cancellable-promise.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/braintree-payment-processor.ts","webpack://checkout/webpack://checkoutKit/src/payment/errors/payment-method-failed-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/is-credit-card-like.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/braintree-credit-card-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/cardinal/cardinal.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/braintree-paypal-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/is-braintree-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/map-to-braintree-shipping-address-override.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/braintree-visacheckout-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/errors/payment-instrument-not-valid-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/cardinal/cardinal-three-d-secure-flow.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/cardinal/cardinal-client.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/chasepay/chasepay.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/cardinal/cardinal-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/chasepay/chasepay-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/square/square-form.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/converge/converge-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/credit-card/credit-card-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/cybersource/cybersource-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/googlepay/googlepay-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/klarna/klarna-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/klarna/klarna-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/legacy/legacy-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/masterpass/masterpass-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/no-payment/no-payment-data-required-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/offline/offline-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/offsite/offsite-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/paypal/paypal-pro-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/paypal/paypal-express-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/sage-pay/sage-pay-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/unsupported-browser-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/square/square-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/square/square-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/stripev3/stripev3-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/stripev3/stripev3-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/wepay/wepay-risk-client.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/wepay/wepay-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/errors/payment-method-declined-error.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/zip/zip-payment-strategy.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/zip/zip-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/common/data-store/create-data-store-projection.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/instrument-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/common/date-time/is-future.ts","webpack://checkout/webpack://checkoutKit/src/common/date-time/add-minutes.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/instrument-response-transformer.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/map-to-account-instrument.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/map-to-card-instrument.ts","webpack://checkout/webpack://checkoutKit/src/payment/instrument/instrument-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-country-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-country-request-sender.ts","webpack://checkout/webpack://checkoutKit/src/shipping/shipping-strategy-action-creator.ts","webpack://checkout/webpack://checkoutKit/src/shipping/strategies/amazon/amazon-pay-shipping-strategy.ts","webpack://checkout/webpack://checkoutKit/src/shipping/strategies/default/default-shipping-strategy.ts","webpack://checkout/webpack://checkoutKit/src/common/dom/mutation-observer.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/errors/spam-protection-not-loaded-error.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/errors/spam-protection-challenge-not-completed-error.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/google-recaptcha.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/google-recaptcha-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/clone-result.ts","webpack://checkout/webpack://checkoutKit/src/common/selector/create-shallow-equal-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout/create-checkout-selectors.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-store-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-store-error-selector.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-store-status-selector.ts","webpack://checkout/webpack://checkoutKit/src/common/error/error-message-transformer.ts","webpack://checkout/webpack://checkoutKit/src/common/utility/to-single-line.ts","webpack://checkout/webpack://checkoutKit/src/checkout/checkout-service.ts","webpack://checkout/webpack://checkoutKit/src/checkout/create-checkout-service-error-transformer.ts","webpack://checkout/webpack://checkoutKit/src/checkout/create-checkout-service.ts","webpack://checkout/webpack://checkoutKit/src/spam-protection/create-spam-protection.ts","webpack://checkout/webpack://checkoutKit/src/payment/create-payment-client.ts","webpack://checkout/webpack://checkoutKit/src/customer/create-customer-strategy-registry.ts","webpack://checkout/webpack://checkoutKit/src/payment/create-payment-strategy-registry.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/braintree/create-braintree-payment-processor.ts","webpack://checkout/webpack://checkoutKit/src/shipping/create-shipping-strategy-registry.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/iframe-content/handle-frame-loaded-event.ts","webpack://checkout/webpack://checkoutKit/src/common/error/errors/custom-error.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/iframe-content/iframe-embedded-checkout-messenger.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/iframe-content/noop-embedded-checkout-messenger.ts","webpack://checkout/webpack://checkoutKit/src/embedded-checkout/iframe-content/create-embedded-checkout-messenger.ts","webpack://checkout/webpack://checkoutKit/src/locale/language-service.ts","webpack://checkout/webpack://checkoutKit/src/locale/create-language-service.ts","webpack://checkout/webpack://checkoutKit/src/currency/currency-formatter.ts","webpack://checkout/webpack://checkoutKit/src/currency/currency-service.ts","webpack://checkout/webpack://checkoutKit/src/currency/create-currency-service.ts","webpack://checkout/webpack://checkoutKit/src/analytics/analytics-step-tracker.ts","webpack://checkout/webpack://checkoutKit/src/analytics/noop-step-tracker.ts","webpack://checkout/webpack://checkoutKit/src/analytics/create-step-tracker.ts","webpack://checkout/webpack://checkoutKit/src/analytics/is-analytics-step-tracker-window.ts","webpack://checkout/webpack://checkoutKit/src/index.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/googlepay/googlepay.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/googlepay/googlepay-payment-processor.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/googlepay/googlepay-script-loader.ts","webpack://checkout/webpack://checkoutKit/src/payment/strategies/googlepay/create-googlepay-payment-processor.ts","webpack://checkout/webpack://checkoutKit/src/cart/map-to-internal-cart.ts","webpack://checkout/webpack://checkoutKit/src/promotion/map-to-discount-notifications.ts","webpack://checkout/webpack://checkoutKit/src/billing/errors/unable-to-continue-as-guest-error.ts","webpack://checkout/webpack://checkoutKit/src/billing/billing-address-action-creator.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/empty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/from.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/observable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/identity.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/filter.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/multicast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isFunction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/EmptyError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/iterator.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/config.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/noop.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Notification.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/of.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/AsyncSubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/concat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isNumeric.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/reduce.ts","webpack://checkout/../src/timeout.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/canReportError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/hostReportError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isObject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/pipe.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/refCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/ReplaySubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/throwError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/defer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/zip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/take.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/scan.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchMap.ts","webpack://checkout/../../../src/common/utils/is-nil.js","webpack://checkout/../../../src/common/utils/omit-property.js","webpack://checkout/../../../src/payment/payment-method-mappers/payment-method-id-mapper.js","webpack://checkout/../../src/payment/url-helper.js","webpack://checkout/../../../src/common/http-request/request-sender.js","webpack://checkout/../../../src/common/http-request/method-types.js","webpack://checkout/../src/request-sender.ts","webpack://checkout/../src/data-store.ts","webpack://checkout/../src/deep-freeze.ts","webpack://checkout/../src/combine-reducers.ts","webpack://checkout/../src/create-action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Observer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/groupBy.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/queue.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Scheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/observeOn.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/asap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isArrayLike.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isPromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/merge.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/never.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/not.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/race.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/timer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/audit.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isDate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/find.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throttle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeoutWith.ts","webpack://checkout/../src/script-loader.ts","webpack://checkout/../src/create-script-loader.ts","webpack://checkout/../src/browser-support.ts","webpack://checkout/../src/stylesheet-loader.ts","webpack://checkout/../src/create-stylesheet-loader.ts","webpack://checkout/../src/form-poster.ts","webpack://checkout/../../src/payment/payment-types.js","webpack://checkout/../../../src/common/utils/is-object.js","webpack://checkout/../../../src/common/http-request/content-types.js","webpack://checkout/../src/create-request-sender.ts","webpack://checkout/../src/payload-transformer.ts","webpack://checkout/../src/to-form-url-encoded.ts","webpack://checkout/../src/request-factory.ts","webpack://checkout/./node_modules/@bigcommerce/request-sender/node_modules/query-string/index.js","webpack://checkout/../src/is-promise.ts","webpack://checkout/../src/create-timeout.ts","webpack://checkout/../src/is-observable-action-like.ts","webpack://checkout/../src/noop-action-transformer.ts","webpack://checkout/../src/noop-state-transformer.ts","webpack://checkout/../src/compose-reducers.ts","webpack://checkout/../src/create-data-store.ts","webpack://checkout/../src/create-error-action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/Action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/Immediate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/animationFrame.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/generate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/iif.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/interval.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/pairs.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/partition.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/range.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/using.ts","webpack://checkout/../src/memoize.ts","webpack://checkout/../src/cache-key-resolver.ts","webpack://checkout/../src/cache-key-maps.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/operators/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/auditTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/buffer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferToggle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/catchError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/combineAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/combineLatest.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/count.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/debounce.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/debounceTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/delay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/delayWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/dematerialize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinct.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/elementAt.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/endWith.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/every.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/exhaust.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/exhaustMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/expand.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/finalize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/findIndex.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/first.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/ignoreElements.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/isEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/last.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/materialize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/max.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/merge.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeScan.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/min.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/onErrorResumeNext.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/pairwise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/partition.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/pluck.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publish.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishBehavior.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishReplay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/race.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/repeat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/repeatWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/retry.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/retryWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sample.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sampleTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sequenceEqual.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/share.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/shareReplay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/single.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipUntil.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipWhile.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/startWith.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/subscribeOn.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/SubscribeOnObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeUntil.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeWhile.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/tap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throttleTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeInterval.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeout.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timestamp.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/toArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/window.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowToggle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/withLatestFrom.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/zip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/zipAll.ts","webpack://checkout/../src/get-script-loader.ts","webpack://checkout/../src/get-stylesheet-loader.ts","webpack://checkout/../src/create-form-poster.ts","webpack://checkout/../src/form-builder.ts","webpack://checkout/../src/url-utils.ts","webpack://checkout/../src/index.js","webpack://checkout/../../src/client/client.js","webpack://checkout/../../src/payment/offsite-payment-initializer.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/payload-mapper.js","webpack://checkout/../../../src/common/utils/includes.js","webpack://checkout/../../../src/common/utils/omit-emptystring-and-nil.js","webpack://checkout/../../../src/common/utils/is-emptystring-or-nil.js","webpack://checkout/../../../src/common/utils/is-empty-string.js","webpack://checkout/../../../src/common/utils/omit-nil.js","webpack://checkout/../../../src/common/utils/to-number.js","webpack://checkout/../../../src/common/utils/to-snake-case.js","webpack://checkout/../../../src/common/utils/to-string.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/address-mapper.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/customer-mapper.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/meta-mapper.js","webpack://checkout/../../src/payment/payment-method-types.js","webpack://checkout/../../src/payment/payment-method-ids.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/store-mapper.js","webpack://checkout/../../src/payment/payment-submitter.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/payload-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/customer-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/order-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/payment-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/store-mapper.js","webpack://checkout/../../../src/common/http-request/default-options.js","webpack://checkout/../../../src/common/http-request/payload-transformer.js","webpack://checkout/../../../src/common/http-request/request-factory.js","webpack://checkout/../../src/payment/client-token-generator.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/client-token-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/cart-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/gateway-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/quote-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/store-mapper.js","webpack://checkout/../../src/store/store-request-sender.js","webpack://checkout/../../src/store/url-helper.js","webpack://checkout/../../../../src/store/v2/mappers/index.js","webpack://checkout/../../src/client/default-config.js"],"names":["destinationOrNext","error","complete","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","length","destination","empty","Subscriber","add","SafeSubscriber","rxSubscriber","this","create","next","subscriber","value","_next","err","_error","_complete","unsubscribe","closed","_unsubscribeAndRecycle","_parentOrParents","Subscription","_parentSubscriber","observerOrNext","context","isFunction","Object","bind","_context","config","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","hostReportError","wrappedComplete","call","fn","parent","Error","_unsubscribe","subscribe","_isScalar","_subscribe","lift","operator","observable","Observable","source","sink","toSubscriber","_trySubscribe","canReportError","console","warn","forEach","promiseCtor","getPromiseCtor","resolve","reject","subscription","pipe","operations","pipeFromArray","toPromise","x","Promise","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","OuterSubscriber","outerSubscriber","result","innerSubscriber","InnerSubscriber","subscribeTo","_subscriptions","errors","remove","index","e","UnsubscriptionError","flattenUnsubscriptionErrors","isArray","len","sub","isObject","concat","push","teardown","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","splice","reduce","errs","default","SubjectSubscriber","observers","hasError","thrownError","subject","AnonymousSubject","ObjectUnsubscribedError","copy","slice","i","SubjectSubscription","asObservable","Subject","Array","async","AsyncScheduler","AsyncAction","project","thisArg","TypeError","MapOperator","MapSubscriber","count","installedModules","__webpack_require__","moduleId","exports","module","l","modules","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","key","n","object","property","prototype","hasOwnProperty","p","s","require","ConsignmentActionType","CreateConsignmentsRequested","CreateConsignmentsSucceeded","CreateConsignmentsFailed","UpdateConsignmentRequested","UpdateConsignmentSucceeded","UpdateConsignmentFailed","DeleteConsignmentRequested","DeleteConsignmentSucceeded","DeleteConsignmentFailed","UpdateShippingOptionRequested","UpdateShippingOptionSucceeded","UpdateShippingOptionFailed","LoadShippingOptionsRequested","LoadShippingOptionsSucceeded","LoadShippingOptionsFailed","CustomerStrategyActionType","SignInFailed","SignInRequested","SignInSucceeded","SignOutFailed","SignOutRequested","SignOutSucceeded","InitializeFailed","InitializeRequested","InitializeSucceeded","DeinitializeFailed","DeinitializeRequested","DeinitializeSucceeded","WidgetInteractionStarted","WidgetInteractionFinished","WidgetInteractionFailed","PaymentStrategyActionType","ExecuteFailed","ExecuteRequested","ExecuteSucceeded","FinalizeFailed","FinalizeRequested","FinalizeSucceeded","ShippingStrategyActionType","UpdateAddressFailed","UpdateAddressRequested","UpdateAddressSucceeded","SelectOptionFailed","SelectOptionRequested","SelectOptionSucceeded","MissingDataErrorType","MissingBillingAddress","MissingCart","MissingCheckout","MissingConsignments","MissingCheckoutConfig","MissingOrder","MissingOrderConfig","MissingOrderId","MissingPayment","MissingPaymentMethod","MissingPaymentToken","MissingShippingAddress","subtype","type","CheckoutActionType","LoadCheckoutRequested","LoadCheckoutSucceeded","LoadCheckoutFailed","UpdateCheckoutRequested","UpdateCheckoutSucceeded","UpdateCheckoutFailed","OrderActionType","LoadOrderRequested","LoadOrderSucceeded","LoadOrderFailed","LoadOrderPaymentsRequested","LoadOrderPaymentsSucceeded","LoadOrderPaymentsFailed","SubmitOrderRequested","SubmitOrderSucceeded","SubmitOrderFailed","FinalizeOrderRequested","FinalizeOrderSucceeded","FinalizeOrderFailed","PaymentMethodActionType","LoadPaymentMethodRequested","LoadPaymentMethodSucceeded","LoadPaymentMethodFailed","LoadPaymentMethodsRequested","LoadPaymentMethodsSucceeded","LoadPaymentMethodsFailed","BillingAddressActionType","UpdateBillingAddressRequested","UpdateBillingAddressSucceeded","UpdateBillingAddressFailed","ContinueAsGuestRequested","ContinueAsGuestSucceeded","ContinueAsGuestFailed","CheckoutButtonActionType","InitializeButtonFailed","InitializeButtonRequested","InitializeButtonSucceeded","DeinitializeButtonFailed","DeinitializeButtonRequested","DeinitializeButtonSucceeded","CouponActionType","ApplyCouponRequested","ApplyCouponSucceeded","ApplyCouponFailed","RemoveCouponRequested","RemoveCouponSucceeded","RemoveCouponFailed","InstrumentActionType","LoadInstrumentsRequested","LoadInstrumentsSucceeded","LoadInstrumentsFailed","DeleteInstrumentRequested","DeleteInstrumentSucceeded","DeleteInstrumentFailed","GiftCertificateActionType","ApplyGiftCertificateRequested","ApplyGiftCertificateSucceeded","ApplyGiftCertificateFailed","RemoveGiftCertificateRequested","RemoveGiftCertificateSucceeded","RemoveGiftCertificateFailed","EmbeddedCheckoutEventType","CheckoutComplete","CheckoutError","CheckoutLoaded","FrameError","FrameLoaded","SignedOut","message","setPrototypeOf","__proto__","captureStackTrace","stack","RemoteCheckoutActionType","InitializeRemoteBillingRequested","InitializeRemoteBillingSucceeded","InitializeRemoteBillingFailed","InitializeRemoteShippingRequested","InitializeRemoteShippingSucceeded","InitializeRemoteShippingFailed","InitializeRemotePaymentRequested","InitializeRemotePaymentSucceeded","InitializeRemotePaymentFailed","LoadRemoteSettingsRequested","LoadRemoteSettingsSucceeded","LoadRemoteSettingsFailed","SignOutRemoteCustomerRequested","SignOutRemoteCustomerSucceeded","SignOutRemoteCustomerFailed","UpdateRemoteCheckout","DEFAULT_RESPONSE","body","headers","status","response","ConfigActionType","LoadConfigRequested","LoadConfigSucceeded","LoadConfigFailed","isPlainObject","CountryActionType","LoadCountriesRequested","LoadCountriesSucceeded","LoadCountriesFailed","ShippingCountryActionType","LoadShippingCountriesRequested","LoadShippingCountriesSucceeded","LoadShippingCountriesFailed","ACKNOWLEDGE","FINALIZE","StoreCreditActionType","ApplyStoreCreditRequested","ApplyStoreCreditSucceeded","ApplyStoreCreditFailed","ContentType","Json","JsonV1","PaymentActionType","SubmitPaymentRequested","SubmitPaymentSucceeded","SubmitPaymentFailed","InitializeOffsitePaymentRequested","InitializeOffsitePaymentSucceeded","InitializeOffsitePaymentFailed","HOSTED","OFFLINE","joinIncludes","includes","uniq","join","isIframeEvent","isEqual","objectA","objectB","options","Date","getTime","RegExp","toString","filter","keyFilter","keysA","keys","keysB","targetOrigin","_targetWindow","_targetOrigin","origin","post","event","window","postMessage","setTarget","SpamProtectionActionType","CustomerActionType","SignInCustomerRequested","SignInCustomerSucceeded","SignInCustomerFailed","SignOutCustomerRequested","SignOutCustomerSucceeded","SignOutCustomerFailed","withMemoizedCombiner","creator","combiner","args","pop","combinerArgs","memoize","ErrorActionType","ClearError","_requestSender","loadPaymentMethods","observer","createAction","then","meta","deviceSessionId","sessionHash","catch","createErrorAction","loadPaymentMethod","methodId","timeout","Accept","url","sourceOrigin","_sourceOrigin","_isListening","_listeners","listen","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","removeListener","trigger","data","mapToInternalLineItems","itemMap","decimalPlaces","idKey","map","item","amountTransformer","id","imageUrl","amount","amountAfterDiscount","discount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","INTERNAL_USE_ONLY","_scriptLoader","_window","loadClient","loadScript","braintree","client","load3DS","threeDSecure","loadDataCollector","dataCollector","loadPaypal","paypal","loadPaypalCheckout","paypalCheckout","loadVisaCheckout","visaCheckout","loadGooglePayment","googlePayment","_braintreeScriptLoader","_dataCollectors","initialize","clientToken","_clientToken","getClient","PaymentNotInitialized","_client","authorization","getPaypal","_paypal","all","getPaypalCheckout","_paypalCheckout","get3DS","_3ds","getDataCollector","cacheKey","cached","kount","code","deviceData","getVisaCheckout","_visaCheckout","getGooglePaymentComponent","_googlePay","_teardown","mod","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","brand","sku","categoryNames","productId","option","addedByPromotion","NotInitializedErrorType","CheckoutButtonNotInitialized","CustomerNotInitialized","ShippingNotInitialized","SpamProtectionNotInitialized","throwErrorAction","action","of","throwError","payload","_decimalPlaces","Math","round","pow","parseUrl","test","anchor","document","createElement","href","port","hostname","hash","protocol","pathname","search","cacheAction","from","shareReplay","store","isActionOptions","param","useCache","cachableActionDecorator","_","descriptor","memoizedMethods","WeakMap","decorateMethod","method","lastArg","instanceMethods","set","joinOrMergeIncludes","baseIncludes","includeDictionaryOrList","includesDictionary","deletions","pickBy","on","additions","difference","bindMethodDecorator","boundMethod","target","decoratedTarget","getOwnPropertyNames","getOwnPropertyDescriptor","omitDeep","predicate","transform","omitBy","_checkoutRequestSender","_configActionCreator","loadCheckout","merge","loadConfig","defer","catchError","loadDefaultCheckout","state","getState","getContextConfig","checkoutId","updateCheckout","checkout","getCheckout","loadCurrentCheckout","_consignmentRequestSender","unassignItemsByAddress","consignment","existingConsignment","consignments","getConsignmentByAddress","shippingAddress","lineItems","_removeLineItems","cart","getCart","updateConsignment","deleteConsignment","assignItemsByAddress","_createOrUpdateConsignment","_addLineItems","selectShippingOption","getConsignments","consignmentUpdateBody","shippingOptionId","consignmentMeta","loadShippingOptions","params","include","AvailableShippingOptions","updateAddress","address","_getConsignmentRequestBody","createConsignments","consignmentId","updateShippingOption","_isUpdateConsignmentRequest","physicalItems","itemId","_hydrateLineItems","lineItemIds","existingItem","sharedItem","find","lineItem","request","DEFAULT_INCLUDES","put","delete","getCallbackUrl","location","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","isPrivate","EmbeddedContentEventType","StyleConfigured","joinErrors","_factoryMethods","register","detail","title","factoryMethod","createError","_getType","_isStorefrontErrorResponseBody","_isInternalErrorResponseBody","internalType","last","split","errorResponse","storefrontErrorResponse","internalErrorResponse","clearErrorReducer","replace","currentValue","newValue","objectSet","DEFAULT_STATE","statuses","billingAddressReducer","combineReducers","dataReducer","composeReducers","errorsReducer","statusesReducer","billingAddress","arrayReplace","currentArray","newArray","matchObject","sameAsCurrentCount","sameAsNewCount","countSameAsReplaced","replacedValue","newItem","currentItem","objectMerge","currentObject","newObject","cartReducer","DEFAULT_DATA_STATE","initializedContainers","DEFAULT_ERROR_STATE","DEFAULT_STATUS_STATE","checkoutButtonReducer","containerId","configReducer","couponReducer","coupons","giftCertificateReducer","giftCertificates","customerReducer","customer","customerStrategyReducer","isInitialized","initializeError","initializeMethodId","deinitializeError","deinitializeMethodId","signInError","signInMethodId","signOutError","signOutMethodId","widgetInteractionError","widgetInteractionMethodId","isInitializing","isDeinitializing","isSigningIn","isSigningOut","isWidgetInteracting","countryReducer","orderReducer","metaReducer","omit","callbackUrl","order","orderToken","token","payment","paymentReducer","paymentMethodReducer","array","defaultPredicate","pick","findIndex","gateway","methodA","methodB","loadMethodId","loadMethodError","isLoadingMethod","paymentStrategyReducer","executeError","executeMethodId","finalizeError","finalizeMethodId","isExecuting","isFinalizing","instrumentReducer","vaultedInstruments","instrument","bigpayToken","instrumentId","deleteError","failedInstrument","isDeleting","deletingInstrument","remoteCheckoutReducer","billing","shipping","updateShippingOptionError","updateError","isUpdating","isUpdatingShippingOption","consignmentReducer","shippingCountryReducer","shippingStrategyReducer","updateAddressError","updateAddressMethodId","selectOptionError","selectOptionMethodId","isUpdatingAddress","isSelectingOption","storeCreditReducer","checkoutReducer","orderId","createFreezeProxy","trap","proxy","iteratee","getPrototypeOf","charAt","deepFreeze","provider","braintreepaypal","authorizenet","stripe","stripev3","cybersource","converge","bluesnapv2","paymetric","normalize","firstName","lastName","company","address1","address2","city","stateOrProvince","countryCode","postalCode","phone","customFields","identity","createInternalCheckoutSelectorsFactory","getBillingAddress","getUpdateError","getContinueAsGuestError","getLoadError","isContinuingAsGuest","isLoading","getInitializeError","getDeinitializeError","getCoupons","getRemoveError","getApplyError","isApplying","isRemoving","getCustomer","getShippingAddress","getInternalPayment","getGatewayPayment","getHostedPayment","getPaymentId","getPaymentStatus","getPaymentToken","getPaymentRedirectUrl","isPaymentDataRequired","isPaymentDataSubmitted","createBillingAddressSelector","continueAsGuestError","loadError","memoizeOne","createCartSelector","createCheckoutButtonSelector","some","values","createConfigSelector","getConfig","getStoreConfig","storeConfig","getExternalSource","externalSource","createCountrySelector","getCountries","countries","createCouponSelector","removeCouponError","applyCouponError","isApplyingCoupon","isRemovingCoupon","createCustomerSelector","createCustomerStrategySelector","getSignInError","getSignOutError","getWidgetInteractionError","createGiftCertificateSelector","getGiftCertificates","removeGiftCertificateError","applyGiftCertificateError","isApplyingGiftCertificate","isRemovingGiftCertificate","createInstrumentSelector","getInstrumentsByPaymentMethod","instruments","paymentMethod","paymentMethodKey","currentMethod","getInstruments","flatMap","card","isMatch","getInstrumentsMeta","getDeleteError","createFormSelector","getShippingAddressFields","selectedCountry","formFields","shippingAddressFields","field","processField","getBillingAddressFields","billingAddressFields","country","items","label","fieldType","itemtype","subdivisions","requiresState","required","hasPostalCodes","Boolean","createFormSelectorFactory","createPaymentMethodSelector","getPaymentMethods","paymentMethods","getPaymentMethodsMeta","getPaymentMethod","gatewayId","getLoadMethodError","createPaymentStrategySelector","getExecuteError","getFinalizeError","getWidgetInteractingError","createRemoteCheckoutSelector","createShippingAddressSelector","createShippingCountrySelector","getShippingCountries","createShippingStrategySelector","getUpdateAddressError","getSelectOptionError","createConsignmentSelector","getConsignmentById","addressA","addressB","getShippingOption","selectedShippingOption","getCreateError","getLoadShippingOptionsError","loadShippingOptionsError","getUnassignedItems","assignedLineItemIds","itemIds","getItemAssignmentError","getUpdateShippingOptionError","isLoadingShippingOptions","isCreating","isAssigningItems","createConsignmentSelectorFactory","createCheckoutSelector","getOutstandingBalance","useStoreCredit","grandTotal","storeCredit","max","outstandingBalance","isExecutingSpamCheck","createOrderSelector","getOrder","getOrderMeta","createPaymentSelector","payments","providerId","providerType","internalPayment","step","redirectUrl","nonce","createStoreCreditSelector","applyError","checkoutButton","customerStrategies","form","paymentStrategies","remoteCheckout","shippingCountries","shippingStrategies","selectors","shouldWarnMutation","createCheckoutStore","initialState","requestErrorFactory","factory","actionTransformer","action$","every","createInternalCheckoutSelectors","createDataStore","stateTransformer","CheckoutIncludes","PhysicalItemsCategoryNames","DigitalItemsCategoryNames","couponTypes","mapToInternalCoupon","coupon","displayName","discountType","couponType","mapToInternalAddress","addressId","addressLine1","addressLine2","province","provinceCode","stateOrProvinceCode","postCode","selectorDecorator","resolver","memoizedMethod","cachedValue","getUsedCount","cache","getKey","_checkoutButton","getInitializeButtonError","getDeinitializeButtonError","CheckoutButtonErrorSelector","isInitializingButton","isDeinitializingButton","CheckoutButtonStatusSelector","createCheckoutButtonSelectors","CheckoutButtonMethodType","_store","_buttonStrategyActionCreator","_state","filters","initializeButton","containerIds","selector","idPrefix","containers","querySelectorAll","container","u","uniqueId","queueId","dispatch","deinitializeButton","deinitialize","CheckoutButtonInitializer","_registry","_paymentMethodActionCreator","BRAINTREE_PAYPAL","BRAINTREE_PAYPAL_CREDIT","GOOGLEPAY_BRAINTREE","GOOGLEPAY_STRIPE","MASTERPASS","PAYPALEXPRESS","C","_checkoutActionCreator","_braintreeSDKCreator","_paypalScriptLoader","_formPoster","_offerCredit","paypalOptions","braintreepaypalcredit","_paymentMethod","allowedSources","disallowedSources","allowCredit","FUNDING","CREDIT","Button","render","env","testMode","commit","shouldProcessPayment","funding","allowed","disallowed","style","shape","_setupPayment","onPaymentError","onAuthorize","_tokenizePayment","onAuthorizeError","onError","addresses","createPayment","flow","enableShippingAddress","shippingAddressEditable","shippingAddressOverride","_mapToBraintreeAddress","currency","offerCredit","tokenizePayment","postForm","payment_type","device_data","shipping_address","JSON","stringify","_mapToLegacyShippingAddress","billing_address","_mapToLegacyBillingAddress","details","recipientName","email","first_name","last_name","phone_number","address_line_1","line1","address_line_2","line2","country_code","postal_code","_googlePayPaymentProcessor","_methodId","_getMethodId","_walletButton","_createSignInButton","parentNode","removeChild","getElementById","googlePayButton","createButton","_handleWalletButtonClick","appendChild","preventDefault","displayWallet","paymentData","handleSuccess","updateShippingAddress","_onPaymentSelectComplete","_onError","_masterpassScriptLoader","initializationData","load","masterpass","_masterpassClient","_signInButton","buttonContainer","button","src","_createMasterpassPayload","allowedCardTypes","cartAmount","cartId","suppressShippingAddress","_host","merchantId","clientId","actions","res","paymentID","payerID","paymentId","payerId","payerInfo","payer","payer_info","createCheckoutButtonInitializer","host","requestSender","createRequestSender","formPoster","createFormPoster","registry","scriptLoader","getScriptLoader","checkoutActionCreator","NotEmbeddableErrorType","_namespace","getItem","rawValue","withNamespace","parse","removeItem","getItemOnce","setItem","MissingContainer","MissingContent","UnknownError","_iframeCreator","_messageListener","_messagePoster","_loadingIndicator","_storage","_location","_options","_isAttached","onComplete","onLoad","onFrameLoad","onSignOut","_configureStyles","attach","show","_allowCookie","_attemptLogin","createFrame","iframe","_iframe","hide","_retryAllowCookie","detach","iFrameResizer","close","contentWindow","styles","now","encodeURIComponent","visibility","lastAttempt","Number","EmbeddedCheckout","DEFAULT_STYLES","size","color","backgroundColor","ROTATION_ANIMATION","_styles","_defineAnimation","_container","_buildContainer","_indicator","_buildIndicator","parentId","opacity","handleTransitionEnd","display","bottom","left","height","width","position","right","top","transition","indicator","borderRadius","border","borderColor","margin","transformStyle","animation","head","sheet","CSSStyleSheet","insertRule","allowPaymentRequest","_toResizableFrame","timeoutInterval","setTimeout","handleMessage","contentId","iframes","scrolling","sizeWidth","heightCalculationMethod","clearTimeout","STORAGE_PREFIX","embedCheckout","loadingIndicator","isTerminalCacheKeyMap","_lastId","_map","maps","_usedMaps","maxSize","onExpire","noop","_resolveMap","parentMap","usedCount","_generateMap","_removeLeastUsedMap","isMatched","mapIndex","unshift","terminalMap","recentlyUsedMap","_removeMap","_configRequestSender","DEFAULT_PARAMS","createAddress","_factories","_instances","defaultToken","cacheToken","_getInstance","_hasFactory","_hasInstance","hasShippingAddress","googleBraintreePaymentInstance","_googlePaymentInstance","_createGooglePayPayload","parseResponse","paymentMethodData","tokenizationData","androidPayCards","cardType","lastFour","lastTwo","binData","platformToken","googlePayBraintreePaymentDataRequest","merchantInfo","authJwt","merchantName","googleMerchantName","googleMerchantId","transactionInfo","currencyCode","totalPriceStatus","totalPrice","toFixed","cardRequirements","billingAddressRequired","billingAddressFormat","shippingAddressRequired","emailRequired","phoneNumberRequired","_mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2","createPaymentDataRequest","googlePayBraintreeDataRequestV1","apiVersion","apiVersionMinor","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","billingAddressParameters","format","tokenizationSpecification","paymentMethodTokenizationParameters","shippingAddressParameters","_mapGooglePayStripeDataRequestToGooglePayDataRequestV2","last4","stripeVersion","stripePublishableKey","mapToInternalCustomer","customerId","isGuest","fullName","customerGroupName","customerGroup","mapToInternalGiftCertificate","giftCertificate","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","mapToInternalOrder","orderMeta","customerCanBeCreated","mapToInternalOrderPayment","subtotal","baseAmount","sum","discountNotifications","totalDiscountedAmount","appliedGiftCertificates","keyBy","socialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","isDefaultOrderPayment","helpText","instructions","returnUrl","socialDataObject","digitalItems","socialMedia","image","link","shareText","text","sharingLink","channelName","channel","channelCode","scriptSrc","iframeResizer","setupContentWindowForIframeResizer","clearError","getEnvironment","process","isEnabled","_console","log","_logToConsole","messages","info","debug","logger","getDefaultLogger","_couponRequestSender","applyCoupon","removeCoupon","couponCode","_giftCertificateRequestSender","applyGiftCertificate","removeGiftCertificate","giftCertificateCode","_strategyRegistry","signIn","credentials","signOut","widgetInteraction","loadWidget","onPaymentReady","region","toLowerCase","_configureWidget","onLoginReady","amazon","Login","setClientId","setUseCookie","onAmazonLoginReady","OffAmazonPayments","onAmazonPaymentsReady","createInitOptions","settings","locale","collectShipping","paymentRequest","String","braintreeVisaCheckout","tokenize","tokenizedPayload","_postForm","userData","userEmail","card_information","_getCardInformation","cardInformation","_getAddress","_toVisaCheckoutAddress","phoneNumber","streetAddress","extendedAddress","locality","number","createBraintreeVisaCheckoutPaymentProcessor","braintreeScriptLoader","braintreeSDKCreator","B","PaymentStrategyType","V","JPMC","initializeBilling","methodName","initializeShipping","initializePayment","loadSettings","generateToken","trackAuthorizationEvent","_remoteCheckoutRequestSender","_customerRequestSender","signInCustomer","switchMap","signOutCustomer","_remoteCheckoutActionCreator","amazonOptions","useAmazonAddressBook","_handleAuthorization","authorize","popup","scope","tokenPrefix","_customerStrategyActionCreator","_braintreeVisaCheckoutPaymentProcessor","_visaCheckoutScriptLoader","_buttonClassName","braintreevisacheckout","visaCheckoutOptions","initOptions","storeProfile","storeLanguage","signInButton","init","paymentSuccessPayload","_paymentInstrumentSelected","buttonClass","querySelector","_insertVisaCheckoutButton","visaCheckoutButton","className","innerHTML","_chasePayScriptLoader","chasepay","chasePayOptions","digitalSessionId","ChasePay","configure","language","isChasePayUp","insertButtons","EventType","START_CHECKOUT","sessionId","startCheckout","COMPLETE_CHECKOUT","requestId","merchantRequestId","_setExternalCheckoutData","_reloadPage","sessionToken","sendRequest","fromChasePay","_customerActionCreator","googlePayOptions","_getGooglePayOptions","googlepaybraintree","googlepaystripe","masterpassOptions","Masterpass","_countryRequestSender","loadCountries","_config","loadOrder","submitOrder","finalizeOrder","_orderRequestSender","_checkoutValidator","loadOrderPayments","loadCurrentOrder","_getCurrentOrderId","shouldExecuteSpamCheck","validate","_mapToOrderRequestBody","customerMessage","ADYENV2","AFFIRM","AFTERPAY","AMAZON","CREDIT_CARD","CYBERSOURCE","KLARNA","LEGACY","OFFSITE","PAYPAL","PAYPAL_EXPRESS","PAYPAL_EXPRESS_CREDIT","SAGE_PAY","SQUARE","STRIPEV3","NO_PAYMENT_DATA_REQUIRED","BRAINTREE","BRAINTREE_VISA_CHECKOUT","BRAINTREE_GOOGLE_PAY","CHASE_PAY","WE_PAY","STRIPE_GOOGLE_PAY","ZIP","CONVERGE","_orderActionCreator","_spamProtectionActionCreator","execute","strategy","getByMethod","finalize","_loadOrderPaymentsIfNeeded","cartA","cartB","_normalize","sort","itemA","itemB","localeCompare","giftWrapping","comparator","_compareCoupons","_compareGiftCertificates","couponsA","couponsB","giftCertificatesA","giftCertificatesB","_googleRecaptcha","spamProtectionElementId","spamProtectionElement","setAttribute","recaptchaSitekey","checkoutSettings","googleRecaptchaSitekey","take","_storeCreditRequestSender","applyStoreCredit","removeStoreCredit","a","_paymentRequestSender","_paymentRequestTransformer","submitPayment","initializeOffsitePayment","shouldSaveInstrument","formattedPayload","bigpay_token","vault_payment_instrument","_transformResponse","statusText","isVaultedInstrument","ThreeDS2ComponentType","ResultCode","checkoutState","_getPaymentMethod","shippingOption","contextConfig","instrumentMeta","paymentMeta","internalCustomer","authToken","vaultAccessToken","quoteMeta","geoCountryCode","paymentMethodSelector","_getToken","_hasFactoryForMethod","_isLegacyMethod","clientSidePaymentProviders","invalidFields","ThreeDS2DeviceFingerprint","ThreeDS2Challenge","AuthenticationFinished","Authorised","Cancelled","ChallengeShopper","IdentifyShopper","Pending","Received","RedirectShopper","Refused","OrderIncludes","_paymentActionCreator","_adyenV2ScriptLoader","_locale","adyenv2","_adyenv2","configuration","environment","originKey","paymentMethodsResponse","adyenCheckout","_adyenCheckout","adyenPaymentComponent","onChange","_updateAdyenComponentState","mount","_adyenPaymentComponent","cardVerificationContainerId","adyenCardVerificationComponent","_adyenCardVerificationComponent","adyenComponentState","_adyenComponentState","encryptedCardNumber","encryptedSecurityCode","ccCvv","ccNumber","paymentPayload","three_ds_result","_handle3DS2Fingerprint","_handle3DS2Challenge","acs_url","PaReq","payer_auth_request","TermUrl","callback_url","MD","merchant_data","unmount","_getAdyenV2PaymentInitializeOptions","_getThreeDS2ChallengeWidgetSize","widgetSize","resultObject","paymentMethodId","challengeComponent","challengeToken","challengeData","challengePaymentPayload","payment_data","threeDS2Container","threeDS2ContainerId","fingerprintComponent","fingerprintToken","fingerprintData","fingerprintPaymentPayload","newState","_stylesheetLoader","loadStylesheet","AdyenCheckout","DigitalItemsCategories","PhysicalItemsCategories","_affirmScriptLoader","publicKey","affirm","_affirm","requestOptions","_getCheckoutInformation","open","onFail","failObject","reason","onSuccess","successObject","ui","checkout_token","_getBillingAddress","merchant","user_confirmation_url","links","checkoutLink","user_cancel_url","user_confirmation_url_action","_getShippingAddress","_getItems","metadata","shipping_type","_getShippingType","platform_type","platform_version","platform_affirm","discounts","_getDiscounts","order_id","shipping_amount","tax_amount","total","first","full","zipcode","display_name","unit_price","qty","item_image_url","item_url","categories","_getCategories","customItems","line","discount_amount","discount_display_name","DISCOUNTED_AMOUNT","categoryTree","category","Function","apikey","scriptURI","_getScriptURI","_storeCreditActionCreator","_afterpayScriptLoader","storeCountryName","storeCountry","_mapCountryToISO2","_afterpaySdk","_redirectToAfterpay","countryName","redirect","AfterPay","isInternalAddressEqual","ignoredKeys","mapFromInternalAddress","_billingAddressActionCreator","_isPaymentMethodSelected","_walletOptions","_createWallet","referenceId","_getOrderReferenceId","sellerId","_getMerchantId","is3dsEnabled","_processPaymentWith3ds","_getOrderReferenceIdFromInitializationData","orderReferenceId","onPaymentSelect","onReady","walletOptions","amazonOrderReferenceId","design","designMode","orderReference","_synchronizeBillingAddress","_updateOrderReference","widget","Widgets","Wallet","remoteAddress","internalBillingAddress","getAmazonOrderReferenceId","initConfirmationFlow","confirmationFlow","success","_element","_createElement","parentElement","_registerClick","_unregisterClick","_removeAfterTransition","element","background","transitionDuration","zIndex","onClick","handeTransition","propertyName","promise","cancellable","cancel","race","_overlay","_threeDSecureOptions","preloadPaypal","tokenizeCard","requestData","_mapToCreditCard","creditCards","focusWindow","useraction","verifyCard","addFrame","removeFrame","cancelVerifyCard","verification","getSessionId","appendSessionId","processedPayment","creditCard","cardholderName","ccName","cvv","expirationDate","ccExpiry","month","year","endpoint","isCreditCardLike","CardinalInitializationType","CardinalEventType","CardinalValidatedAction","CardinalPaymentType","CardinalTriggerEvents","CardinalPaymentBrand","CardinalSignatureVerification","_braintreePaymentProcessor","_is3dsEnabled","_handleError","orderRequest","_preparePaymentData","_isUsingVaulting","tokenizedCard","_credit","braintreeOptions","isVaultingEnabled","_formattedPayload","vaultPaymentInstrument","device_info","paypal_account","_paymentStrategyActionCreator","visaInitOptions","_cardinalClient","prepare","start","runBinProcess","_getBinNumber","getThreeDSecureData","_getOrderData","entry","iin","CardinalSignatureValidationErrors","Init","Complete","Confirm","SetupCompleted","Validated","Success","NoAction","Failure","CCA","Paypal","VisaCheckout","ApplePay","DiscoverWallet","BinProcess","Yes","No","ChasePayEventType","_sdk","_getClientSDK","off","ActionCode","ErrorNumber","ErrorDescription","setup","jwt","binNumber","Status","threeDSecureData","orderData","Payment","ExtendedData","SignatureVerification","continueObject","AcsUrl","Payload","partialOrder","_mapToPartialOrder","continue","transactionId","consumer","BillingAddress","_mapToCardinalAddress","Account","_mapToCardinalAccount","Email1","ShippingAddress","Consumer","OrderDetails","OrderNumber","Amount","CurrencyCode","OrderChannel","TransactionId","AccountNumber","ExpirationMonth","ExpirationYear","NameOnAccount","CardCode","cardinalAddress","FirstName","LastName","Address1","City","State","PostalCode","CountryCode","Address2","Phone1","Cardinal","StartCheckout","CompleteCheckout","CancelCheckout","CardBrand","DigitalWalletType","_wepayRiskClient","_walletEvent$","walletButton","_configureWallet","_chasePayClient","_getPayment","_displayWallet","_createOrder","logoContainer","insertBrandings","onCancel","_setSessionToken","showLoadingAnimation","getRiskToken","riskToken","paymentCryptogram","cryptogramId","eci","btoa","reqTokenId","expDate","substr","accountNum","accountMask","extraData","_threeDSecureFlow","_googlePayOptions","statusCode","_klarnaScriptLoader","_supportedEUCountries","klarnaCredit","_klarnaCredit","_loadWidget","_authorize","authorization_token","authorizationToken","klarna","client_token","_getUpdateSessionData","_mapToKlarnaAddress","klarnaAddress","street_address","given_name","family_name","street_address2","updateSessionData","approved","show_form","Klarna","Credit","orderPayload","_shouldSubmitFullPayload","_isPaymentAcknowledged","_useRedirectFlow","paypalexpress","useRedirectFlow","_isInContextEnabled","_paypalSdk","closeFlow","_isAcknowledgedOrFinalized","initXO","startFlow","americanExpress","discover","discoverDiners","JCB","masterCard","unionPay","unknown","visa","squareGift","applePay","none","_syncPaymentMethod","createSquareForm","_paymentForm","_getFormOptions","build","_getNonceInstrument","_getCountryCode","toUpperCase","_deferredRequestNonce","requestCardNonce","deferred","square","squareOptions","_squareOptions","callbacks","cardNonceResponseReceived","cardData","billingContact","shippingContact","digital_wallet_type","_handleWalletNonceResponse","_handleCardNonceResponse","createPaymentRequest","_paymentRequestPayload","methodsSupported","methods","_showPaymentMethods","paymentFormLoaded","_setPostalCode","unsupportedBrowserDetected","requestShippingAddress","requestBillingInfo","storeName","pending","setPostalCode","masterpassBtn","elementId","SqPaymentForm","_stripeScriptLoader","stripeOptions","stripeJs","_stripeV3Client","cardElement","elements","_cardElement","_getStripeJs","handleCardPayment","stripeResponse","paymentIntent","createPaymentMethod","_mapStripePaymentMethodOptions","stripePaymentMethod","stripeCardPaymentOptions","_mapStripeCardPaymentOptions","payment_method","_mapStripeBillingAddress","_mapStripeShippingAddress","_mapStripeBillingDetails","stripeBillingDetails","_mapStripeShippingDetails","stripeShippingDetails","_getCustomer","shippingDetails","receipt_email","save_payment_method","billing_details","publishableKey","Stripe","betas","_riskClient","WePay","risk","generate_risk_token","get_risk_token","orderActionCreator","paymentActionCreator","payloadWithToken","_zipScriptLoader","zip","_zipClient","zipClient","Checkout","_prepareForReferredRegistration","onCheckout","openModal","externalId","Zip","ProjectionActionType","_instrumentRequestSender","loadInstruments","session","_getSessionContext","_getCurrentAccessToken","_getValidAccessToken","currentToken","deleteInstrument","_isValidVaultAccessToken","date","valueOf","vaultAccessExpiry","newDate","setMinutes","getMinutes","getVaultAccessToken","storeId","transformResponse","_transformVaultedInstruments","vaulted_instruments","transformErrorResponse","transformVaultAccessResponse","expires_at","method_type","defaultInstrument","default_instrument","external_id","trustedShippingAddress","trusted_shipping_address","last_4","expiryMonth","expiry_month","expiryYear","expiry_year","_transformer","requestContext","_loadInstrumentsWithAddress","_loadInstruments","deleteShopperInstrument","loadInstrumentsWithAddress","_shippingCountryRequestSender","selectOption","mergedOptions","_consignmentActionCreator","_createAddressBook","optionId","onAddressSelect","AddressBook","_synchronizeShippingAddress","callback","MutationObserver","googleRecaptchaScriptLoader","mutationObserverFactory","_memoized","recaptcha","sitekey","event$","getResponse","reset","b","_event$","_recaptcha","retryWhen","delay","_watchRecaptchaChallengeWindow","iframeContainer","observe","attributeFilter","_loadPromise","_loadScript","grecaptcha","Synchronize","cloneDeep","input","cloneDeepSafe","cloneResult","createShallowEqualSelector","createSelectorCreator","defaultMemoize","createCheckoutSelectorsFactory","getShippingOptions","getSelectedShippingOption","getBillingCountries","getSelectedPaymentMethod","getError","getSelectShippingOptionError","isPending","isSelectingShippingOption","isCustomerStepPending","isPaymentStepPending","isSubmittingOrder","createCheckoutStoreSelector","availableShippingOptions","val","createCheckoutStoreErrorSelector","getLoadCheckoutError","getUpdateCheckoutError","getSubmitOrderError","getFinalizeOrderError","getLoadOrderError","getLoadCartError","getLoadBillingCountriesError","getLoadShippingCountriesError","getLoadPaymentMethodsError","getLoadPaymentMethodError","getInitializePaymentError","getInitializeCustomerError","getUpdateBillingAddressError","getUpdateShippingAddressError","getDeleteConsignmentError","getUpdateConsignmentError","getCreateConsignmentsError","getInitializeShippingError","getApplyStoreCreditError","getApplyCouponError","getRemoveCouponError","getApplyGiftCertificateError","getRemoveGiftCertificateError","getLoadInstrumentsError","getDeleteInstrumentError","getLoadConfigError","createCheckoutStoreStatusSelector","isLoadingCheckout","isUpdatingCheckout","isFinalizingOrder","isLoadingOrder","isLoadingCart","isLoadingBillingCountries","isLoadingShippingCountries","isLoadingPaymentMethods","isLoadingPaymentMethod","isInitializingPayment","isInitializingCustomer","isUpdatingBillingAddress","isUpdatingShippingAddress","isUpdatingConsignment","isDeletingConsignment","isCreatingConsignments","isInitializingShipping","isApplyingStoreCredit","isLoadingInstruments","isDeletingInstrument","isLoadingConfig","_messageCustomizer","trim","_countryActionCreator","_couponActionCreator","_errorActionCreator","_giftCertificateActionCreator","_instrumentActionCreator","_shippingCountryActionCreator","_shippingStrategyActionCreator","isDevelopment","projection","_errorTransformer","_selectorsFactory","_storeProjection","initial","notifyState","_dispatch","loadCheckoutAction","loadConfigAction","finalizeOrderIfNeeded","deinitializePayment","loadBillingCountries","loadShippingCountries","loadBillingAddressFields","loadShippingAddressFields","initializeCustomer","deinitializeCustomer","continueAsGuest","deinitializeShipping","assignItemsToAddress","unassignItemsToAddress","selectConsignmentShippingOption","updateBillingAddress","initializeSpamProtection","executeSpamCheck","CheckoutService","createCheckoutService","paymentClient","setHost","paymentSettings","bigpayBaseUrl","orderRequestSender","checkoutRequestSender","configActionCreator","spamProtection","createScriptLoader","MutationObserverFactory","spamProtectionRequestSender","spamProtectionActionCreator","paymentMethodActionCreator","remoteCheckoutRequestSender","remoteCheckoutActionCreator","paymentRequestTransformer","paymentRequestSender","billingAddressActionCreator","braintreePaymentProcessor","overlay","checkoutValidator","storeCreditActionCreator","paymentStrategyActionCreator","getStylesheetLoader","createPaymentStrategyRegistry","consignmentRequestSender","consignmentActionCreator","handleFrameLoadedEvent","hasAttribute","isCustomError","_untargetedMessagePoster","_messageHandlers","postComplete","_postMessage","postError","_transformError","postFrameError","untargeted","postFrameLoaded","postLoaded","postSignedOut","receiveStyles","handler","_notifyMessageHandlers","IframeEmbeddedCheckoutMessenger","NoopEmbeddedCheckoutMessenger","createEmbeddedCheckoutMessenger","parentWindow","parentOrigin","_logger","locales","translations","_locales","_translations","_formatters","mapKeys","translationKey","KEY_PREFIX","getLocale","_hasTranslations","translate","prefixedKey","messageFormat","compile","_transformData","_transformConfig","output","defaultTranslations","_flattenObject","union","parentKey","resultKey","LanguageService","createLanguageService","currencySettings","symbolLocation","symbol","thousandsSeparator","decimalSeparator","parseInt","_symbolLocation","_symbol","_thousandsSeparator","_decimalSeparator","formattedNumber","_formatNumber","formattedCurrency","_formatCurrency","positiveAmount","abs","decimalAmount","parsedIntegerAmount","_toFixed","precision","_storeConfig","_customerFormatter","shopperCurrency","_storeFormatter","toCustomerCurrency","exchangeRate","toStoreCurrency","CurrencyService","createCurrencyService","AnalyticStepId","CUSTOMER","SHIPPING","BILLING","PAYMENT","ANALYTIC_STEPS","checkoutService","storage","analytics","checkoutSteps","_checkoutStarted","_completedSteps","_viewedSteps","_analyticStepOrder","trackCheckoutStarted","extraItemsData","saveExtraItemsData","track","getTrackingPayload","revenue","tax","trackOrderComplete","readExtraItemsData","clearExtraItemData","trackStepViewed","stepId","getIdFromStep","hasStepViewed","trackViewed","backfill","trackStepCompleted","hasStepCompleted","trackCompleted","shippingMethod","getPaymentMethodName","shippingMethodId","completedStepId","affiliation","toShopperCurrency","products","getProducts","getShopperCurrency","getStoreProfile","getStorageKey","ORDER_ITEMS_STORAGE_KEY","itemsData","product_id","giftCertificateItems","physicalAndDigitalItems","itemAttributes","image_url","variant","createStepTracker","stepTrackerConfig","isAnalyticsEnabled","ButtonType","ButtonColor","Long","Short","Default","Black","White","_googlePayScriptLoader","_googlePayInitializer","_consigmentActionCreator","buttonType","buttonColor","_googlePayClient","loadPaymentData","_getPaymentDataRequest","_updateBillingAddress","_mapGooglePayAddressToShippingAddress","googlePay","paymentDataRequest","_getGooglePayClient","_paymentDataRequest","isReadyToPay","google","api","PaymentsClient","_mapGooglePayAddressToBillingAddress","companyName","address3","administrativeArea","postPaymentData","remoteBillingAddress","googlePayAddressMapped","createGooglePayPaymentProcessor","initializer","mapToInternalCart","promotions","notifications","promotion","banners","banner","placeholders","messageHtml","certificate","isShippingRequired","taxSubtotal","billingAddressRequestBody","existingBillingAddressRequestBody","_createOrUpdateBillingAddress","scheduler","schedule","emptyScheduled","scheduled","FilterOperator","FilterSubscriber","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","connectableObservableDescriptor","work","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","_execute","errored","errorValue","undefined","Action","SchedulerAction","Scheduler","delegate","active","shift","scheduleArray","subscribeToArray","ArgumentOutOfRangeErrorImpl","ArgumentOutOfRangeError","EmptyErrorImpl","EmptyError","getSymbolIterator","iterator","$$iterator","mergeMap","resultSelector","concurrent","POSITIVE_INFINITY","ii","MergeMapOperator","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_innerSub","ish","innerSubscription","subscribeToResult","defaultValue","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","isEmpty","_enable_super_gross_mode_that_will_cause_bad_things","ObjectUnsubscribedErrorImpl","NotificationKind","kind","hasValue","do","accept","nextOrObserver","toObservable","createNext","Notification","undefinedValueNotification","createComplete","completeNotification","isScheduler","fromArray","hasNext","AsyncSubject","concatAll","observables","parseFloat","errorFactory","ThrowIfEmptyOperator","ThrowIfEmptySubscriber","defaultErrorFactory","accumulator","seed","scan","takeLast","defaultIfEmpty","acc","_delay","_resolve","_promise","_timeoutToken","random","$$rxSubscriber","fns","prev","RefCountOperator","_refCount","refCounter","RefCountSubscriber","connection","connect","refCount","sharedConnection","_connection","bufferSize","windowTime","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","ObserveOnSubscriber","queue","eventsCount","spliceCount","time","ReplaySubject","NONE","CombineLatestOperator","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","apply","subscribeToObservable","isArrayLike","isPromise","subscribeToPromise","subscribeToIterable","observableFactory","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","done","_tryresultSelector","nextResult","TakeOperator","TakeSubscriber","TakeLastOperator","TakeLastSubscriber","ring","idx","hasSeed","ScanOperator","ScanSubscriber","_seed","SwitchMapOperator","SwitchMapSubscriber","predicateFn","PaymentMethodIdMapper","MULTI_OPTION","BRAINTREE_VISACHECKOUT","BRAINTREE_GOOGLEPAY","isBraintreePaymentMethod","UrlHelper","RequestSender","requestFactory","payloadTransformer","RequestFactory","PayloadTransformer","DEFAULT_OPTIONS","xhr","createRequest","fromResponse","isSuccessfulRequest","toRequest","send","POST","GET","DELETE","_requestFactory","_payloadTransformer","_cookie","_mergeDefaultOptions","_prependHost","requestHandler","toResponse","onload","onerror","onabort","ontimeout","abort","toRequestBody","patch","defaultOptions","csrfToken","reducer","_reducer","equalityCheck","shallowEqual","_state$","BehaviorSubject","_notification$","_dispatchers","_dispatchQueue$","_errors","dispatcher$","concatMap","states","_transformStates","transformedState","getValue","distinctUntilChanged","stateA","stateB","_dispatchObservableAction","_dispatchThunkAction","_dispatchAction","state$","filterFn","skip","previousValue","_getDispatchError","error$","transformedAction$","_getDispatcher","tap","thunkAction","isFrozen","freeze","reducers","currentState","assign","UnsubscriptionErrorImpl","connectableProto","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable","writable","subscriberIndex","keySelector","elementSelector","durationSelector","subjectSelector","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","Map","group","groupedObservable","GroupedObservable","duration","GroupDurationSubscriber","clear","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","_value","QueueScheduler","QueueAction","ObserveOnOperator","arg","notification","scheduleMessage","ObserveOnMessage","asap","AsapScheduler","AsapAction","TimeoutErrorImpl","TimeoutError","mergeAll","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","NEVER","pred","notPred","RaceOperator","RaceSubscriber","hasFirst","period","dueTime","periodOrScheduler","isNumeric","due","AuditOperator","AuditSubscriber","throttled","clearThrottle","isNaN","compare","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","y","FindValueOperator","yieldIndex","FindValueSubscriber","defaultThrottleConfig","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasValue","_sendValue","_throttled","throttle","tryDurationSelector","throttlingDone","withObservable","absoluteTimeout","isDate","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","_browserSupport","_scripts","_preloadedScripts","script","onreadystatechange","loadScripts","urls","preloadScript","prefetch","rel","canSupportRel","preloadedScript","as","preloadScripts","relList","supports","_stylesheets","_preloadedStylesheets","stylesheet","prepend","children","insertBefore","loadStylesheets","preloadStylesheet","preloadedStylesheet","preloadStylesheets","_formBuilder","handleUnload","submit","isAbsoluteUrl","joinPaths","API","APPLICATION_JSON","cookie","JSON_CONTENT_TYPE_REGEXP","FORM_URLENCODED_CONTENT_TYPE_REGEXP","contentType","_getHeader","_parseResponseHeaders","getAllResponseHeaders","_parseResponseBody","responseText","rawHeaders","parts","XMLHttpRequest","_configureRequest","_formatUrl","_configureRequestHeaders","withCredentials","setRequestHeader","queryString","strictUriEncode","objectAssign","decodeComponent","encode","opts","strict","extract","str","queryStart","formatter","arrayFormat","exec","parserForArrayFormat","ret","keysSorter","obj","encoderForArrayFormat","val2","query","flowRight","curryRight","animationFrame","VirtualTimeScheduler","VirtualAction","isObservable","bindCallback","bindNodeCallback","combineLatest","forkJoin","fromEvent","fromEventPattern","generate","iif","interval","never","onErrorResumeNext","pairs","partition","range","timer","using","Immediate","setImmediate","clearImmediate","nextHandle","RESOLVED","activeHandles","findAndClearHandle","handle","cb","TestTools","AnimationFrameScheduler","AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","maxFrames","frame","frameTimeFactor","sortActions","callbackFunc","innerArgs","dispatchNext","dispatchError","iterable","return","obs","forkJoinInternal","sources","completed","emitted","eventName","setupSubscription","sourceObj","isEventTarget","isJQueryStyleEventEmitter","isNodeStyleEventEmitter","addHandler","removeHandler","retValue","condition","needIterate","iterate","conditionResult","initialStateOrOptions","resultSelectorOrObservable","trueResult","falseResult","counter","subNext","remainder","not","current","resourceFactory","resource","memoized","isRootCacheKeyMap","audit","auditTime","bufferCount","bufferTime","bufferToggle","bufferWhen","combineAll","concatMapTo","debounce","debounceTime","delayWhen","dematerialize","distinct","distinctUntilKeyChanged","elementAt","endWith","exhaust","exhaustMap","expand","groupBy","ignoreElements","mapTo","materialize","mergeMapTo","mergeScan","min","multicast","observeOn","pairwise","pluck","publish","publishBehavior","publishLast","publishReplay","repeat","repeatWhen","retry","sample","sampleTime","sequenceEqual","share","single","skipLast","skipUntil","skipWhile","startWith","subscribeOn","switchAll","switchMapTo","takeUntil","takeWhile","throttleTime","throwIfEmpty","timeInterval","timeoutWith","timestamp","toArray","windowCount","windowToggle","windowWhen","withLatestFrom","zipAll","closingNotifier","BufferOperator","BufferSubscriber","startBufferEvery","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","bufferTimeSpan","bufferCreationInterval","maxBufferSize","BufferTimeOperator","BufferTimeSubscriber","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","Context","prevContext","openings","closingSelector","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","CatchOperator","caught","CatchSubscriber","err2","innerObservable","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","durationSubscription","emitValue","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","delayFor","DelayOperator","DelaySubscriber","_schedule","scheduleNotification","DelayMessage","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeOperator","DeMaterializeSubscriber","flushes","DistinctOperator","DistinctSubscriber","Set","_useKeySelector","_finalizeNext","has","hasDefaultValue","v","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstOperator","SwitchFirstSubscriber","hasSubscription","ExhaustMapOperator","ExhaustMapSubscriber","tryNext","ExpandOperator","ExpandSubscriber","subscribeToProjection","FinallyOperator","FinallySubscriber","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","MapToOperator","MapToSubscriber","MaterializeOperator","MaterializeSubscriber","comparer","MergeScanOperator","MergeScanSubscriber","nextSources","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseOperator","PairwiseSubscriber","hasPrev","pair","properties","props","currentProp","plucker","selectorOrScheduler","RepeatOperator","RepeatSubscriber","notifier","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","compareTo","SequenceEqualOperator","SequenceEqualSubscriber","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","areEqual","nextB","completeB","shareSubjectFactory","configOrBufferSize","useRefCount","shareReplayOperator","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilOperator","SkipUntilSubscriber","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","SubscribeOnOperator","SubscribeOnObservable","delayTime","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","inclusive","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","TimeInterval","Timestamp","toArrayReducer","arr","windowBoundaries","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowSize","startWindowEvery","WindowCountOperator","WindowCountSubscriber","windows","windowTimeSpan","windowCreationInterval","maxWindowSize","WindowTimeOperator","WindowTimeSubscriber","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","CountedSubject","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","inner","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","found","_tryProject","instance","formBuilder","_createInput","pathA","pathB","path","removeLeadingSlash","createClient","Client","paymentSubmitter","offsitePaymentInitializer","clientTokenGenerator","storeRequestSender","clientConfig","DEFAULT_CONFIG","OffsitePaymentInitializer","PaymentSubmitter","ClientTokenGenerator","StoreRequestSender","generateClientToken","urlHelper","payloadMapper","PayloadMapper","mapToPayload","getOffsitePaymentUrl","addressMapper","customerMapper","metaMapper","paymentMethodIdMapper","storeMapper","AddressMapper","CustomerMapper","MetaMapper","StoreMapper","bc_auth_token","mapToId","notify_url","page_title","payment_method_id","reference_id","return_url","mapToBillingAddress","mapToCustomer","mapToMeta","mapToShippingAddress","mapToStore","omitNil","isEmptyStringOrNil","isNil","string","mapToAddress","addressKey","formattedAddressKey","toSnakeCase","customer_browser_info","navigator","userAgent","customer_email","customer_first_name","customer_geo_ip_country_code","customer_id","customer_last_name","customer_locale","customer_name","customer_phone","customer_reference","meta_referrer","referrer","meta_source","meta_user_agent","store_hash","storeHash","store_id","getPaymentUrl","mapToHeaders","postRequest","orderMapper","paymentMapper","OrderMapper","PaymentMapper","mapToOrder","mapToPayment","Authorization","customer_group","geo_ip_country_code","session_token","mapToCoupons","mapToItems","mapToShipping","totals","mapToOrderTotals","omitEmptyStringAndNil","transit_time","state_code","street_1","street_2","itemData","variant_id","grand_total","device","deviceFingerprint","fingerprint_id","mapToBigPayToken","credit_card_token","credit_card_cryptogram","mapToCryptogram","credit_card","mapToCreditCard","account_name","toNumber","verification_value","customer_code","ccCustomerCode","three_d_secure","credit_card_number_confirmation","payment_cryptogram","xid","account_mask","parseResponseHeaders","getResponseHeader","setOptions","setHeaders","clientTokenMapper","ClientTokenMapper","getGenerateClientTokenUrl","mapToClientToken","cartMapper","gatewayMapper","quoteMapper","CartMapper","GatewayMapper","QuoteMapper","mapToCart","mapToGateway","quote","mapToQuote","currency_code","integerTax","mapToType","discount_total","shipping_total","surcharge_total","tax_total","ItemPhysicalEntity","ItemDigitalEntity","ItemGiftCertificateEntity","mapToLocale","store_identity","mapToIdentity","mapToUrls","language_code","cartLink","confirmation","orderConfirmationLink","home","shopPath","getInstrumentsUrl","getTrustedShippingAddressUrl","mapToTrustedShippingAddressPayload","getInstrumentByIdUrl","mapToInstrumentPayload","providerName","cardholder_name","verification_code","verificationCode","issue_month","issueMonth","issue_year","issueYear","issue_number","issueNumber","track_data","trackData","is_manual_entry","isManualEntry","icc_data","iccData","fallback_reason","fallbackReason","is_contactless","isContactless","encrypted_pin_cryptogram","encryptedPinCryptogram","encrypted_pin_ksn","encryptedPinKsn"],"mappings":"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","file":"transients~checkout-42e941bf.js","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export { default as includes } from './includes';\nexport { default as isNil } from './is-nil';\nexport { default as isObject } from './is-object';\nexport { default as omitEmptyStringAndNil } from './omit-emptystring-and-nil';\nexport { default as omitNil } from './omit-nil';\nexport { default as omitProperty } from './omit-property';\nexport { default as toNumber } from './to-number';\nexport { default as toSnakeCase } from './to-snake-case';\nexport { default as toString } from './to-string';\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","export { default as createFormPoster } from './create-form-poster';\nexport { default as FormPoster } from './form-poster';\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 153);\n","module.exports = require(\"tslib\");","module.exports = require(\"@bigcommerce/data-store\");","module.exports = require(\"lodash\");","module.exports = require(\"rxjs\");","module.exports = require(\"@bigcommerce/memoize\");","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nimport { ConsignmentMeta } from './consignment';\n\nexport enum ConsignmentActionType {\n    CreateConsignmentsRequested = 'CREATE_CONSIGNMENTS_REQUESTED',\n    CreateConsignmentsSucceeded = 'CREATE_CONSIGNMENTS_SUCCEEDED',\n    CreateConsignmentsFailed = 'CREATE_CONSIGNMENTS_FAILED',\n\n    UpdateConsignmentRequested = 'UPDATE_CONSIGNMENT_REQUESTED',\n    UpdateConsignmentSucceeded = 'UPDATE_CONSIGNMENT_SUCCEEDED',\n    UpdateConsignmentFailed = 'UPDATE_CONSIGNMENT_FAILED',\n\n    DeleteConsignmentRequested = 'DELETE_CONSIGNMENT_REQUESTED',\n    DeleteConsignmentSucceeded = 'DELETE_CONSIGNMENT_SUCCEEDED',\n    DeleteConsignmentFailed = 'DELETE_CONSIGNMENT_FAILED',\n\n    UpdateShippingOptionRequested = 'UPDATE_SHIPPING_OPTION_REQUESTED',\n    UpdateShippingOptionSucceeded = 'UPDATE_SHIPPING_OPTION_SUCCEEDED',\n    UpdateShippingOptionFailed = 'UPDATE_SHIPPING_OPTION_FAILED',\n\n    LoadShippingOptionsRequested = 'LOAD_SHIPPING_OPTIONS_REQUESTED',\n    LoadShippingOptionsSucceeded = 'LOAD_SHIPPING_OPTIONS_SUCCEEDED',\n    LoadShippingOptionsFailed = 'LOAD_SHIPPING_OPTIONS_FAILED',\n}\n\nexport type ConsignmentAction =\n    CreateConsignmentsAction |\n    UpdateConsignmentAction |\n    DeleteConsignmentAction |\n    UpdateShippingOptionAction |\n    LoadShippingOptionsAction;\n\nexport type CreateConsignmentsAction =\n    CreateConsignmentsRequestedAction |\n    CreateConsignmentsSucceededAction |\n    CreateConsignmentsFailedAction;\n\nexport type UpdateConsignmentAction =\n    UpdateConsignmentRequestedAction |\n    UpdateConsignmentSucceededAction |\n    UpdateConsignmentFailedAction;\n\nexport type DeleteConsignmentAction =\n    DeleteConsignmentRequestedAction |\n    DeleteConsignmentSucceededAction |\n    DeleteConsignmentFailedAction;\n\nexport type UpdateShippingOptionAction =\n    UpdateShippingOptionRequestedAction |\n    UpdateShippingOptionSucceededAction |\n    UpdateShippingOptionFailedAction;\n\nexport type LoadShippingOptionsAction =\n    LoadShippingOptionsRequestedAction |\n    LoadShippingOptionsSucceededAction |\n    LoadShippingOptionsFailedAction;\n\nexport interface CreateConsignmentsRequestedAction extends Action {\n    type: ConsignmentActionType.CreateConsignmentsRequested;\n}\n\nexport interface CreateConsignmentsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.CreateConsignmentsSucceeded;\n}\n\nexport interface CreateConsignmentsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.CreateConsignmentsFailed;\n}\n\nexport interface UpdateConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentRequested;\n}\n\nexport interface UpdateConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentSucceeded;\n}\n\nexport interface UpdateConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentFailed;\n}\n\nexport interface DeleteConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentRequested;\n}\n\nexport interface DeleteConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentSucceeded;\n}\n\nexport interface DeleteConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentFailed;\n}\n\nexport interface UpdateShippingOptionRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionRequested;\n}\n\nexport interface UpdateShippingOptionSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionSucceeded;\n}\n\nexport interface UpdateShippingOptionFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionFailed;\n}\n\nexport interface LoadShippingOptionsRequestedAction extends Action {\n    type: ConsignmentActionType.LoadShippingOptionsRequested;\n}\n\nexport interface LoadShippingOptionsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.LoadShippingOptionsSucceeded;\n}\n\nexport interface LoadShippingOptionsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.LoadShippingOptionsFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum CustomerStrategyActionType {\n    SignInFailed = 'CUSTOMER_STRATEGY_SIGN_IN_FAILED',\n    SignInRequested = 'CUSTOMER_STRATEGY_SIGN_IN_REQUESTED',\n    SignInSucceeded = 'CUSTOMER_STRATEGY_SIGN_IN_SUCCEEDED',\n    SignOutFailed = 'CUSTOMER_STRATEGY_SIGN_OUT_FAILED',\n    SignOutRequested = 'CUSTOMER_STRATEGY_SIGN_OUT_REQUESTED',\n    SignOutSucceeded = 'CUSTOMER_STRATEGY_SIGN_OUT_SUCCEEDED',\n    InitializeFailed = 'CUSTOMER_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'CUSTOMER_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'CUSTOMER_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'CUSTOMER_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'CUSTOMER_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'CUSTOMER_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type CustomerStrategyAction =\n    CustomerStrategySignInAction |\n    CustomerStrategySignOutAction |\n    CustomerStrategyInitializeAction |\n    CustomerStrategyDeinitializeAction |\n    CustomerStrategyWidgetAction;\n\nexport type CustomerStrategySignInAction =\n    SignInRequestedAction |\n    SignInSucceededAction |\n    SignInFailedAction;\n\nexport type CustomerStrategySignOutAction =\n    SignOutRequestedAction |\n    SignOutSucceededAction |\n    SignOutFailedAction;\n\nexport type CustomerStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type CustomerStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type CustomerStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface SignInRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignInRequested;\n}\n\nexport interface SignInSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignInSucceeded;\n}\n\nexport interface SignInFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignInFailed;\n}\n\nexport interface SignOutRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignOutRequested;\n}\n\nexport interface SignOutSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignOutSucceeded;\n}\n\nexport interface SignOutFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignOutFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderPaymentsAction } from '../order';\n\nexport enum PaymentStrategyActionType {\n    ExecuteFailed = 'PAYMENT_STRATEGY_EXECUTE_FAILED',\n    ExecuteRequested = 'PAYMENT_STRATEGY_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'PAYMENT_STRATEGY_EXECUTE_SUCCEEDED',\n    FinalizeFailed = 'PAYMENT_STRATEGY_FINALIZE_FAILED',\n    FinalizeRequested = 'PAYMENT_STRATEGY_FINALIZE_REQUESTED',\n    FinalizeSucceeded = 'PAYMENT_STRATEGY_FINALIZE_SUCCEEDED',\n    InitializeFailed = 'PAYMENT_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'PAYMENT_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'PAYMENT_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'PAYMENT_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'PAYMENT_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'PAYMENT_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type PaymentStrategyAction =\n    PaymentStrategyExecuteAction |\n    PaymentStrategyFinalizeAction |\n    PaymentStrategyInitializeAction |\n    PaymentStrategyDeinitializeAction |\n    PaymentStrategyWidgetAction;\n\nexport type PaymentStrategyExecuteAction =\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyFinalizeAction =\n    FinalizeRequestedAction |\n    FinalizeSucceededAction |\n    FinalizeFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type PaymentStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type PaymentStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface ExecuteRequestedAction extends Action {\n    type: PaymentStrategyActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action {\n    type: PaymentStrategyActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.ExecuteFailed;\n}\n\nexport interface FinalizeRequestedAction extends Action {\n    type: PaymentStrategyActionType.FinalizeRequested;\n}\n\nexport interface FinalizeSucceededAction extends Action {\n    type: PaymentStrategyActionType.FinalizeSucceeded;\n}\n\nexport interface FinalizeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.FinalizeFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum ShippingStrategyActionType {\n    UpdateAddressFailed = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_FAILED',\n    UpdateAddressRequested = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_REQUESTED',\n    UpdateAddressSucceeded = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_SUCCEEDED',\n    SelectOptionFailed = 'SHIPPING_STRATEGY_SELECT_OPTION_FAILED',\n    SelectOptionRequested = 'SHIPPING_STRATEGY_SELECT_OPTION_REQUESTED',\n    SelectOptionSucceeded = 'SHIPPING_STRATEGY_SELECT_OPTION_SUCCEEDED',\n    InitializeFailed = 'SHIPPING_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'SHIPPING_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'SHIPPING_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'SHIPPING_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'SHIPPING_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'SHIPPING_STRATEGY_DEINITIALIZE_SUCCEEDED',\n}\n\nexport type ShippingStrategyAction =\n    ShippingStrategyUpdateAddressAction |\n    ShippingStrategySelectOptionAction |\n    ShippingStrategyInitializeAction |\n    ShippingStrategyDeinitializeAction;\n\nexport type ShippingStrategyUpdateAddressAction =\n    UpdateAddressRequestedAction |\n    UpdateAddressSucceededAction |\n    UpdateAddressFailedAction;\n\nexport type ShippingStrategySelectOptionAction =\n    SelectOptionRequestedAction |\n    SelectOptionSucceededAction |\n    SelectOptionFailedAction;\n\nexport type ShippingStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type ShippingStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport interface UpdateAddressRequestedAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressRequested;\n}\n\nexport interface UpdateAddressSucceededAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressSucceeded;\n}\n\nexport interface UpdateAddressFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.UpdateAddressFailed;\n}\n\nexport interface SelectOptionRequestedAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionRequested;\n}\n\nexport interface SelectOptionSucceededAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionSucceeded;\n}\n\nexport interface SelectOptionFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.SelectOptionFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.DeinitializeFailed;\n}\n","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingBillingAddress,\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentMethod,\n    MissingPaymentToken,\n    MissingShippingAddress,\n}\n\n/**\n * Throw this error when data that is expected to exist is missing. Usually it\n * is due to the fact that certain data has not been retrieved from or saved to\n * the server yet. And such data is required to perform certain actions.\n */\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'MissingDataError';\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingBillingAddress:\n        return 'Unable to proceed because billing address data is unavailable.';\n\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentToken:\n        return 'Unable to proceed because the token required to submit a payment is missing.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    case MissingDataErrorType.MissingShippingAddress:\n        return 'Unable to proceed because shipping address data is unavailable.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","module.exports = require(\"rxjs/operators\");","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadConfigAction } from '../config';\n\nimport Checkout from './checkout';\n\nexport enum CheckoutActionType {\n    LoadCheckoutRequested = 'LOAD_CHECKOUT_REQUESTED',\n    LoadCheckoutSucceeded = 'LOAD_CHECKOUT_SUCCEEDED',\n    LoadCheckoutFailed = 'LOAD_CHECKOUT_FAILED',\n\n    UpdateCheckoutRequested = 'UPDATE_CHECKOUT_REQUESTED',\n    UpdateCheckoutSucceeded = 'UPDATE_CHECKOUT_SUCCEEDED',\n    UpdateCheckoutFailed = 'UPDATE_CHECKOUT_FAILED',\n}\n\nexport type CheckoutAction = LoadCheckoutAction | UpdateCheckoutAction;\n\nexport type LoadCheckoutAction =\n    LoadCheckoutRequestedAction |\n    LoadCheckoutSucceededAction |\n    LoadCheckoutFailedAction |\n    LoadConfigAction;\n\nexport type UpdateCheckoutAction =\n    UpdateCheckoutRequestedAction |\n    UpdateCheckoutSucceededAction |\n    UpdateCheckoutFailedAction;\n\nexport interface LoadCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.LoadCheckoutRequested;\n}\n\nexport interface LoadCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.LoadCheckoutSucceeded;\n}\n\nexport interface LoadCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.LoadCheckoutFailed;\n}\n\nexport interface UpdateCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.UpdateCheckoutRequested;\n}\n\nexport interface UpdateCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.UpdateCheckoutSucceeded;\n}\n\nexport interface UpdateCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.UpdateCheckoutFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { InternalOrderResponseData } from './internal-order-responses';\nimport Order from './order';\n\nexport enum OrderActionType {\n    LoadOrderRequested = 'LOAD_ORDER_REQUESTED',\n    LoadOrderSucceeded = 'LOAD_ORDER_SUCCEEDED',\n    LoadOrderFailed = 'LOAD_ORDER_FAILED',\n\n    LoadOrderPaymentsRequested = 'LOAD_ORDER_PAYMENTS_REQUESTED',\n    LoadOrderPaymentsSucceeded = 'LOAD_ORDER_PAYMENTS_SUCCEEDED',\n    LoadOrderPaymentsFailed = 'LOAD_ORDER_PAYMENTS_FAILED',\n\n    SubmitOrderRequested = 'SUBMIT_ORDER_REQUESTED',\n    SubmitOrderSucceeded = 'SUBMIT_ORDER_SUCCEEDED',\n    SubmitOrderFailed = 'SUBMIT_ORDER_FAILED',\n\n    FinalizeOrderRequested = 'FINALIZE_ORDER_REQUESTED',\n    FinalizeOrderSucceeded = 'FINALIZE_ORDER_SUCCEEDED',\n    FinalizeOrderFailed = 'FINALIZE_ORDER_FAILED',\n}\n\nexport type OrderAction = LoadOrderAction |\n    LoadOrderPaymentsAction |\n    SubmitOrderAction |\n    FinalizeOrderAction;\n\nexport type LoadOrderPaymentsAction = LoadOrderPaymentsRequestedAction |\n    LoadOrderPaymentsSucceededAction |\n    LoadOrderPaymentsFailedAction;\n\nexport type LoadOrderAction =\n    LoadOrderRequestedAction |\n    LoadOrderSucceededAction |\n    LoadOrderFailedAction;\n\nexport type SubmitOrderAction =\n    SubmitOrderRequestedAction |\n    SubmitOrderSucceededAction |\n    SubmitOrderFailedAction |\n    LoadOrderAction;\n\nexport type FinalizeOrderAction =\n    FinalizeOrderRequestedAction |\n    FinalizeOrderSucceededAction |\n    FinalizeOrderFailedAction |\n    LoadOrderAction;\n\nexport interface LoadOrderRequestedAction extends Action {\n    type: OrderActionType.LoadOrderRequested;\n}\n\nexport interface LoadOrderSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderSucceeded;\n}\n\nexport interface LoadOrderFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderFailed;\n}\n\nexport interface LoadOrderPaymentsRequestedAction extends Action {\n    type: OrderActionType.LoadOrderPaymentsRequested;\n}\n\nexport interface LoadOrderPaymentsSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderPaymentsSucceeded;\n}\n\nexport interface LoadOrderPaymentsFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderPaymentsFailed;\n}\n\nexport interface SubmitOrderRequestedAction extends Action {\n    type: OrderActionType.SubmitOrderRequested;\n}\n\nexport interface SubmitOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.SubmitOrderSucceeded;\n}\n\nexport interface SubmitOrderFailedAction extends Action<Error> {\n    type: OrderActionType.SubmitOrderFailed;\n}\n\nexport interface FinalizeOrderRequestedAction extends Action {\n    type: OrderActionType.FinalizeOrderRequested;\n}\n\nexport interface FinalizeOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.FinalizeOrderSucceeded;\n}\n\nexport interface FinalizeOrderFailedAction extends Action<Error> {\n    type: OrderActionType.FinalizeOrderFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport enum PaymentMethodActionType {\n    LoadPaymentMethodRequested = 'LOAD_PAYMENT_METHOD_REQUESTED',\n    LoadPaymentMethodSucceeded = 'LOAD_PAYMENT_METHOD_SUCCEEDED',\n    LoadPaymentMethodFailed = 'LOAD_PAYMENT_METHOD_FAILED',\n\n    LoadPaymentMethodsRequested = 'LOAD_PAYMENT_METHODS_REQUESTED',\n    LoadPaymentMethodsSucceeded = 'LOAD_PAYMENT_METHODS_SUCCEEDED',\n    LoadPaymentMethodsFailed = 'LOAD_PAYMENT_METHODS_FAILED',\n}\n\nexport type PaymentMethodAction = LoadPaymentMethodAction | LoadPaymentMethodsAction;\n\nexport type LoadPaymentMethodAction =\n    LoadPaymentMethodRequestedAction |\n    LoadPaymentMethodSucceededAction |\n    LoadPaymentMethodFailedAction;\n\nexport type LoadPaymentMethodsAction =\n    LoadPaymentMethodsRequestedAction |\n    LoadPaymentMethodsSucceededAction |\n    LoadPaymentMethodsFailedAction;\n\nexport interface LoadPaymentMethodRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodRequested;\n}\n\nexport interface LoadPaymentMethodSucceededAction extends Action<PaymentMethod> {\n    type: PaymentMethodActionType.LoadPaymentMethodSucceeded;\n}\n\nexport interface LoadPaymentMethodFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodFailed;\n}\n\nexport interface LoadPaymentMethodsRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodsRequested;\n}\n\nexport interface LoadPaymentMethodsSucceededAction extends Action<PaymentMethod[], PaymentMethodMeta> {\n    type: PaymentMethodActionType.LoadPaymentMethodsSucceeded;\n}\n\nexport interface LoadPaymentMethodsFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodsFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum BillingAddressActionType {\n    UpdateBillingAddressRequested = 'UPDATE_BILLING_ADDRESS_REQUESTED',\n    UpdateBillingAddressSucceeded = 'UPDATE_BILLING_ADDRESS_SUCCEEDED',\n    UpdateBillingAddressFailed = 'UPDATE_BILLING_ADDRESS_FAILED',\n\n    ContinueAsGuestRequested = 'CONTINUE_AS_GUEST_REQUESTED',\n    ContinueAsGuestSucceeded = 'CONTINUE_AS_GUEST_SUCCEEDED',\n    ContinueAsGuestFailed = 'CONTINUE_AS_GUEST_FAILED',\n}\n\nexport type BillingAddressAction =\n    ContinueAsGuestAction |\n    UpdateBillingAddressAction;\n\nexport type UpdateBillingAddressAction =\n    UpdateBillingAddressRequested |\n    UpdateBillingAddressSucceeded |\n    UpdateBillingAddressFailed;\n\nexport type ContinueAsGuestAction =\n    ContinueAsGuestRequested |\n    ContinueAsGuestSucceeded |\n    ContinueAsGuestFailed;\n\nexport interface UpdateBillingAddressRequested extends Action {\n    type: BillingAddressActionType.UpdateBillingAddressRequested;\n}\n\nexport interface UpdateBillingAddressSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.UpdateBillingAddressSucceeded;\n}\n\nexport interface UpdateBillingAddressFailed extends Action<Error> {\n    type: BillingAddressActionType.UpdateBillingAddressFailed;\n}\n\nexport interface ContinueAsGuestRequested extends Action {\n    type: BillingAddressActionType.ContinueAsGuestRequested;\n}\n\nexport interface ContinueAsGuestSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.ContinueAsGuestSucceeded;\n}\n\nexport interface ContinueAsGuestFailed extends Action<Error> {\n    type: BillingAddressActionType.ContinueAsGuestFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadPaymentMethodAction } from '../payment';\n\nimport { CheckoutButtonMethodType } from './strategies';\n\nexport enum CheckoutButtonActionType {\n    InitializeButtonFailed = 'INITIALIZE_BUTTON_FAILED',\n    InitializeButtonRequested = 'INITIALIZE_BUTTON_REQUESTED',\n    InitializeButtonSucceeded = 'INITIALIZE_BUTTON_SUCCEEDED',\n\n    DeinitializeButtonFailed = 'DEINITIALIZE_BUTTON_FAILED',\n    DeinitializeButtonRequested = 'DEINITIALIZE_BUTTON_REQUESTED',\n    DeinitializeButtonSucceeded = 'DEINITIALIZE_BUTTON_SUCCEEDED',\n}\n\nexport type CheckoutButtonAction = InitializeButtonAction | DeinitializeButtonAction;\n\nexport type InitializeButtonAction =\n    InitializeButtonRequestedAction |\n    InitializeButtonSucceededAction |\n    InitializeButtonFailedAction |\n    LoadPaymentMethodAction;\n\nexport type DeinitializeButtonAction =\n    DeinitializeButtonRequestedAction |\n    DeinitializeButtonSucceededAction |\n    DeinitializeButtonFailedAction;\n\nexport interface CheckoutButtonActionMeta {\n    methodId: CheckoutButtonMethodType;\n}\n\nexport interface InitializeButtonActionMeta extends CheckoutButtonActionMeta {\n    containerId: string;\n}\n\nexport interface InitializeButtonRequestedAction extends Action<undefined, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonRequested;\n}\n\nexport interface InitializeButtonSucceededAction extends Action<undefined, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonSucceeded;\n}\n\nexport interface InitializeButtonFailedAction extends Action<Error, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonFailed;\n}\n\nexport interface DeinitializeButtonRequestedAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonRequested;\n}\n\nexport interface DeinitializeButtonSucceededAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonSucceeded;\n}\n\nexport interface DeinitializeButtonFailedAction extends Action<Error, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum CouponActionType {\n    ApplyCouponRequested = 'APPLY_COUPON_REQUESTED',\n    ApplyCouponSucceeded = 'APPLY_COUPON_SUCCEEDED',\n    ApplyCouponFailed = 'APPLY_COUPON_FAILED',\n\n    RemoveCouponRequested = 'REMOVE_COUPON_REQUESTED',\n    RemoveCouponSucceeded = 'REMOVE_COUPON_SUCCEEDED',\n    RemoveCouponFailed = 'REMOVE_COUPON_FAILED',\n}\n\nexport type CouponAction =\n    ApplyCouponAction |\n    RemoveCouponAction;\n\nexport type ApplyCouponAction =\n    ApplyCouponRequestedAction |\n    ApplyCouponSucceededAction |\n    ApplyCouponFailedAction;\n\nexport type RemoveCouponAction =\n    RemoveCouponRequestedAction |\n    RemoveCouponSucceededAction |\n    RemoveCouponFailedAction;\n\nexport interface ApplyCouponRequestedAction extends Action {\n    type: CouponActionType.ApplyCouponRequested;\n}\n\nexport interface ApplyCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.ApplyCouponSucceeded;\n}\n\nexport interface ApplyCouponFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: CouponActionType.ApplyCouponFailed;\n}\n\nexport interface RemoveCouponRequestedAction extends Action {\n    type: CouponActionType.RemoveCouponRequested;\n}\n\nexport interface RemoveCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.RemoveCouponSucceeded;\n}\n\nexport interface RemoveCouponFailedAction extends Action<RequestError> {\n    type: CouponActionType.RemoveCouponFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody } from './instrument-response-body';\n\nexport enum InstrumentActionType {\n    LoadInstrumentsRequested = 'LOAD_INSTRUMENTS_REQUESTED',\n    LoadInstrumentsSucceeded = 'LOAD_INSTRUMENTS_SUCCEEDED',\n    LoadInstrumentsFailed = 'LOAD_INSTRUMENTS_FAILED',\n\n    DeleteInstrumentRequested = 'DELETE_INSTRUMENT_REQUESTED',\n    DeleteInstrumentSucceeded = 'DELETE_INSTRUMENT_SUCCEEDED',\n    DeleteInstrumentFailed = 'DELETE_INSTRUMENT_FAILED',\n}\n\nexport type InstrumentAction =\n    LoadInstrumentsAction |\n    DeleteInstrumentAction;\n\nexport type LoadInstrumentsAction =\n    LoadInstrumentsRequestedAction |\n    LoadInstrumentsSucceededAction |\n    LoadInstrumentsFailedAction;\n\nexport type DeleteInstrumentAction =\n    DeleteInstrumentRequestedAction |\n    DeleteInstrumentSucceededAction |\n    DeleteInstrumentFailedAction;\n\nexport interface LoadInstrumentsRequestedAction extends Action {\n    type: InstrumentActionType.LoadInstrumentsRequested;\n}\n\nexport interface LoadInstrumentsSucceededAction extends Action<InstrumentsResponseBody, VaultAccessToken> {\n    type: InstrumentActionType.LoadInstrumentsSucceeded;\n}\n\nexport interface LoadInstrumentsFailedAction extends Action<Error> {\n    type: InstrumentActionType.LoadInstrumentsFailed;\n}\n\nexport interface DeleteInstrumentRequestedAction extends Action {\n    type: InstrumentActionType.DeleteInstrumentRequested;\n}\n\nexport interface DeleteInstrumentSucceededAction extends Action<InstrumentsResponseBody, VaultAccessToken & { instrumentId: string }> {\n    type: InstrumentActionType.DeleteInstrumentSucceeded;\n}\n\nexport interface DeleteInstrumentFailedAction extends Action<Error> {\n    type: InstrumentActionType.DeleteInstrumentFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum GiftCertificateActionType {\n    ApplyGiftCertificateRequested = 'APPLY_GIFT_CERTIFICATE_REQUESTED',\n    ApplyGiftCertificateSucceeded = 'APPLY_GIFT_CERTIFICATE_SUCCEEDED',\n    ApplyGiftCertificateFailed = 'APPLY_GIFT_CERTIFICATE_FAILED',\n\n    RemoveGiftCertificateRequested = 'REMOVE_GIFT_CERTIFICATE_REQUESTED',\n    RemoveGiftCertificateSucceeded = 'REMOVE_GIFT_CERTIFICATE_SUCCEEDED',\n    RemoveGiftCertificateFailed = 'REMOVE_GIFT_CERTIFICATE_FAILED',\n}\n\nexport type GiftCertificateAction =\n    ApplyGiftCertificateAction |\n    RemoveGiftCertificateAction;\n\nexport type ApplyGiftCertificateAction =\n    ApplyGiftCertificateRequestedAction |\n    ApplyGiftCertificateSucceededAction |\n    ApplyGiftCertificateFailedAction;\n\nexport type RemoveGiftCertificateAction =\n    RemoveGiftCertificateRequestedAction |\n    RemoveGiftCertificateSucceededAction |\n    RemoveGiftCertificateFailedAction;\n\nexport interface ApplyGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.ApplyGiftCertificateRequested;\n}\n\nexport interface ApplyGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.ApplyGiftCertificateSucceeded;\n}\n\nexport interface ApplyGiftCertificateFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: GiftCertificateActionType.ApplyGiftCertificateFailed;\n}\n\nexport interface RemoveGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.RemoveGiftCertificateRequested;\n}\n\nexport interface RemoveGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.RemoveGiftCertificateSucceeded;\n}\n\nexport interface RemoveGiftCertificateFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: GiftCertificateActionType.RemoveGiftCertificateFailed;\n}\n","import EmbeddedCheckoutError from './embedded-checkout-error';\nimport { EmbeddedContentOptions } from './iframe-content';\n\nexport enum EmbeddedCheckoutEventType {\n    CheckoutComplete = 'CHECKOUT_COMPLETE',\n    CheckoutError = 'CHECKOUT_ERROR',\n    CheckoutLoaded = 'CHECKOUT_LOADED',\n    FrameError = 'FRAME_ERROR',\n    FrameLoaded = 'FRAME_LOADED',\n    SignedOut = 'SIGNED_OUT',\n}\n\nexport interface EmbeddedCheckoutEventMap {\n    [EmbeddedCheckoutEventType.CheckoutComplete]: EmbeddedCheckoutCompleteEvent;\n    [EmbeddedCheckoutEventType.CheckoutError]: EmbeddedCheckoutErrorEvent;\n    [EmbeddedCheckoutEventType.CheckoutLoaded]: EmbeddedCheckoutLoadedEvent;\n    [EmbeddedCheckoutEventType.FrameError]: EmbeddedCheckoutFrameErrorEvent;\n    [EmbeddedCheckoutEventType.FrameLoaded]: EmbeddedCheckoutFrameLoadedEvent;\n    [EmbeddedCheckoutEventType.SignedOut]: EmbeddedCheckoutSignedOutEvent;\n}\n\nexport type EmbeddedCheckoutEvent = (\n    EmbeddedCheckoutCompleteEvent |\n    EmbeddedCheckoutErrorEvent |\n    EmbeddedCheckoutFrameErrorEvent |\n    EmbeddedCheckoutFrameLoadedEvent |\n    EmbeddedCheckoutLoadedEvent |\n    EmbeddedCheckoutSignedOutEvent\n);\n\nexport interface EmbeddedCheckoutCompleteEvent {\n    type: EmbeddedCheckoutEventType.CheckoutComplete;\n}\n\nexport interface EmbeddedCheckoutErrorEvent {\n    type: EmbeddedCheckoutEventType.CheckoutError;\n    payload: EmbeddedCheckoutError;\n}\n\nexport interface EmbeddedCheckoutLoadedEvent {\n    type: EmbeddedCheckoutEventType.CheckoutLoaded;\n}\n\nexport interface EmbeddedCheckoutFrameErrorEvent {\n    type: EmbeddedCheckoutEventType.FrameError;\n    payload: EmbeddedCheckoutError;\n}\n\nexport interface EmbeddedCheckoutFrameLoadedEvent {\n    type: EmbeddedCheckoutEventType.FrameLoaded;\n    payload?: EmbeddedContentOptions;\n}\n\nexport interface EmbeddedCheckoutSignedOutEvent {\n    type: EmbeddedCheckoutEventType.SignedOut;\n}\n","import { setPrototypeOf } from '../../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { AmazonPayRemoteCheckout } from './methods';\n\nexport enum RemoteCheckoutActionType {\n    InitializeRemoteBillingRequested = 'INITIALIZE_REMOTE_BILLING_REQUESTED',\n    InitializeRemoteBillingSucceeded = 'INITIALIZE_REMOTE_BILLING_SUCCEEDED',\n    InitializeRemoteBillingFailed = 'INITIALIZE_REMOTE_BILLING_FAILED',\n\n    InitializeRemoteShippingRequested = 'INITIALIZE_REMOTE_SHIPPING_REQUESTED',\n    InitializeRemoteShippingSucceeded = 'INITIALIZE_REMOTE_SHIPPING_SUCCEEDED',\n    InitializeRemoteShippingFailed = 'INITIALIZE_REMOTE_SHIPPING_FAILED',\n\n    InitializeRemotePaymentRequested = 'INITIALIZE_REMOTE_PAYMENT_REQUESTED',\n    InitializeRemotePaymentSucceeded = 'INITIALIZE_REMOTE_PAYMENT_SUCCEEDED',\n    InitializeRemotePaymentFailed = 'INITIALIZE_REMOTE_PAYMENT_FAILED',\n\n    LoadRemoteSettingsRequested = 'LOAD_REMOTE_SETTINGS_REQUESTED',\n    LoadRemoteSettingsSucceeded = 'LOAD_REMOTE_SETTINGS_SUCCEEDED',\n    LoadRemoteSettingsFailed = 'LOAD_REMOTE_SETTINGS_FAILED',\n\n    SignOutRemoteCustomerRequested = 'SIGN_OUT_REMOTE_CUSTOMER_REQUESTED',\n    SignOutRemoteCustomerSucceeded = 'SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED',\n    SignOutRemoteCustomerFailed = 'SIGN_OUT_REMOTE_CUSTOMER_FAILED',\n\n    UpdateRemoteCheckout = 'UPDATE_REMOTE_CHECKOUT',\n}\n\nexport type RemoteCheckoutAction = InitializeRemoteBillingAction |\n    InitializeRemoteShippingAction |\n    InitializeRemotePaymentAction |\n    SignOutRemoteCustomerAction |\n    LoadRemoteSettingsAction |\n    UpdateRemoteCheckoutAction;\n\nexport type InitializeRemoteBillingAction = InitializeRemoteBillingSucceededAction |\n    InitializeRemoteBillingFailedAction |\n    InitializeRemoteBillingRequestedAction;\n\nexport interface InitializeRemoteBillingSucceededAction extends Action<AmazonPayRemoteCheckout> {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingSucceeded;\n}\n\nexport interface InitializeRemoteBillingFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingFailed;\n}\n\nexport interface InitializeRemoteBillingRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingRequested;\n}\n\nexport type InitializeRemoteShippingAction = InitializeRemoteShippingSucceededAction |\n    InitializeRemoteShippingFailedAction |\n    InitializeRemoteShippingRequestedAction;\n\nexport interface InitializeRemoteShippingSucceededAction extends Action<AmazonPayRemoteCheckout> {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingSucceeded;\n}\n\nexport interface InitializeRemoteShippingFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingFailed;\n}\n\nexport interface InitializeRemoteShippingRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingRequested;\n}\n\nexport type InitializeRemotePaymentAction = InitializeRemotePaymentSucceededAction |\n    InitializeRemotePaymentFailedAction |\n    InitializeRemotePaymentRequestedAction;\n\nexport interface InitializeRemotePaymentSucceededAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentSucceeded;\n}\n\nexport interface InitializeRemotePaymentFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentFailed;\n}\n\nexport interface InitializeRemotePaymentRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentRequested;\n}\n\nexport type SignOutRemoteCustomerAction = SignOutRemoteCustomerSucceededAction |\n    SignOutRemoteCustomerFailedAction |\n    SignOutRemoteCustomerRequestedAction;\n\nexport interface SignOutRemoteCustomerSucceededAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerSucceeded;\n}\n\nexport interface SignOutRemoteCustomerFailedAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerFailed;\n}\n\nexport interface SignOutRemoteCustomerRequestedAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerRequested;\n}\n\nexport type LoadRemoteSettingsAction = LoadRemoteSettingsSucceededAction |\n    LoadRemoteSettingsRequestedAction |\n    LoadRemoteSettingsFailedAction;\n\nexport interface LoadRemoteSettingsSucceededAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsSucceeded;\n}\n\nexport interface LoadRemoteSettingsRequestedAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsRequested;\n}\n\nexport interface LoadRemoteSettingsFailedAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsFailed;\n}\n\nexport interface UpdateRemoteCheckoutAction extends Action {\n    type: RemoteCheckoutActionType.UpdateRemoteCheckout;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport StandardError from './standard-error';\n\nconst DEFAULT_RESPONSE = {\n    body: {},\n    headers: {},\n    status: 0,\n};\n\n/**\n * Throw this error if we are unable to make a request to the server. It wraps\n * any server response into a JS error object.\n */\nexport default class RequestError<TBody = any> extends StandardError {\n    body: TBody | {};\n    headers: { [key: string]: any };\n    errors: Array<{ code: string; message?: string }>;\n    status: number;\n\n    constructor(\n        response?: Response<TBody | {}>,\n        { message, errors }: {\n            message?: string;\n            errors?: Array<{ code: string; message?: string }>;\n        } = {}\n    ) {\n        const { body, headers, status } = response || DEFAULT_RESPONSE;\n\n        super(message || 'An unexpected error has occurred.');\n\n        this.name = 'RequestError';\n        this.type = 'request';\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.errors = errors || [];\n    }\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport Config from './config';\n\nexport enum ConfigActionType {\n    LoadConfigRequested = 'LOAD_CONFIG_REQUESTED',\n    LoadConfigSucceeded = 'LOAD_CONFIG_SUCCEEDED',\n    LoadConfigFailed = 'LOAD_CONFIG_FAILED',\n}\n\nexport type LoadConfigAction =\n    LoadConfigRequestedAction |\n    LoadConfigSucceededAction |\n    LoadConfigFailedAction;\n\nexport interface LoadConfigRequestedAction extends Action {\n    type: ConfigActionType.LoadConfigRequested;\n}\n\nexport interface LoadConfigSucceededAction extends Action<Config> {\n    type: ConfigActionType.LoadConfigSucceeded;\n}\n\nexport interface LoadConfigFailedAction extends Action<Error> {\n    type: ConfigActionType.LoadConfigFailed;\n}\n","import { isPlainObject as lodashIsPlainObject } from 'lodash';\n\n// We need this wrapper because Lodash's version doesn't act as a type guard\nexport default function isPlainObject(value: any): value is object {\n    return lodashIsPlainObject(value);\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport Country from './country';\n\nexport enum CountryActionType {\n    LoadCountriesRequested = 'LOAD_COUNTRIES_REQUESTED',\n    LoadCountriesSucceeded = 'LOAD_COUNTRIES_SUCCEEDED',\n    LoadCountriesFailed = 'LOAD_COUNTRIES_FAILED',\n}\n\nexport type LoadCountriesAction =\n    LoadCountriesRequestedAction |\n    LoadCountriesSucceededAction |\n    LoadCountriesFailedAction;\n\nexport interface LoadCountriesRequestedAction extends Action {\n    type: CountryActionType.LoadCountriesRequested;\n}\n\nexport interface LoadCountriesSucceededAction extends Action<Country[]> {\n    type: CountryActionType.LoadCountriesSucceeded;\n}\n\nexport interface LoadCountriesFailedAction extends Action<Error> {\n    type: CountryActionType.LoadCountriesFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Country } from '../geography';\n\nexport enum ShippingCountryActionType {\n    LoadShippingCountriesRequested = 'LOAD_SHIPPING_COUNTRIES_REQUESTED',\n    LoadShippingCountriesSucceeded = 'LOAD_SHIPPING_COUNTRIES_SUCCEEDED',\n    LoadShippingCountriesFailed = 'LOAD_SHIPPING_COUNTRIES_FAILED',\n}\n\nexport type LoadShippingCountriesAction = LoadShippingCountriesRequestedAction |\n    LoadShippingCountriesSucceededAction |\n    LoadShippingCountriesFailedAction;\n\nexport interface LoadShippingCountriesRequestedAction extends Action {\n    type: ShippingCountryActionType.LoadShippingCountriesRequested;\n}\n\nexport interface LoadShippingCountriesSucceededAction extends Action<Country[]> {\n    type: ShippingCountryActionType.LoadShippingCountriesSucceeded;\n}\n\nexport interface LoadShippingCountriesFailedAction extends Action<Error> {\n    type: ShippingCountryActionType.LoadShippingCountriesFailed;\n}\n","module.exports = require(\"@bigcommerce/request-sender\");","export const ACKNOWLEDGE = 'ACKNOWLEDGE';\nexport const FINALIZE = 'FINALIZE';\nexport const INITIALIZE = 'INITIALIZE';\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum StoreCreditActionType {\n    ApplyStoreCreditRequested = 'APPLY_STORE_CREDIT_REQUESTED',\n    ApplyStoreCreditSucceeded = 'APPLY_STORE_CREDIT_SUCCEEDED',\n    ApplyStoreCreditFailed = 'APPLY_STORE_CREDIT_FAILED',\n}\n\nexport type StoreCreditAction =\n    ApplyStoreCreditAction;\n\nexport type ApplyStoreCreditAction =\n    ApplyStoreCreditRequestedAction |\n    ApplyStoreCreditSucceededAction |\n    ApplyStoreCreditFailedAction;\n\nexport interface ApplyStoreCreditRequestedAction extends Action {\n    type: StoreCreditActionType.ApplyStoreCreditRequested;\n}\n\nexport interface ApplyStoreCreditSucceededAction extends Action<Checkout> {\n    type: StoreCreditActionType.ApplyStoreCreditSucceeded;\n}\n\nexport interface ApplyStoreCreditFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: StoreCreditActionType.ApplyStoreCreditFailed;\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the client library of a payment method fails\n * to load, or for some reason, it is inaccessible.\n */\nexport default class PaymentMethodClientUnavailableError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed because the client library of a payment method is not loaded or ready to be used.');\n\n        this.name = 'PaymentMethodClientUnavailableError';\n        this.type = 'payment_method_client_unavailable';\n    }\n}\n","module.exports = require(\"@bigcommerce/script-loader\");","enum ContentType {\n    Json = 'application/json',\n    JsonV1 = 'application/vnd.bc.v1+json',\n}\n\nexport default ContentType;\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderAction } from '../order';\n\nimport PaymentResponseBody from './payment-response-body';\n\nexport enum PaymentActionType {\n    SubmitPaymentRequested = 'SUBMIT_PAYMENT_REQUESTED',\n    SubmitPaymentSucceeded = 'SUBMIT_PAYMENT_SUCCEEDED',\n    SubmitPaymentFailed = 'SUBMIT_PAYMENT_FAILED',\n\n    InitializeOffsitePaymentRequested = 'INITIALIZE_OFFSITE_PAYMENT_REQUESTED',\n    InitializeOffsitePaymentSucceeded = 'INITIALIZE_OFFSITE_PAYMENT_SUCCEEDED',\n    InitializeOffsitePaymentFailed = 'INITIALIZE_OFFSITE_PAYMENT_FAILED',\n}\n\nexport type PaymentAction = SubmitPaymentAction |\n    InitializeOffsitePaymentAction;\n\nexport type SubmitPaymentAction =\n    SubmitPaymentRequestedAction |\n    SubmitPaymentSucceededAction |\n    SubmitPaymentFailedAction |\n    LoadOrderAction;\n\nexport type InitializeOffsitePaymentAction =\n    InitializeOffsitePaymentRequestedAction |\n    InitializeOffsitePaymentSucceededAction |\n    InitializeOffsitePaymentFailedAction;\n\nexport interface SubmitPaymentRequestedAction extends Action {\n    type: PaymentActionType.SubmitPaymentRequested;\n}\n\nexport interface SubmitPaymentSucceededAction extends Action<PaymentResponseBody> {\n    type: PaymentActionType.SubmitPaymentSucceeded;\n}\n\nexport interface SubmitPaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.SubmitPaymentFailed;\n}\n\nexport interface InitializeOffsitePaymentRequestedAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentRequested;\n}\n\nexport interface InitializeOffsitePaymentSucceededAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentSucceeded;\n}\n\nexport interface InitializeOffsitePaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.InitializeOffsitePaymentFailed;\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","import { uniq } from 'lodash';\n\nexport default function joinIncludes<T>(includes: T[]): string {\n    return uniq(includes).join(',');\n}\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType\n): object is TEvent {\n    return object.type === type;\n}\n","module.exports = require(\"local-storage-fallback\");","module.exports = require(\"shallowequal\");","export interface CompareOptions {\n    keyFilter?(key: string): boolean;\n}\n\nexport default function isEqual(objectA: any, objectB: any, options?: CompareOptions): boolean {\n    if (objectA === objectB) {\n        return true;\n    }\n\n    if (objectA && objectB && typeof objectA === 'object' && typeof objectB === 'object') {\n        if (Array.isArray(objectA) && Array.isArray(objectB)) {\n            return isArrayEqual(objectA, objectB, options);\n        }\n\n        if (Array.isArray(objectA) || Array.isArray(objectB)) {\n            return false;\n        }\n\n        if ((objectA instanceof Date) && (objectB instanceof Date)) {\n            return isDateEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof Date) || (objectB instanceof Date)) {\n            return false;\n        }\n\n        if ((objectA instanceof RegExp) && (objectB instanceof RegExp)) {\n            return isRegExpEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof RegExp) || (objectB instanceof RegExp)) {\n            return false;\n        }\n\n        return isObjectEqual(objectA, objectB, options);\n    }\n\n    return objectA === objectB;\n}\n\nfunction isRegExpEqual(objectA: RegExp, objectB: RegExp): boolean {\n    return objectA.toString() === objectB.toString();\n}\n\nfunction isDateEqual(objectA: Date, objectB: Date): boolean {\n    return objectA.getTime() === objectB.getTime();\n}\n\nfunction isArrayEqual(objectA: any[], objectB: any[], options?: CompareOptions): boolean {\n    if (objectA.length !== objectB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = objectA.length; index < length; index++) {\n        if (!isEqual(objectA[index], objectB[index], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isObjectEqual(\n    objectA: { [key: string]: any },\n    objectB: { [key: string]: any },\n    options?: CompareOptions\n): boolean {\n    const filter = options && options.keyFilter;\n    const keysA = filter ? Object.keys(objectA).filter(filter) : Object.keys(objectA);\n    const keysB = filter ? Object.keys(objectB).filter(filter) : Object.keys(objectB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = keysA.length; index < length; index++) {\n        const key = keysA[index];\n\n        if (!objectB.hasOwnProperty(key)) {\n            return false;\n        }\n\n        if (!isEqual(objectA[key], objectB[key], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n","module.exports = require(\"@bigcommerce/form-poster\");","module.exports = require(\"reselect\");","import { parseUrl } from '../common/url';\n\nexport default class IframeEventPoster<TEvent> {\n    private _targetOrigin: string;\n\n    constructor(\n        targetOrigin: string,\n        private _targetWindow?: Window\n    ) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void {\n        if (window === this._targetWindow) {\n            return;\n        }\n\n        if (!this._targetWindow) {\n            throw new Error('Unable to post message becauset target window is not set.');\n        }\n\n        this._targetWindow.postMessage(event, this._targetOrigin);\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum SpamProtectionActionType {\n    InitializeFailed = 'SPAM_PROTECTION_INITIALIZE_FAILED',\n    InitializeSucceeded = 'SPAM_PROTECTION_INITIALIZE_SUCCEEDED',\n    InitializeRequested = 'SPAM_PROTECTION_INITIALIZE_REQUESTED',\n    ExecuteRequested = 'SPAM_PROTECTION_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'SPAM_PROTECTION_EXECUTE_SUCCEEDED',\n    ExecuteFailed = 'SPAM_PROTECTION_EXECUTE_FAILED',\n}\n\nexport type SpamProtectionAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction |\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction;\n\nexport interface InitializeRequestedAction extends Action {\n    type: SpamProtectionActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: SpamProtectionActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: SpamProtectionActionType.InitializeFailed;\n}\n\nexport interface ExecuteRequestedAction extends Action {\n    type: SpamProtectionActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action<Checkout> {\n    type: SpamProtectionActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action {\n    type: SpamProtectionActionType.ExecuteFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadCheckoutAction } from '../checkout';\n\nimport { InternalCustomerResponseData } from './internal-customer-responses';\n\nexport enum CustomerActionType {\n    SignInCustomerRequested = 'SIGN_IN_CUSTOMER_REQUESTED',\n    SignInCustomerSucceeded = 'SIGN_IN_CUSTOMER_SUCCEEDED',\n    SignInCustomerFailed = 'SIGN_IN_CUSTOMER_FAILED',\n\n    SignOutCustomerRequested = 'SIGN_OUT_CUSTOMER_REQUESTED',\n    SignOutCustomerSucceeded = 'SIGN_OUT_CUSTOMER_SUCCEEDED',\n    SignOutCustomerFailed = 'SIGN_OUT_CUSTOMER_FAILED',\n}\n\nexport type CustomerAction =\n    SignInCustomerAction |\n    SignOutCustomerAction;\n\nexport type SignInCustomerAction =\n    SignInCustomerRequestedAction |\n    SignInCustomerSucceededAction |\n    SignInCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport type SignOutCustomerAction =\n    SignOutCustomerRequestedAction |\n    SignOutCustomerSucceededAction |\n    SignOutCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport interface SignInCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignInCustomerRequested;\n}\n\nexport interface SignInCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignInCustomerSucceeded;\n}\n\nexport interface SignInCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignInCustomerFailed;\n}\n\nexport interface SignOutCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignOutCustomerRequested;\n}\n\nexport interface SignOutCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignOutCustomerSucceeded;\n}\n\nexport interface SignOutCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignOutCustomerFailed;\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { createSelector as defaultSelectorCreator } from 'reselect';\n\n/**\n * Decorate selector creators with the ability to memoize the return value of\n * their combiner if it is a function (which effectively works as a partially\n * applied combiner).\n */\nexport default function withMemoizedCombiner<T extends typeof defaultSelectorCreator>(\n    creator: T\n): T {\n    return ((...args: any[]) => {\n        const combiner = args.pop();\n\n        // Reselect's default `createSelector` has many overloads. To avoid having\n        // to redefine all of them, we're using `any` to bypass the typechecker.\n        return (creator as any)(...args, (...combinerArgs: any[]) => {\n            // Although there are many overloads, all of them have the last argument\n            // as the combiner.\n            const result = combiner(...combinerArgs);\n\n            if (typeof result === 'function') {\n                return memoize(result);\n            }\n\n            return result;\n        });\n    }) as T;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum ErrorActionType {\n    ClearError = 'CLEAR_ERROR',\n}\n\nexport type ErrorAction = ClearErrorAction;\n\nexport interface ClearErrorAction extends Action {\n    type: ErrorActionType.ClearError;\n    payload: Error;\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { cachableAction, ActionOptions } from '../common/data-store';\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadPaymentMethodsAction, LoadPaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\n\nexport default class PaymentMethodActionCreator {\n    constructor(\n        private _requestSender: PaymentMethodRequestSender\n    ) {}\n\n    loadPaymentMethods(options?: RequestOptions): Observable<LoadPaymentMethodsAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodsAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsRequested));\n\n            this._requestSender.loadPaymentMethods(options)\n                .then(response => {\n                    const meta = {\n                        deviceSessionId: response.headers['x-device-session-id'],\n                        sessionHash: response.headers['x-session-hash'],\n                    };\n\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsSucceeded, response.body, meta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodsFailed, response));\n                });\n        });\n    }\n\n    @cachableAction\n    loadPaymentMethod(methodId: string, options?: RequestOptions & ActionOptions): Observable<LoadPaymentMethodAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodRequested, undefined, { methodId }));\n\n            this._requestSender.loadPaymentMethod(methodId, options)\n                .then(response => {\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodSucceeded, response.body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodFailed, response, { methodId }));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport PaymentMethod from './payment-method';\n\nexport default class PaymentMethodRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadPaymentMethods({ timeout }: RequestOptions = {}): Promise<Response<PaymentMethod[]>> {\n        const url = '/api/storefront/payments';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n\n    loadPaymentMethod(methodId: string, { timeout }: RequestOptions = {}): Promise<Response<PaymentMethod>> {\n        const url = `/api/storefront/payments/${methodId}`;\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import { parseUrl } from '../common/url';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<TEventMap extends IframeEventMap<keyof TEventMap>> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap>;\n    private _sourceOrigin: string;\n\n    constructor(\n        sourceOrigin: string\n    ) {\n        this._sourceOrigin = parseUrl(sourceOrigin).origin;\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        listeners.push(listener);\n    }\n\n    removeListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType]): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach(listener => listener(event));\n    }\n\n    @bind\n    private _handleMessage(event: MessageEvent): void {\n        if ((event.origin !== this._sourceOrigin) ||\n            !isIframeEvent(event.data as TEventMap[keyof TEventMap], event.data.type)\n        ) {\n            return;\n        }\n\n        this.trigger(event.data);\n    }\n}\n\ntype EventListeners<TEventMap> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key]) => void>;\n};\n","const CHECKOUT_DEFAULT_INCLUDES = [\n    'cart.lineItems.physicalItems.options',\n    'cart.lineItems.digitalItems.options',\n    'customer',\n    'customer.customerGroup',\n    'payments',\n    'promotions.banners',\n];\n\nexport default CHECKOUT_DEFAULT_INCLUDES;\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","export const INTERNAL_USE_ONLY = 'This API endpoint is for internal use only and may change in the future';\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport { GooglePayCreator } from '../googlepay';\n\nimport { BraintreeClientCreator, BraintreeDataCollectorCreator, BraintreeHostWindow, BraintreePaypalCheckoutCreator, BraintreePaypalCreator, BraintreeThreeDSecureCreator, BraintreeVisaCheckoutCreator } from './braintree';\n\nexport default class BraintreeScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: BraintreeHostWindow = window\n    ) {}\n\n    loadClient(): Promise<BraintreeClientCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/client.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.client) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.client;\n            });\n    }\n\n    load3DS(): Promise<BraintreeThreeDSecureCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/three-d-secure.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.threeDSecure) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.threeDSecure;\n            });\n    }\n\n    loadDataCollector(): Promise<BraintreeDataCollectorCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/data-collector.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.dataCollector) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.dataCollector;\n            });\n    }\n\n    loadPaypal(): Promise<BraintreePaypalCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypal) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.paypal;\n            });\n    }\n\n    loadPaypalCheckout(): Promise<BraintreePaypalCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/paypal-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypalCheckout) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.paypalCheckout;\n            });\n    }\n\n    loadVisaCheckout(): Promise<BraintreeVisaCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/visa-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.visaCheckout) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.visaCheckout;\n            });\n    }\n\n    loadGooglePayment(): Promise<GooglePayCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.37.0/js/google-payment.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.googlePayment) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.googlePayment;\n            });\n    }\n}\n","import { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport { BraintreeClient, BraintreeDataCollector, BraintreeModule, BraintreePaypal, BraintreePaypalCheckout, BraintreeThreeDSecure, BraintreeVisaCheckout, GooglePayBraintreeSDK } from './braintree';\nimport BraintreeScriptLoader from './braintree-script-loader';\n\nexport default class BraintreeSDKCreator {\n    private _client?: Promise<BraintreeClient>;\n    private _3ds?: Promise<BraintreeThreeDSecure>;\n    private _paypal?: Promise<BraintreePaypal>;\n    private _paypalCheckout?: Promise<BraintreePaypalCheckout>;\n    private _clientToken?: string;\n    private _visaCheckout?: Promise<BraintreeVisaCheckout>;\n    private _dataCollectors: {\n        default?: Promise<BraintreeDataCollector>;\n        paypal?: Promise<BraintreeDataCollector>;\n    } = {};\n    private _googlePay?: Promise<GooglePayBraintreeSDK>;\n\n    constructor(\n        private _braintreeScriptLoader: BraintreeScriptLoader\n    ) {}\n\n    initialize(clientToken: string) {\n        this._clientToken = clientToken;\n    }\n\n    getClient(): Promise<BraintreeClient> {\n        if (!this._clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!this._client) {\n            this._client = this._braintreeScriptLoader.loadClient()\n                .then(client => client.create({ authorization: this._clientToken }));\n        }\n\n        return this._client;\n    }\n\n    getPaypal(): Promise<BraintreePaypal> {\n        if (!this._paypal) {\n            this._paypal = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypal(),\n            ])\n            .then(([client, paypal]) => paypal.create({ client }));\n        }\n\n        return this._paypal;\n    }\n\n    getPaypalCheckout(): Promise<BraintreePaypalCheckout> {\n        if (!this._paypalCheckout) {\n            this._paypalCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypalCheckout(),\n            ])\n                .then(([client, paypalCheckout]) => paypalCheckout.create({ client }));\n        }\n\n        return this._paypalCheckout;\n    }\n\n    get3DS(): Promise<BraintreeThreeDSecure> {\n        if (!this._3ds) {\n            this._3ds = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.load3DS(),\n            ])\n            .then(([client, threeDSecure]) => threeDSecure.create({ client }));\n        }\n\n        return this._3ds;\n    }\n\n    getDataCollector(options?: { paypal: boolean }): Promise<BraintreeDataCollector> {\n        const cacheKey = options && options.paypal ? 'paypal' : 'default';\n        let cached = this._dataCollectors[cacheKey];\n\n        if (!cached) {\n            cached = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadDataCollector(),\n            ])\n            .then(([client, dataCollector]) => dataCollector.create({ client, kount: true, ...options }))\n            .catch(error => {\n                if (error && error.code === 'DATA_COLLECTOR_KOUNT_NOT_ENABLED') {\n                    return { deviceData: undefined, teardown: () => Promise.resolve() };\n                }\n\n                throw error;\n            });\n\n            this._dataCollectors[cacheKey] = cached;\n        }\n\n        return cached;\n    }\n\n    getVisaCheckout(): Promise<BraintreeVisaCheckout> {\n        if (!this._visaCheckout) {\n            this._visaCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadVisaCheckout(),\n            ])\n            .then(([client, visaCheckout]) => visaCheckout.create({ client }));\n        }\n\n        return this._visaCheckout;\n    }\n\n    getGooglePaymentComponent(): Promise<GooglePayBraintreeSDK> {\n        if (!this._googlePay) {\n            this._googlePay = Promise.all ([\n                this.getClient(),\n                this._braintreeScriptLoader.loadGooglePayment(),\n            ])\n                .then(([client, googlePay]) => googlePay.create({ client }));\n        }\n\n        return this._googlePay;\n    }\n\n    teardown(): Promise<void> {\n        return Promise.all([\n            this._teardown(this._3ds),\n            this._teardown(this._dataCollectors.default),\n            this._teardown(this._dataCollectors.paypal),\n            this._teardown(this._visaCheckout),\n            this._teardown(this._googlePay),\n        ]).then(() => {\n            this._3ds = undefined;\n            this._visaCheckout = undefined;\n            this._dataCollectors = {};\n            this._googlePay = undefined;\n        });\n    }\n\n    private _teardown(module?: Promise<BraintreeModule>) {\n        return module ?\n            module.then(mod => mod.teardown()) :\n            Promise.resolve();\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","import StandardError from './standard-error';\n\nexport enum NotInitializedErrorType {\n    CheckoutButtonNotInitialized,\n    CustomerNotInitialized,\n    PaymentNotInitialized,\n    ShippingNotInitialized,\n    SpamProtectionNotInitialized,\n}\n\n/**\n * Throw this error if a method requires a certain initialization call to be\n * made first. Some objects can be constructed but they cannot be used until a\n * separate initialization call is made.\n */\nexport default class NotInitializedError extends StandardError {\n    constructor(\n        public subtype: NotInitializedErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'NotInitializedError';\n        this.type = 'not_initialized';\n    }\n}\n\nfunction getErrorMessage(type: NotInitializedErrorType): string {\n    switch (type) {\n    case NotInitializedErrorType.CustomerNotInitialized:\n        return 'Unable to proceed because the customer step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.PaymentNotInitialized:\n        return 'Unable to proceed because the payment step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.ShippingNotInitialized:\n        return 'Unable to proceed because the shipping step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.SpamProtectionNotInitialized:\n        return 'Unable to proceed because the checkout spam protection has not been initialized.';\n\n    default:\n        return 'Unable to proceed because the required component has not been initialized.';\n    }\n}\n","import { createErrorAction, Action } from '@bigcommerce/data-store';\nimport { concat, of, throwError, Observable } from 'rxjs';\n\nexport default function throwErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    error?: TPayload,\n    meta?: TMeta\n): Observable<Action<TPayload, TMeta, TType>> {\n    if (isErrorAction(error)) {\n        return concat(of(error), throwError(createErrorAction(type, error.payload, meta)));\n    }\n\n    return throwError(createErrorAction(type, error, meta));\n}\n\nfunction isErrorAction(action: any): action is Action {\n    return action && action.type && action.error;\n}\n","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port = anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ?\n        anchor.port :\n        '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? ':' + port : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","import { Action, ThunkAction } from '@bigcommerce/data-store';\nimport { memoize } from '@bigcommerce/memoize';\nimport { from, Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\nexport default function cacheAction<TFunction extends CreateActionFn>(\n    fn: TFunction\n): TFunction {\n    function decoratedFn(this: any, ...args: any[]) {\n        const action = fn.call(this, ...args);\n\n        if (action instanceof Observable) {\n            return from(action).pipe(shareReplay());\n        }\n\n        if (typeof action === 'function') {\n            return memoize(store => from(action(store)).pipe(shareReplay()));\n        }\n\n        return action;\n    }\n\n    return memoize(decoratedFn as TFunction);\n}\n\ntype CreateActionFn = (...args: any[]) => Observable<Action> | ThunkAction<Action> | Action;\n","import ActionOptions from './action-options';\n\nexport default function isActionOptions(param: any): param is ActionOptions {\n    return param && typeof param.useCache === 'boolean';\n}\n","import cacheAction from './cache-action';\nimport isActionOptions from './is-action-options';\n\nexport default function cachableActionDecorator<TMethod extends (...args: any[]) => any>(\n    _: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<TMethod>\n): TypedPropertyDescriptor<TMethod> {\n    const memoizedMethods = new WeakMap<object, { [key: string]: TMethod }>();\n\n    function decorateMethod(this: object, method: TMethod): TMethod {\n        return ((...args: any[]) => {\n            const lastArg = args[args.length - 1];\n            const { useCache } = isActionOptions(lastArg) ? lastArg : { useCache: false };\n\n            if (!useCache) {\n                return method.call(this, ...args);\n            }\n\n            const instanceMethods = memoizedMethods.get(this) || {};\n\n            if (!memoizedMethods.get(this)) {\n                memoizedMethods.set(this, instanceMethods);\n            }\n\n            if (!instanceMethods[key]) {\n                instanceMethods[key] = cacheAction(method);\n            }\n\n            return instanceMethods[key].call(this, ...args);\n        }) as TMethod;\n    }\n\n    return {\n        get() {\n            if (typeof descriptor.value !== 'function') {\n                throw new Error('Decorator should be used in functions');\n            }\n\n            const value = decorateMethod.call(this, descriptor.value);\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n    };\n}\n","import joinIncludes from './join-includes';\nimport mergeIncludes from './merge-includes';\n\n/**\n * Joins or merges a base list of includes with a set of additional includes.\n */\nexport default function joinOrMergeIncludes<T extends string>(\n    baseIncludes: T[],\n    includeDictionaryOrList: { [key in T]?: boolean } | T[] = []\n): string {\n    return Array.isArray(includeDictionaryOrList) ?\n        joinIncludes([\n            ...baseIncludes,\n            ...includeDictionaryOrList,\n        ]) :\n        mergeIncludes(baseIncludes, includeDictionaryOrList);\n}\n","import { difference, filter, keys, pickBy } from 'lodash';\n\nimport joinIncludes from './join-includes';\n\n/**\n * Merges includes given a list of base includes and a dictionary\n * of includes\n */\nexport default function mergeIncludes<T extends string>(\n    baseIncludes: T[],\n    includesDictionary?: { [key in T]?: boolean }\n): string {\n    const deletions = keys(pickBy(includesDictionary, on => !on));\n    const additions = keys(filter(includesDictionary));\n\n    return joinIncludes([\n            ...difference(baseIncludes, deletions),\n            ...additions,\n        ]);\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(_: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","module.exports = require(\"iframe-resizer\");","module.exports = require(\"iframe-resizer/js/iframeResizer.contentWindow\");","import { isPlainObject, omitBy, transform } from 'lodash';\n\nexport default function omitDeep(object: any, predicate: (value: any, key: string) => boolean): any {\n    if (Array.isArray(object)) {\n        return object.map(value => omitDeep(value, predicate));\n    }\n\n    if (isPlainObject(object)) {\n        return transform(omitBy(object, predicate), (result, value, key) => {\n            result[key] = omitDeep(value, predicate);\n        }, {} as { [key: string]: any });\n    }\n\n    return object;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, merge, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { ConfigActionCreator } from '../config';\n\nimport { CheckoutRequestBody } from './checkout';\nimport { CheckoutActionType, LoadCheckoutAction, UpdateCheckoutAction } from './checkout-actions';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport default class CheckoutActionCreator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender,\n        private _configActionCreator: ConfigActionCreator\n    ) {}\n\n    loadCheckout(id: string, options?: RequestOptions): Observable<LoadCheckoutAction> {\n        return concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            merge(\n                this._configActionCreator.loadConfig({ ...options, useCache: true }),\n                defer(() => this._checkoutRequestSender.loadCheckout(id, options)\n                    .then(({ body }) => createAction(CheckoutActionType.LoadCheckoutSucceeded, body)))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    loadDefaultCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            this._configActionCreator.loadConfig(),\n            defer(async () => {\n                const state = store.getState();\n                const context = state.config.getContextConfig();\n\n                if (!context || !context.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                const { body } = await this._checkoutRequestSender.loadCheckout(context.checkoutId, options);\n\n                return createAction(CheckoutActionType.LoadCheckoutSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    updateCheckout(\n        body: CheckoutRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateCheckoutAction, InternalCheckoutSelectors> {\n        return store => new Observable(observer => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CheckoutActionType.UpdateCheckoutRequested));\n\n            this._checkoutRequestSender.updateCheckout(checkout.id, body, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CheckoutActionType.UpdateCheckoutSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CheckoutActionType.UpdateCheckoutFailed, response));\n                });\n        });\n    }\n\n    loadCurrentCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            return this.loadCheckout(checkout.id, options);\n        };\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { find } from 'lodash';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { Cart } from '../cart';\nimport { CheckoutIncludes, CheckoutParams, CheckoutRequestSender, InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport Consignment, { ConsignmentsRequestBody, ConsignmentAssignmentRequestBody, ConsignmentCreateRequestBody, ConsignmentLineItem, ConsignmentRequestBody, ConsignmentShippingOptionRequestBody, ConsignmentUpdateRequestBody } from './consignment';\nimport { ConsignmentActionType, CreateConsignmentsAction, DeleteConsignmentAction, LoadShippingOptionsAction, UpdateConsignmentAction, UpdateShippingOptionAction } from './consignment-actions';\nimport ConsignmentRequestSender from './consignment-request-sender';\n\nexport default class ConsignmentActionCreator {\n    constructor(\n        private _consignmentRequestSender: ConsignmentRequestSender,\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    unassignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            if (!existingConsignment) {\n                throw new InvalidArgumentError('No consignment found for the specified address');\n            }\n\n            const lineItems = this._removeLineItems(\n                consignment.lineItems,\n                existingConsignment,\n                state.cart.getCart()\n            );\n\n            if (!lineItems.length) {\n                return this.deleteConsignment(existingConsignment.id, options)(store);\n            }\n\n            return this.updateConsignment({\n                id: existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems,\n            }, options)(store);\n        };\n    }\n\n    assignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            return this._createOrUpdateConsignment({\n                id: existingConsignment && existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems: this._addLineItems(\n                    consignment.lineItems,\n                    existingConsignment,\n                    state.cart.getCart()\n                ),\n            }, options)(store);\n        };\n    }\n\n    selectShippingOption(\n        id: string,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n            const consignments = state.consignments.getConsignments();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (!consignments || !consignments.length) {\n                throw new MissingDataError(MissingDataErrorType.MissingConsignments);\n            }\n\n            const consignmentUpdateBody = {\n                id: consignments[0].id,\n                shippingOptionId: id,\n            };\n\n            const consignmentMeta = {\n                id: consignments[0].id,\n            };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignmentUpdateBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(\n                        ConsignmentActionType.UpdateShippingOptionSucceeded,\n                        body,\n                        consignmentMeta\n                    ));\n\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(\n                        ConsignmentActionType.UpdateShippingOptionFailed,\n                        response,\n                        consignmentMeta\n                    ));\n                });\n        });\n    }\n\n    loadShippingOptions(options?: RequestOptions): ThunkAction<LoadShippingOptionsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadShippingOptionsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.LoadShippingOptionsRequested));\n\n            this._checkoutRequestSender.loadCheckout(checkout.id, {\n                ...options,\n                params: {\n                    include: [CheckoutIncludes.AvailableShippingOptions],\n                },\n            })\n            .then(({ body }) => {\n                observer.next(createAction(ConsignmentActionType.LoadShippingOptionsSucceeded, body));\n                observer.complete();\n            })\n            .catch(response => {\n                observer.error(createErrorAction(ConsignmentActionType.LoadShippingOptionsFailed, response));\n            });\n        });\n    }\n\n    updateAddress(\n        address: AddressRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<CreateConsignmentsAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const consignment = this._getConsignmentRequestBody(address, store);\n            const consignments = store.getState().consignments.getConsignments();\n\n            if (consignments && consignments.length) {\n                (consignment as ConsignmentUpdateRequestBody).id = consignments[0].id;\n            }\n\n            return this._createOrUpdateConsignment(consignment, options)(store);\n        };\n    }\n\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CreateConsignmentsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.CreateConsignmentsRequested));\n\n            this._consignmentRequestSender.createConsignments(checkout.id, consignments, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.CreateConsignmentsSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.CreateConsignmentsFailed, response));\n                });\n        });\n    }\n\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n            const consignmentMeta = { id: consignmentId };\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.DeleteConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.deleteConsignment(checkout.id, consignmentId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.DeleteConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.DeleteConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    updateShippingOption(\n        consignment: ConsignmentShippingOptionRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateShippingOptionSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateShippingOptionFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    private _createOrUpdateConsignment(\n        consignment: ConsignmentCreateRequestBody | ConsignmentUpdateRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (this._isUpdateConsignmentRequest(consignment)) {\n                return this.updateConsignment(consignment, options)(store);\n            }\n\n            return this.createConsignments([consignment], options)(store);\n        };\n    }\n\n    private _getConsignmentRequestBody(\n        shippingAddress: AddressRequestBody,\n        store: ReadableCheckoutStore\n    ): ConsignmentRequestBody {\n        const state = store.getState();\n        const cart = state.cart.getCart();\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return {\n            shippingAddress,\n            lineItems: (cart.lineItems && cart.lineItems.physicalItems || [])\n                .map(item => ({\n                    itemId: item.id,\n                    quantity: item.quantity,\n                })\n            ),\n        };\n    }\n\n    private _removeLineItems(\n        lineItems: ConsignmentLineItem[],\n        consignment: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return this._hydrateLineItems(consignment.lineItemIds, cart).map(existingItem => {\n            const sharedItem = find(lineItems, lineItem => lineItem.itemId === existingItem.itemId);\n\n            return {\n                ...existingItem,\n                quantity: sharedItem ? (existingItem.quantity - sharedItem.quantity) : existingItem.quantity,\n            };\n        }).filter(lineItem => lineItem.quantity > 0);\n    }\n\n    private _addLineItems(\n        lineItems: ConsignmentLineItem[],\n        consignment?: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!consignment) {\n            return lineItems;\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return lineItems\n            .concat(this._hydrateLineItems(consignment.lineItemIds, cart))\n            .filter(lineItem => lineItem.quantity > 0);\n    }\n\n    private _hydrateLineItems(lineItemIds: string[], cart: Cart): ConsignmentLineItem[] {\n        return lineItemIds.map(itemId => {\n            const item = find(cart.lineItems.physicalItems, lineItem => lineItem.id === itemId);\n\n            return {\n                itemId,\n                quantity: item ? item.quantity : 0,\n            };\n        });\n    }\n\n    private _isUpdateConsignmentRequest(\n        request: ConsignmentRequestBody\n    ): request is ConsignmentUpdateRequestBody {\n        const updateRequest = request as ConsignmentUpdateRequestBody;\n\n        return !!updateRequest.id;\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CheckoutParams } from '../checkout';\nimport { joinIncludes, joinOrMergeIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport { ConsignmentsRequestBody, ConsignmentUpdateRequestBody } from './consignment';\n\nconst DEFAULT_INCLUDES = [\n        'consignments.availableShippingOptions',\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ];\n\nexport default class ConsignmentRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createConsignments(\n        checkoutId: string,\n        consignments: ConsignmentsRequestBody,\n        { timeout, params: { include } = {} }: RequestOptions<CheckoutParams> = {}\n    ): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            body: consignments,\n            params: {\n                include: joinOrMergeIncludes(DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    updateConsignment(\n        checkoutId: string,\n        consignment: ConsignmentUpdateRequestBody,\n        { timeout, params: { include } = {} }: RequestOptions<CheckoutParams> = {}\n    ): Promise<Response<Checkout>> {\n        const { id, ...body } = consignment;\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            body,\n            params: {\n                include: joinOrMergeIncludes(DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    deleteConsignment(\n        checkoutId: string,\n        consignmentId: string,\n        { timeout }: RequestOptions = {}\n    ): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${consignmentId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const include = joinIncludes(DEFAULT_INCLUDES);\n\n        return this._requestSender.delete(url, { params: { include }, headers, timeout });\n    }\n}\n","export default function getCallbackUrl(origin: string): string {\n    return `${window.location.origin}/checkout.php?action=set_external_checkout&provider=masterpass&gateway=stripe&origin=${origin}`;\n}\n","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","export default function isPrivate(key: string): boolean {\n    return `${key}`.indexOf('$$') === 0 || `${key}`.indexOf('_') === 0;\n}\n","import EmbeddedCheckoutStyles from '../embedded-checkout-styles';\n\nexport enum EmbeddedContentEventType {\n    StyleConfigured = 'STYLE_CONFIGURED',\n}\n\nexport interface EmbeddedContentEventMap {\n    [EmbeddedContentEventType.StyleConfigured]: EmbeddedContentStyleConfiguredEvent;\n}\n\nexport type EmbeddedContentEvent = (\n    EmbeddedContentStyleConfiguredEvent\n);\n\nexport interface EmbeddedContentStyleConfiguredEvent {\n    type: EmbeddedContentEventType.StyleConfigured;\n    payload: EmbeddedCheckoutStyles;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * Throw this error if there is an unexpected error and it is not possible to\n * recover from unless the shopper creates a new checkout session.\n */\nexport default class UnrecoverableError extends RequestError {\n    constructor(response: Response, message?: string) {\n        super(response, {\n            message: message || 'An unexpected error has occurred. The checkout process cannot continue as a result.',\n        });\n\n        this.name = 'UnrecoverableError';\n        this.type = 'unrecoverable';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromInternalErrorResponse(\n    response: Response<InternalErrorResponseBody>,\n    message?: string\n): RequestError {\n    const { body } = response;\n    const { errors = [] } = body;\n\n    return new RequestError(response, {\n        message: joinErrors(errors) || body.detail || body.title || message,\n        errors: errors.length ?\n            errors.map(message => ({ code: body.type, message })) :\n            [{ code: body.type, message: body.detail || body.title }],\n    });\n}\n\nfunction joinErrors(errors: string[]): string | undefined {\n    return errors.reduce((result: string[], error) => {\n        if (error) {\n            return [...result, error];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromPaymentErrorResponse(\n    response: Response<PaymentErrorResponseBody>,\n    message?: string\n): RequestError {\n    const { body } = response;\n    const { errors = [] } = body;\n\n    return new RequestError(response, {\n        message: joinErrors(errors) || message,\n        errors,\n    });\n}\n\nfunction joinErrors(errors: Array<{ code: string; message?: string }>): string | undefined {\n    if (!Array.isArray(errors)) {\n        return;\n    }\n\n    return errors.reduce((result: string[], error) => {\n        if (error && error.message) {\n            return [...result, error.message];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { last } from 'lodash';\n\nimport ErrorResponseBody, { InternalErrorResponseBody, StorefrontErrorResponseBody } from './error-response-body';\nimport { mapFromInternalErrorResponse, mapFromPaymentErrorResponse, mapFromStorefrontErrorResponse, RequestError, TimeoutError } from './errors';\n\nexport default class RequestErrorFactory {\n    private _factoryMethods: { [key: string]: ErrorFactoryMethod } = {};\n\n    constructor() {\n        this.register('default', (response, message) => new RequestError(response, { message }));\n        this.register('internal', (response, message) => mapFromInternalErrorResponse(response, message));\n        this.register('storefront', (response, message) => mapFromStorefrontErrorResponse(response, message));\n        this.register('payment', (response, message) => mapFromPaymentErrorResponse(response, message));\n        this.register('timeout', response => new TimeoutError(response));\n    }\n\n    register(type: string, factoryMethod: ErrorFactoryMethod): void {\n        this._factoryMethods[type] = factoryMethod;\n    }\n\n    createError(response: Response, message?: string): RequestError {\n        const factoryMethod = this._factoryMethods[this._getType(response)] || this._factoryMethods.default;\n\n        return factoryMethod(response, message);\n    }\n\n    private _getType(response: Response<ErrorResponseBody>): string {\n        if (response.status === 0) {\n            return 'timeout';\n        }\n\n        if (this._isStorefrontErrorResponseBody(response.body)) {\n            return 'storefront';\n        }\n\n        if (this._isInternalErrorResponseBody(response.body)) {\n            const internalType = last(response.body.type.split('/'));\n\n            return internalType && this._factoryMethods[internalType] ?\n                internalType :\n                'internal';\n        }\n\n        const error = last(response.body && response.body.errors);\n\n        if (error && error.code && this._factoryMethods[error.code]) {\n            return error.code;\n        }\n\n        return 'payment';\n    }\n\n    private _isStorefrontErrorResponseBody(\n        errorResponse: ErrorResponseBody\n    ): errorResponse is StorefrontErrorResponseBody {\n        const storefrontErrorResponse = errorResponse as StorefrontErrorResponseBody;\n\n        return !this._isInternalErrorResponseBody(errorResponse) &&\n            typeof storefrontErrorResponse.title === 'string' &&\n            typeof storefrontErrorResponse.type === 'string' &&\n            typeof storefrontErrorResponse.status === 'number' &&\n            typeof storefrontErrorResponse.detail === 'string';\n    }\n\n    private _isInternalErrorResponseBody(\n        errorResponse: ErrorResponseBody\n    ): errorResponse is InternalErrorResponseBody {\n        const internalErrorResponse = errorResponse as InternalErrorResponseBody;\n\n        return typeof internalErrorResponse.errors === 'object' &&\n            typeof internalErrorResponse.title === 'string' &&\n            typeof internalErrorResponse.type === 'string' &&\n            typeof internalErrorResponse.status === 'number';\n    }\n}\n\nexport type ErrorFactoryMethod = (response: Response, message?: string) => RequestError;\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { StorefrontErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromStorefrontErrorResponse(\n    response: Response<StorefrontErrorResponseBody>,\n    message?: string\n): RequestError<StorefrontErrorResponseBody> {\n    const { body } = response;\n\n    return new RequestError(response, {\n        message: message || body.detail || body.title,\n        errors: [{\n            code: body.code || body.type,\n            message: body.detail || body.title,\n        }],\n    });\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { omitDeep } from '../utility';\n\nimport { ClearErrorAction, ErrorActionType } from './error-actions';\n\nexport default function clearErrorReducer<TState extends { [key: string]: any }, TAction extends Action>(\n    state: TState,\n    action: TAction\n): TState | undefined {\n    if (isClearErrorAction(action)) {\n        return omitDeep(state, value => value === action.payload);\n    }\n\n    return state;\n}\n\nfunction isClearErrorAction(action: Action): action is ClearErrorAction {\n    return action.type === ErrorActionType.ClearError;\n}\n","import isEqual from './is-equal';\n\n/**\n * Replace the current value with a new value if the former is different to the\n * latter.\n */\nexport default function replace<T>(currentValue: T, newValue?: T): T {\n    if (newValue === undefined || isEqual(currentValue, newValue)) {\n        return currentValue;\n    }\n\n    return newValue;\n}\n","import isEqual from './is-equal';\n\n/**\n * Set a new value to an object under a key if the new value is different to the\n * current value of the key.\n */\nexport default function objectSet<T extends { [key: string]: any }, K extends keyof T>(\n    object: T | undefined,\n    key: K,\n    value: T[K]\n): T {\n    if (object && object.hasOwnProperty(key) && isEqual(object[key], value)) {\n        return object;\n    }\n\n    return {\n        ...object as any,\n        [key]: value,\n    };\n}\n","import BillingAddress from './billing-address';\n\nexport default interface BillingAddressState {\n    data?: BillingAddress;\n    errors: BillingAddressErrorsState;\n    statuses: BillingAddressStatusesState;\n}\n\nexport interface BillingAddressErrorsState {\n    loadError?: Error;\n    updateError?: Error;\n    continueAsGuestError?: Error;\n}\n\nexport interface BillingAddressStatusesState {\n    isLoading?: boolean;\n    isUpdating?: boolean;\n    isContinuingAsGuest?: boolean;\n}\n\nexport const DEFAULT_STATE: BillingAddressState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { objectSet, replace } from '../common/utility';\nimport { OrderAction, OrderActionType } from '../order';\n\nimport BillingAddress from './billing-address';\nimport { BillingAddressAction, BillingAddressActionType } from './billing-address-actions';\nimport BillingAddressState, { BillingAddressErrorsState, BillingAddressStatusesState, DEFAULT_STATE } from './billing-address-state';\n\nexport default function billingAddressReducer(\n    state: BillingAddressState = DEFAULT_STATE,\n    action: Action\n): BillingAddressState {\n    const reducer = combineReducers<BillingAddressState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: BillingAddress | undefined,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddress | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return replace(data, action.payload && action.payload.billingAddress);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: BillingAddressErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return objectSet(errors, 'updateError', undefined);\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n        return objectSet(errors, 'updateError', action.payload);\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return objectSet(errors, 'continueAsGuestError', undefined);\n\n    case BillingAddressActionType.ContinueAsGuestFailed:\n        return objectSet(errors, 'continueAsGuestError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: BillingAddressStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddressStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n        return objectSet(statuses, 'isUpdating', true);\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return objectSet(statuses, 'isUpdating', false);\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n        return objectSet(statuses, 'isContinuingAsGuest', true);\n\n    case BillingAddressActionType.ContinueAsGuestFailed:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return objectSet(statuses, 'isContinuingAsGuest', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { isArray } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\nimport objectMerge from './object-merge';\nimport replace from './replace';\n\nexport interface ArrayReplaceOptions {\n    matchObject(objectA: any, objectB: any): boolean;\n}\n\nfunction arrayReplace<T>(currentArray: T[] | undefined, newArray: T[], options?: ArrayReplaceOptions): T[];\nfunction arrayReplace<T>(currentArray: T[], newArray?: T[], options?: ArrayReplaceOptions): undefined;\nfunction arrayReplace<T>(currentArray?: T[], newArray?: T[], options?: ArrayReplaceOptions): T[] | undefined;\nfunction arrayReplace<T>(currentArray?: T[], newArray?: T[], options?: ArrayReplaceOptions): T[] | undefined {\n    const { matchObject = (a: any, b: any) => a.id !== undefined && a.id === b.id } = options || {};\n\n    // Return the new array if the current array does not exist\n    if (!currentArray) {\n        return newArray;\n    }\n\n    // If the new array does not exist, or the current array is strictly equal\n    // to the new array, exit early and return the current array so that the\n    // object reference doesn't change\n    if (!newArray || currentArray === newArray) {\n        return currentArray;\n    }\n\n    // Otherwise, try to replace the items of the current array with the new\n    // array. If the item from the two arrays are the same, keep the current\n    // one. Do it recursively until all arrays are replaced.\n    let sameAsCurrentCount = 0;\n    let sameAsNewCount = 0;\n\n    const countSameAsReplaced = <T>(replacedValue: T, currentValue: T, newValue: T): T => {\n        sameAsCurrentCount += replacedValue === currentValue ? 1 : 0;\n        sameAsNewCount += replacedValue === newValue ? 1 : 0;\n\n        return replacedValue;\n    };\n\n    const result = newArray.map((newItem, index) => {\n        const currentItem = currentArray && currentArray[index];\n\n        if (isPlainObject(currentItem) && isPlainObject(newItem)) {\n            if (matchObject(currentItem, newItem)) {\n                return countSameAsReplaced(\n                    objectMerge(currentItem, newItem),\n                    currentItem,\n                    newItem\n                );\n            }\n\n            return countSameAsReplaced(\n                replace(currentItem, newItem),\n                currentItem,\n                newItem\n            );\n        }\n\n        if (isArray(currentItem) && isArray(newItem)) {\n            return countSameAsReplaced(\n                arrayReplace(currentItem, newItem),\n                currentItem,\n                newItem\n            );\n        }\n\n        return countSameAsReplaced(\n            replace(currentItem, newItem),\n            currentItem,\n            newItem\n        );\n    }) as T[];\n\n    // If all items in the result are identical to the current array, and the\n    // current array and the new array have the same size, simply return the\n    // current array instead of the result.\n    if (sameAsCurrentCount === newArray.length && (currentArray && currentArray.length === newArray.length)) {\n        return currentArray;\n    }\n\n    // If all items in the result are identical to the new array, simply return\n    // the new array.\n    if (sameAsNewCount === newArray.length) {\n        return newArray;\n    }\n\n    return result;\n}\n\nexport default arrayReplace;\n","import { isArray } from 'lodash';\n\nimport arrayReplace from './array-replace';\nimport isPlainObject from './is-plain-object';\nimport objectSet from './object-set';\n\nfunction objectMerge<T extends object>(currentObject: T, newObject?: Partial<T>): T;\nfunction objectMerge<T extends object>(currentObject: T | undefined, newObject: Partial<T>): Partial<T>;\nfunction objectMerge<T extends object>(currentObject?: T, newObject?: Partial<T>): T | undefined;\nfunction objectMerge<T extends object>(currentObject?: T, newObject?: Partial<T>): T | Partial<T> | undefined {\n    if (!currentObject) {\n        return newObject;\n    }\n\n    // If the new object does not exist but the current object does, or the new\n    // object is strictly equal to the current object, return the current object\n    if (!newObject || currentObject === newObject) {\n        return currentObject;\n    }\n\n    // If both objects exist, but some values might be different, perform a merge.\n    // Retain values that are equal and only replace them with the new values if\n    // they are different.\n    return (Object.keys(newObject) as Array<keyof T>)\n        .reduce((result, key) => {\n            const currentValue = result[key];\n            const newValue = newObject[key];\n\n            if (isPlainObject(currentValue) && isPlainObject(newValue)) {\n                return objectSet(result, key, objectMerge(currentValue, newValue));\n            }\n\n            if (isArray(currentValue) && isArray(newValue)) {\n                return objectSet(result, key, arrayReplace(currentValue, newValue) as any);\n            }\n\n            return objectSet(result, key, newValue as any);\n        }, currentObject);\n}\n\nexport default objectMerge;\n","import Cart from './cart';\n\nexport default interface CartState {\n    data?: Cart;\n    errors: CartErrorsState;\n    statuses: CartStatusesState;\n}\n\nexport interface CartErrorsState {\n    loadError?: Error;\n}\n\nexport interface CartStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: CartState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport Cart from './cart';\nimport CartState, { CartErrorsState, CartStatusesState, DEFAULT_STATE } from './cart-state';\n\nexport default function cartReducer(\n    state: CartState = DEFAULT_STATE,\n    action: Action\n): CartState {\n    const reducer = combineReducers<CartState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Cart | undefined,\n    action: BillingAddressAction | CheckoutAction | ConsignmentAction | CouponAction | GiftCertificateAction\n): Cart | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return objectMerge(data, action.payload && action.payload.cart);\n\n    default:\n        return data;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CartStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction\n): CartStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n\nfunction errorsReducer(\n    errors: CartErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction\n): CartErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n","import { CheckoutButtonMethodType } from './strategies';\n\nexport default interface CheckoutButtonState {\n    data: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonDataState | undefined\n    };\n    errors: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonErrorsState | undefined\n    };\n    statuses: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonStatusesState | undefined\n    };\n}\n\nexport interface CheckoutButtonDataState {\n    initializedContainers: {\n        [key: string]: boolean;\n    };\n}\n\nexport interface CheckoutButtonErrorsState {\n    initializeError?: Error;\n    deinitializeError?: Error;\n}\n\nexport interface CheckoutButtonStatusesState {\n    isInitializing?: boolean;\n    isDeinitializing?: boolean;\n}\n\nexport const DEFAULT_STATE: CheckoutButtonState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { CheckoutButtonAction, CheckoutButtonActionType } from './checkout-button-actions';\nimport CheckoutButtonState, { CheckoutButtonDataState, CheckoutButtonErrorsState, CheckoutButtonStatusesState, DEFAULT_STATE } from './checkout-button-state';\n\nconst DEFAULT_DATA_STATE: CheckoutButtonDataState = { initializedContainers: {} };\nconst DEFAULT_ERROR_STATE: CheckoutButtonErrorsState = {};\nconst DEFAULT_STATUS_STATE: CheckoutButtonStatusesState = {};\n\nexport default function checkoutButtonReducer(\n    state: CheckoutButtonState = DEFAULT_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<CheckoutButtonState>({\n        data: combineReducers({\n            [action.meta.methodId]: dataReducer,\n        }),\n        errors: combineReducers({\n            [action.meta.methodId]: errorsReducer,\n        }),\n        statuses: combineReducers({\n            [action.meta.methodId]: statusesReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutButtonDataState = DEFAULT_DATA_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonDataState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        if (!action.meta || !action.meta.containerId) {\n            return data;\n        }\n\n        return objectMerge(data, {\n            initializedContainers: {\n                [action.meta.containerId]: true,\n            },\n        });\n\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(data, 'initializedContainers', {});\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: CheckoutButtonErrorsState = DEFAULT_ERROR_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonErrorsState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return objectSet(errors, 'initializeError', undefined);\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n        return objectSet(errors, 'initializeError', action.payload);\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(errors, 'deinitializeError', undefined);\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n        return objectSet(errors, 'deinitializeError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutButtonStatusesState = DEFAULT_STATUS_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonStatusesState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n        return objectSet(statuses, 'isInitializing', true);\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return objectSet(statuses, 'isInitializing', false);\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n        return objectSet(statuses, 'isDeinitializing', true);\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(statuses, 'isDeinitializing', false);\n\n    default:\n        return statuses;\n    }\n}\n","import Config from './config';\n\nexport default interface ConfigState {\n    data?: Config;\n    meta?: ConfigMetaState;\n    errors: ConfigErrorsState;\n    statuses: ConfigStatusesState;\n}\n\nexport interface ConfigMetaState {\n    externalSource?: string;\n}\n\nexport interface ConfigErrorsState {\n    loadError?: Error;\n}\n\nexport interface ConfigStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: ConfigState = {\n    meta: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport Config from './config';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\nimport ConfigState, { ConfigErrorsState, ConfigStatusesState, DEFAULT_STATE } from './config-state';\n\nexport default function configReducer(\n    state: ConfigState = DEFAULT_STATE,\n    action: Action\n): ConfigState {\n    const reducer = combineReducers<ConfigState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Config | undefined,\n    action: LoadConfigAction\n): Config | undefined {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConfigErrorsState = DEFAULT_STATE.errors,\n    action: LoadConfigAction\n): ConfigErrorsState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case ConfigActionType.LoadConfigFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConfigStatusesState = DEFAULT_STATE.statuses,\n    action: LoadConfigAction\n): ConfigStatusesState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ConfigActionType.LoadConfigSucceeded:\n    case ConfigActionType.LoadConfigFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nimport Coupon from './coupon';\n\nexport default interface CouponState {\n    data?: Coupon[];\n    errors: CouponErrorsState;\n    statuses: CouponStatusesState;\n}\n\nexport interface CouponErrorsState {\n    applyCouponError?: RequestError<StorefrontErrorResponseBody>;\n    removeCouponError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface CouponStatusesState {\n    isApplyingCoupon?: boolean;\n    isRemovingCoupon?: boolean;\n}\n\nexport const DEFAULT_STATE: CouponState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { OrderAction, OrderActionType } from '../order';\n\nimport Coupon from './coupon';\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport CouponState, { CouponErrorsState, CouponStatusesState, DEFAULT_STATE } from './coupon-state';\n\nexport default function couponReducer(\n    state: CouponState = DEFAULT_STATE,\n    action: Action\n): CouponState {\n    const reducer = combineReducers<CouponState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Coupon[] | undefined,\n    action: CouponAction | CheckoutAction | OrderAction\n): Coupon[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return arrayReplace(data, action.payload && action.payload.coupons);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CouponErrorsState = {},\n    action: CouponAction\n): CouponErrorsState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n    case CouponActionType.ApplyCouponSucceeded:\n        return objectSet(errors, 'applyCouponError', undefined);\n\n    case CouponActionType.ApplyCouponFailed:\n        return objectSet(errors, 'applyCouponError', action.payload);\n\n    case CouponActionType.RemoveCouponRequested:\n    case CouponActionType.RemoveCouponSucceeded:\n        return objectSet(errors, 'removeCouponError', undefined);\n\n    case CouponActionType.RemoveCouponFailed:\n        return objectSet(errors, 'removeCouponError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CouponStatusesState = {},\n    action: CouponAction\n): CouponStatusesState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n        return objectSet(statuses, 'isApplyingCoupon', true);\n\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.ApplyCouponFailed:\n        return objectSet(statuses, 'isApplyingCoupon', false);\n\n    case CouponActionType.RemoveCouponRequested:\n        return objectSet(statuses, 'isRemovingCoupon', true);\n\n    case CouponActionType.RemoveCouponSucceeded:\n    case CouponActionType.RemoveCouponFailed:\n        return objectSet(statuses, 'isRemovingCoupon', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nimport GiftCertificate from './gift-certificate';\n\nexport default interface GiftCertificateState {\n    data?: GiftCertificate[];\n    errors: GiftCertificateErrorsState;\n    statuses: GiftCertificateStatusesState;\n}\n\nexport interface GiftCertificateErrorsState {\n    applyGiftCertificateError?: RequestError<StorefrontErrorResponseBody>;\n    removeGiftCertificateError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface GiftCertificateStatusesState {\n    isApplyingGiftCertificate?: boolean;\n    isRemovingGiftCertificate?: boolean;\n}\n\nexport const DEFAULT_STATE: GiftCertificateState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport GiftCertificate from './gift-certificate';\nimport { GiftCertificateAction, GiftCertificateActionType } from './gift-certificate-actions';\nimport GiftCertificateState, { DEFAULT_STATE, GiftCertificateErrorsState, GiftCertificateStatusesState } from './gift-certificate-state';\n\nexport default function giftCertificateReducer(\n    state: GiftCertificateState = DEFAULT_STATE,\n    action: Action\n): GiftCertificateState {\n    const reducer = combineReducers<GiftCertificateState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: GiftCertificate[] | undefined,\n    action: CheckoutAction | GiftCertificateAction | ConsignmentAction | CouponAction\n): GiftCertificate[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return arrayReplace(data, action.payload && action.payload.giftCertificates);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: GiftCertificateErrorsState = DEFAULT_STATE.errors,\n    action: GiftCertificateAction\n): GiftCertificateErrorsState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n        return objectSet(errors, 'applyGiftCertificateError', undefined);\n\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return objectSet(errors, 'applyGiftCertificateError', action.payload);\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return objectSet(errors, 'removeGiftCertificateError', undefined);\n\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return objectSet(errors, 'removeGiftCertificateError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: GiftCertificateStatusesState = DEFAULT_STATE.statuses,\n    action: GiftCertificateAction\n): GiftCertificateStatusesState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n        return objectSet(statuses, 'isApplyingGiftCertificate', true);\n\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return objectSet(statuses, 'isApplyingGiftCertificate', false);\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n        return objectSet(statuses, 'isRemovingGiftCertificate', true);\n\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return objectSet(statuses, 'isRemovingGiftCertificate', false);\n\n    default:\n        return statuses;\n    }\n}\n","import Customer from './customer';\n\nexport default interface CustomerState {\n    data?: Customer;\n}\n\nexport const DEFAULT_STATE: CustomerState = {};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { objectMerge } from '../common/utility';\n\nimport Customer from './customer';\nimport CustomerState, { DEFAULT_STATE } from './customer-state';\n\nexport default function customerReducer(\n    state: CustomerState = DEFAULT_STATE,\n    action: CheckoutAction\n): CustomerState {\n    const reducer = combineReducers<CustomerState, CheckoutAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Customer | undefined,\n    action: CheckoutAction\n): Customer | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectMerge(data, action.payload && action.payload.customer);\n\n    default:\n        return data;\n    }\n}\n","export default interface CustomerStrategyState {\n    data: CustomerStrategyDataState;\n    errors: CustomerStrategyErrorsState;\n    statuses: CustomerStrategyStatusesState;\n}\n\nexport interface CustomerStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface CustomerStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    signInError?: Error;\n    signInMethodId?: string;\n    signOutError?: Error;\n    signOutMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface CustomerStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isSigningIn?: boolean;\n    isSigningOut?: boolean;\n    signInMethodId?: string;\n    signOutMethodId?: string;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: CustomerStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { CustomerStrategyAction, CustomerStrategyActionType } from './customer-strategy-actions';\nimport CustomerStrategyState, { CustomerStrategyDataState, CustomerStrategyErrorsState, CustomerStrategyStatusesState, DEFAULT_STATE } from './customer-strategy-state';\n\nexport default function customerStrategyReducer(\n    state: CustomerStrategyState = DEFAULT_STATE,\n    action: Action\n): CustomerStrategyState {\n    const reducer = combineReducers<CustomerStrategyState, CustomerStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CustomerStrategyDataState = DEFAULT_STATE.data,\n    action: CustomerStrategyAction\n): CustomerStrategyDataState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: CustomerStrategyErrorsState = DEFAULT_STATE.errors,\n    action: CustomerStrategyAction\n): CustomerStrategyErrorsState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignInRequested:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return objectMerge(errors, {\n            signInError: undefined,\n            signInMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignInFailed:\n        return objectMerge(errors, {\n            signInError: action.payload,\n            signInMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignOutRequested:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return objectMerge(errors, {\n            signOutError: undefined,\n            signOutMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignOutFailed:\n        return objectMerge(errors, {\n            signOutError: action.payload,\n            signOutMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n        return objectMerge(errors, {\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(errors, {\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CustomerStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: CustomerStrategyAction\n): CustomerStrategyStatusesState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.InitializeFailed:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignInRequested:\n        return objectMerge(statuses, {\n            isSigningIn: true,\n            signInMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignInFailed:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return objectMerge(statuses, {\n            isSigningIn: false,\n            signInMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignOutRequested:\n        return objectMerge(statuses, {\n            isSigningOut: true,\n            signOutMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignOutFailed:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return objectMerge(statuses, {\n            isSigningOut: false,\n            signOutMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n        return objectMerge(statuses, {\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n         });\n\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(statuses, {\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n         });\n\n    default:\n        return statuses;\n    }\n}\n","import Country from './country';\n\nexport default interface CountryState {\n    data?: Country[];\n    errors: CountryErrorsState;\n    statuses: CountryStatusesState;\n}\n\nexport interface CountryErrorsState {\n    loadError?: Error;\n}\n\nexport interface CountryStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: CountryState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\n\nimport Country from './country';\nimport { CountryActionType, LoadCountriesAction } from './country-actions';\nimport CountryState, { CountryErrorsState, CountryStatusesState, DEFAULT_STATE } from './country-state';\n\nexport default function countryReducer(\n    state: CountryState = DEFAULT_STATE,\n    action: Action\n): CountryState {\n    const reducer = combineReducers<CountryState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Country[] | undefined,\n    action: LoadCountriesAction\n): Country[] | undefined {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesSucceeded:\n        return arrayReplace(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CountryErrorsState = DEFAULT_STATE.errors,\n    action: LoadCountriesAction\n): CountryErrorsState {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesRequested:\n    case CountryActionType.LoadCountriesSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CountryActionType.LoadCountriesFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CountryStatusesState = DEFAULT_STATE.statuses,\n    action: LoadCountriesAction\n): CountryStatusesState {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CountryActionType.LoadCountriesSucceeded:\n    case CountryActionType.LoadCountriesFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { Omit } from '../common/types';\n\nimport { InternalOrderMeta, InternalOrderPayment } from './internal-order';\nimport Order from './order';\n\nexport default interface OrderState {\n    data?: OrderDataState;\n    meta?: OrderMetaState;\n    errors: OrderErrorsState;\n    statuses: OrderStatusesState;\n}\n\nexport type OrderDataState = Omit<Order, 'billingAddress' | 'coupons'>;\n\nexport interface OrderMetaState extends InternalOrderMeta {\n    token?: string;\n    orderToken?: string;\n    callbackUrl?: string;\n    payment?: InternalOrderPayment;\n}\n\nexport interface OrderErrorsState {\n    loadError?: Error;\n    submitError?: Error;\n    finalizeError?: Error;\n}\n\nexport interface OrderStatusesState {\n    isLoading?: boolean;\n    isSubmitting?: boolean;\n    isFinalizing?: boolean;\n}\n\nexport const DEFAULT_STATE: OrderState = {\n    errors: {},\n    meta: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { OrderAction, OrderActionType } from './order-actions';\nimport OrderState, { DEFAULT_STATE, OrderDataState, OrderErrorsState, OrderMetaState, OrderStatusesState } from './order-state';\n\nexport default function orderReducer(\n    state: OrderState = DEFAULT_STATE,\n    action: Action\n): OrderState {\n    const reducer = combineReducers<OrderState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: OrderDataState | undefined,\n    action: OrderAction\n): OrderDataState | undefined {\n    switch (action.type) {\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n        return objectMerge(data, omit(action.payload, ['billingAddress', 'coupons'])) as OrderDataState;\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: OrderMetaState | undefined,\n    action: OrderAction\n): OrderMetaState | undefined {\n    switch (action.type) {\n    case OrderActionType.FinalizeOrderSucceeded:\n    case OrderActionType.SubmitOrderSucceeded:\n        return objectMerge(meta, {\n            ...action.meta,\n            callbackUrl: action.payload && action.payload.order.callbackUrl,\n            orderToken: action.payload && action.payload.order.token,\n            payment: action.payload && action.payload.order && action.payload.order.payment,\n        });\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: OrderErrorsState = DEFAULT_STATE.errors,\n    action: OrderAction\n): OrderErrorsState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return objectSet(errors, 'loadError', undefined);\n\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: OrderStatusesState = DEFAULT_STATE.statuses,\n    action: OrderAction\n): OrderStatusesState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { PaymentAction, PaymentActionType } from './payment-actions';\nimport PaymentResponseBody from './payment-response-body';\nimport PaymentState from './payment-state';\n\nexport default function paymentReducer(state: PaymentState = {}, action: PaymentAction): PaymentState {\n    const reducer = combineReducers<PaymentState, PaymentAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: PaymentResponseBody | undefined, action: PaymentAction): PaymentResponseBody | undefined {\n    switch (action.type) {\n    case PaymentActionType.SubmitPaymentSucceeded:\n        return action.payload;\n\n    default:\n        return data;\n    }\n}\n","import PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport default interface PaymentMethodState {\n    data?: PaymentMethod[];\n    meta?: PaymentMethodMeta;\n    errors: PaymentMethodErrorsState;\n    statuses: PaymentMethodStatusesState;\n}\n\nexport interface PaymentMethodErrorsState {\n    loadMethodId?: string;\n    loadError?: Error;\n    loadMethodError?: Error;\n}\n\nexport interface PaymentMethodStatusesState {\n    loadMethodId?: string;\n    isLoading?: boolean;\n    isLoadingMethod?: boolean;\n}\n\nexport const DEFAULT_STATE: PaymentMethodState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, mergeOrPush, objectMerge, objectSet } from '../common/utility';\n\nimport PaymentMethod from './payment-method';\nimport { PaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { DEFAULT_STATE, PaymentMethodErrorsState, PaymentMethodStatusesState } from './payment-method-state';\n\nexport default function paymentMethodReducer(\n    state: PaymentMethodState = DEFAULT_STATE,\n    action: Action\n): PaymentMethodState {\n    const reducer = combineReducers<PaymentMethodState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentMethod[] | undefined,\n    action: PaymentMethodAction\n): PaymentMethod[] | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return mergeOrPush(data || [], action.payload, action.payload && {\n            id: action.payload.id,\n            gateway: action.payload.gateway,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return arrayReplace(data, action.payload, {\n            matchObject: (methodA, methodB) => (\n                methodA.id === methodB.id && methodA.gateway === methodB.gateway\n            ),\n        });\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: PaymentMethodMeta | undefined,\n    action: PaymentMethodAction\n): PaymentMethodMeta | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return objectMerge(meta, action.meta);\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: PaymentMethodErrorsState = DEFAULT_STATE.errors,\n    action: PaymentMethodAction\n): PaymentMethodErrorsState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return objectMerge(errors, {\n            loadMethodId: undefined,\n            loadMethodError: undefined,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return objectMerge(errors, {\n            loadMethodId: action.meta.methodId,\n            loadMethodError: action.payload,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentMethodStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentMethodAction\n): PaymentMethodStatusesState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n        return objectMerge(statuses, {\n            isLoadingMethod: true,\n            loadMethodId: action.meta.methodId,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return objectMerge(statuses, {\n            isLoadingMethod: false,\n            loadMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { findIndex, pick, pickBy, ValueKeyIteratee } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\nimport objectMerge from './object-merge';\n\n/**\n * Push an item to an array if it doesn't exist in the array. Otherwise, merge\n * with the existing item in the array. This function always returns a new array.\n */\nexport default function mergeOrPush<T>(\n    array: T[],\n    item?: T,\n    predicate?: ValueKeyIteratee<T>\n): T[] {\n    if (!item) {\n        return array;\n    }\n\n    const defaultPredicate = pick(item, 'id');\n    const index = findIndex(array, typeof predicate === 'object' ? pickBy(predicate) : (predicate || defaultPredicate));\n    const newArray = [...array];\n\n    if (index === -1) {\n        newArray.push(item);\n    } else {\n        const existingItem = array[index];\n\n        newArray[index] = isPlainObject(existingItem) && isPlainObject(item) ?\n            objectMerge(existingItem, item) :\n            item;\n    }\n\n    return newArray;\n}\n","export default interface PaymentStrategyState {\n    data: PaymentStrategyDataState;\n    errors: PaymentStrategyErrorsState;\n    statuses: PaymentStrategyStatusesState;\n}\n\nexport interface PaymentStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface PaymentStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    executeError?: Error;\n    executeMethodId?: string;\n    finalizeError?: Error;\n    finalizeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface PaymentStrategyStatusesState {\n    deinitializeMethodId?: string;\n    executeMethodId?: string;\n    finalizeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isExecuting?: boolean;\n    isFinalizing?: boolean;\n    isInitializing?: boolean;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: PaymentStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { PaymentStrategyAction, PaymentStrategyActionType } from './payment-strategy-actions';\nimport PaymentStrategyState, { DEFAULT_STATE, PaymentStrategyDataState, PaymentStrategyErrorsState, PaymentStrategyStatusesState } from './payment-strategy-state';\n\nexport default function paymentStrategyReducer(\n    state: PaymentStrategyState = DEFAULT_STATE,\n    action: Action\n): PaymentStrategyState {\n    const reducer = combineReducers<PaymentStrategyState, PaymentStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentStrategyDataState = DEFAULT_STATE.data,\n    action: PaymentStrategyAction\n): PaymentStrategyDataState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: PaymentStrategyErrorsState = DEFAULT_STATE.errors,\n    action: PaymentStrategyAction\n): PaymentStrategyErrorsState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.ExecuteRequested:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return objectMerge(errors, {\n            executeError: undefined,\n            executeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.ExecuteFailed:\n        return objectMerge(errors, {\n            executeError: action.payload,\n            executeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.FinalizeRequested:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return objectMerge(errors, {\n            finalizeError: undefined,\n            finalizeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.FinalizeFailed:\n        return objectMerge(errors, {\n            finalizeError: action.payload,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n        return objectMerge(errors, {\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(errors, {\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentStrategyAction\n): PaymentStrategyStatusesState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.InitializeFailed:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.ExecuteRequested:\n        return objectMerge(statuses, {\n            isExecuting: true,\n            executeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.ExecuteFailed:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return objectMerge(statuses, {\n            isExecuting: false,\n            executeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.FinalizeRequested:\n        return objectMerge(statuses, {\n            isFinalizing: true,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.FinalizeFailed:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return objectMerge(statuses, {\n            isFinalizing: false,\n            finalizeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n        return objectMerge(statuses, {\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(statuses, {\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import PaymentInstrument, { VaultAccessToken } from './instrument';\n\nexport default interface InstrumentState {\n    data?: PaymentInstrument[];\n    meta?: InstrumentMeta;\n    errors: InstrumentErrorState;\n    statuses: InstrumentStatusState;\n}\n\nexport interface InstrumentErrorState {\n    deleteError?: Error;\n    failedInstrument?: string;\n    loadError?: Error;\n    vaultError?: Error;\n}\n\nexport interface InstrumentStatusState {\n    isDeleting?: boolean;\n    isLoading?: boolean;\n    isVaulting?: boolean;\n    deletingInstrument?: string;\n}\n\nexport type InstrumentMeta = VaultAccessToken;\n\nexport const DEFAULT_STATE = {\n    data: [],\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../../common/error';\nimport { arrayReplace, objectMerge, objectSet } from '../../common/utility';\n\nimport PaymentInstrument from './instrument';\nimport { InstrumentAction, InstrumentActionType } from './instrument-actions';\nimport InstrumentState, { DEFAULT_STATE, InstrumentErrorState, InstrumentMeta, InstrumentStatusState } from './instrument-state';\n\nexport default function instrumentReducer(\n    state: InstrumentState = DEFAULT_STATE,\n    action: Action\n): InstrumentState {\n    const reducer = combineReducers<InstrumentState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentInstrument[] = DEFAULT_STATE.data,\n    action: InstrumentAction\n): PaymentInstrument[] {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n        return arrayReplace(data, action.payload && action.payload.vaultedInstruments || []);\n\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n        return arrayReplace(data, data.filter(instrument =>\n            instrument.bigpayToken !== (action.meta && action.meta.instrumentId)\n        ));\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: InstrumentMeta | undefined,\n    action: InstrumentAction\n): InstrumentMeta | undefined {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n        return objectMerge(meta, action.meta);\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: InstrumentErrorState = DEFAULT_STATE.errors,\n    action: InstrumentAction\n): InstrumentErrorState {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsRequested:\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case InstrumentActionType.DeleteInstrumentRequested:\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n        return objectMerge(errors, {\n            deleteError: undefined,\n            failedInstrument: undefined,\n        });\n\n    case InstrumentActionType.LoadInstrumentsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case InstrumentActionType.DeleteInstrumentFailed:\n        return objectMerge(errors, {\n            deleteError: action.payload,\n            failedInstrument: action.meta.instrumentId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: InstrumentStatusState = DEFAULT_STATE.statuses,\n    action: InstrumentAction\n): InstrumentStatusState {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case InstrumentActionType.DeleteInstrumentRequested:\n        return objectMerge(statuses, {\n            isDeleting: true,\n            deletingInstrument: action.meta.instrumentId,\n        });\n\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n    case InstrumentActionType.LoadInstrumentsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n    case InstrumentActionType.DeleteInstrumentFailed:\n        return objectMerge(statuses, {\n            isDeleting: false,\n            deletingInstrument: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { AmazonPayRemoteCheckout } from './methods';\n\nexport default interface RemoteCheckoutState {\n    data: RemoteCheckoutStateData;\n}\n\nexport interface RemoteCheckoutStateData {\n    amazon?: AmazonPayRemoteCheckout;\n}\n\nexport const DEFAULT_STATE: RemoteCheckoutState = {\n    data: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport RemoteCheckout from './remote-checkout';\nimport { RemoteCheckoutAction, RemoteCheckoutActionType } from './remote-checkout-actions';\nimport RemoteCheckoutState, { DEFAULT_STATE, RemoteCheckoutStateData } from './remote-checkout-state';\n\nexport default function remoteCheckoutReducer(\n    state: RemoteCheckoutState = DEFAULT_STATE,\n    action: RemoteCheckoutAction\n): RemoteCheckoutState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<RemoteCheckoutState>({\n        data: combineReducers<RemoteCheckoutStateData>({\n            [action.meta.methodId]: dataReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: RemoteCheckout,\n    action: RemoteCheckoutAction\n): RemoteCheckout {\n    switch (action.type) {\n    case RemoteCheckoutActionType.InitializeRemoteBillingSucceeded:\n        return objectSet(data, 'billing' as any, action.payload && action.payload.billing);\n\n    case RemoteCheckoutActionType.InitializeRemoteShippingSucceeded:\n        return objectSet(data, 'shipping' as any, action.payload && action.payload.shipping);\n\n    case RemoteCheckoutActionType.LoadRemoteSettingsSucceeded:\n        return objectSet(data, 'settings', action.payload);\n\n    case RemoteCheckoutActionType.UpdateRemoteCheckout:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n","import Consignment from './consignment';\n\nexport default interface ConsignmentState {\n    data?: Consignment[];\n    errors: ConsignmentErrorsState;\n    statuses: ConsignmentStatusesState;\n}\n\nexport interface ConsignmentErrorsState {\n    loadError?: Error;\n    loadShippingOptionsError?: Error;\n    createError?: Error;\n    updateError: { [key: string]: Error | undefined };\n    deleteError: { [key: string]: Error | undefined };\n    updateShippingOptionError: { [key: string]: Error | undefined };\n}\n\nexport interface ConsignmentStatusesState {\n    isLoading?: boolean;\n    isLoadingShippingOptions?: boolean;\n    isCreating?: boolean;\n    isUpdating: { [key: string]: boolean };\n    isDeleting: { [key: string]: boolean };\n    isUpdatingShippingOption: { [key: string]: boolean };\n}\n\nexport const DEFAULT_STATE: ConsignmentState = {\n    errors: {\n        updateShippingOptionError: {},\n        updateError: {},\n        deleteError: {},\n    },\n    statuses: {\n        isUpdating: {},\n        isUpdatingShippingOption: {},\n        isDeleting: {},\n    },\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType } from '../coupon';\nimport { CustomerAction, CustomerActionType } from '../customer';\n\nimport Consignment from './consignment';\nimport { ConsignmentAction, ConsignmentActionType } from './consignment-actions';\nimport ConsignmentState, { ConsignmentErrorsState, ConsignmentStatusesState, DEFAULT_STATE } from './consignment-state';\n\nexport default function consignmentReducer(\n    state: ConsignmentState = DEFAULT_STATE,\n    action: Action\n): ConsignmentState {\n    const reducer = combineReducers<ConsignmentState, ConsignmentAction | CheckoutAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Consignment[] | undefined,\n    action: ConsignmentAction | CheckoutAction | CouponAction | CustomerAction\n): Consignment[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n        return arrayReplace(data, action.payload && action.payload.consignments);\n\n    case CustomerActionType.SignOutCustomerSucceeded:\n        return arrayReplace(data, []);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConsignmentErrorsState = DEFAULT_STATE.errors,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n        return objectSet(errors, 'createError', undefined);\n\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return objectSet(errors, 'createError', action.payload);\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(errors, {\n                deleteError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                deleteError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateShippingOptionError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateShippingOptionError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConsignmentStatusesState = DEFAULT_STATE.statuses,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return objectSet(statuses, 'isLoadingShippingOptions', true);\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return objectSet(statuses, 'isLoadingShippingOptions', false);\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n        return objectSet(statuses, 'isCreating', true);\n\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return objectSet(statuses, 'isCreating', false);\n\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdating: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdating: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isDeleting: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isDeleting: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdatingShippingOption: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdatingShippingOption: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    default:\n        return statuses;\n    }\n}\n","import { Country } from '../geography';\n\nexport default interface ShippingCountryState {\n    data?: Country[];\n    errors: ShippingCountryErrorsState;\n    statuses: ShippingCountryStatusesState;\n}\n\nexport interface ShippingCountryErrorsState {\n    loadError?: Error;\n}\n\nexport interface ShippingCountryStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: ShippingCountryState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { Country } from '../geography';\n\nimport { LoadShippingCountriesAction, ShippingCountryActionType } from './shipping-country-actions';\nimport ShippingCountryState, { DEFAULT_STATE, ShippingCountryErrorsState, ShippingCountryStatusesState } from './shipping-country-state';\n\nexport default function shippingCountryReducer(\n    state: ShippingCountryState = DEFAULT_STATE,\n    action: Action\n): ShippingCountryState {\n    const reducer = combineReducers<ShippingCountryState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Country[] | undefined,\n    action: LoadShippingCountriesAction\n): Country[] | undefined {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n        return arrayReplace(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ShippingCountryErrorsState = DEFAULT_STATE.errors,\n    action: LoadShippingCountriesAction\n): ShippingCountryErrorsState {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesRequested:\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case ShippingCountryActionType.LoadShippingCountriesFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingCountryStatusesState = DEFAULT_STATE.statuses,\n    action: LoadShippingCountriesAction\n): ShippingCountryStatusesState {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n    case ShippingCountryActionType.LoadShippingCountriesFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","export default interface ShippingStrategyState {\n    data: ShippingStrategyDataState;\n    errors: ShippingStrategyErrorsState;\n    statuses: ShippingStrategyStatusesState;\n}\n\nexport interface ShippingStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface ShippingStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    updateAddressError?: Error;\n    updateAddressMethodId?: string;\n    selectOptionError?: Error;\n    selectOptionMethodId?: string;\n}\n\nexport interface ShippingStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isUpdatingAddress?: boolean;\n    isSelectingOption?: boolean;\n    updateAddressMethodId?: string;\n    selectOptionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: ShippingStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { ShippingStrategyAction, ShippingStrategyActionType } from './shipping-strategy-actions';\nimport ShippingStrategyState, { DEFAULT_STATE, ShippingStrategyDataState, ShippingStrategyErrorsState, ShippingStrategyStatusesState } from './shipping-strategy-state';\n\nexport default function shippingStrategyReducer(\n    state: ShippingStrategyState = DEFAULT_STATE,\n    action: Action\n): ShippingStrategyState {\n    const reducer = combineReducers<ShippingStrategyState, ShippingStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: ShippingStrategyDataState = DEFAULT_STATE.data,\n    action: ShippingStrategyAction\n): ShippingStrategyDataState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: ShippingStrategyErrorsState = DEFAULT_STATE.errors,\n    action: ShippingStrategyAction\n): ShippingStrategyErrorsState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return objectMerge(errors, {\n            updateAddressError: undefined,\n            updateAddressMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n        return objectMerge(errors, {\n            updateAddressError: action.payload,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return objectMerge(errors, {\n            selectOptionError: undefined,\n            selectOptionMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n        return objectMerge(errors, {\n            selectOptionError: action.payload,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: ShippingStrategyAction\n): ShippingStrategyStatusesState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.InitializeFailed:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n        return objectMerge(statuses, {\n            isUpdatingAddress: true,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return objectMerge(statuses, {\n            isUpdatingAddress: false,\n            updateAddressMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n        return objectMerge(statuses, {\n            isSelectingOption: true,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return objectMerge(statuses, {\n            isSelectingOption: false,\n            selectOptionMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectSet } from '../common/utility';\n\nimport { StoreCreditAction, StoreCreditActionType } from './store-credit-actions';\nimport StoreCreditState, { StoreCreditErrorsState, StoreCreditStatusesState } from './store-credit-state';\n\nconst DEFAULT_STATE: StoreCreditState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function storeCreditReducer(\n    state: StoreCreditState = DEFAULT_STATE,\n    action: Action\n): StoreCreditState {\n    const reducer = combineReducers<StoreCreditState>({\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: StoreCreditErrorsState = DEFAULT_STATE.errors,\n    action: StoreCreditAction\n): StoreCreditErrorsState {\n    switch (action.type) {\n    case StoreCreditActionType.ApplyStoreCreditRequested:\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n        return objectSet(errors, 'applyError', undefined);\n\n    case StoreCreditActionType.ApplyStoreCreditFailed:\n        return objectSet(errors, 'applyError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: StoreCreditStatusesState = DEFAULT_STATE.statuses,\n    action: StoreCreditAction\n): StoreCreditStatusesState {\n    switch (action.type) {\n    case StoreCreditActionType.ApplyStoreCreditRequested:\n        return objectSet(statuses, 'isApplying', true);\n\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n    case StoreCreditActionType.ApplyStoreCreditFailed:\n        return objectSet(statuses, 'isApplying', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { Omit } from '../common/types';\n\nimport Checkout from './checkout';\n\nexport default interface CheckoutState {\n    data?: CheckoutDataState;\n    errors: CheckoutErrorsState;\n    statuses: CheckoutStatusesState;\n}\n\nexport type CheckoutDataState = Omit<Checkout, 'billingAddress' | 'cart' | 'consignments' | 'coupons' | 'giftCertificates'>;\n\nexport interface CheckoutErrorsState {\n    loadError?: Error;\n    updateError?: Error;\n}\n\nexport interface CheckoutStatusesState {\n    isExecutingSpamCheck?: boolean;\n    isLoading?: boolean;\n    isUpdating?: boolean;\n}\n\nexport const DEFAULT_STATE: CheckoutState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { OrderAction, OrderActionType } from '../order';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\nimport { SpamProtectionAction, SpamProtectionActionType } from '../spam-protection';\nimport { StoreCreditAction, StoreCreditActionType } from '../store-credit';\n\nimport { CheckoutAction, CheckoutActionType } from './checkout-actions';\nimport CheckoutState, { CheckoutDataState, CheckoutErrorsState, CheckoutStatusesState, DEFAULT_STATE } from './checkout-state';\n\nexport default function checkoutReducer(\n    state: CheckoutState = DEFAULT_STATE,\n    action: Action\n): CheckoutState {\n    const reducer = combineReducers<CheckoutState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutDataState | undefined,\n    action: CheckoutAction | BillingAddressAction | ConsignmentAction | CouponAction |\n        GiftCertificateAction | OrderAction | SpamProtectionAction | StoreCreditAction\n): CheckoutDataState | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case SpamProtectionActionType.ExecuteSucceeded:\n        return objectMerge(data, omit(action.payload, [\n            'billingAddress',\n            'cart',\n            'consignments',\n            'customer',\n            'coupons',\n            'giftCertificates',\n        ])) as CheckoutDataState;\n\n    case OrderActionType.SubmitOrderSucceeded:\n        return objectSet(data, 'orderId', action.payload && action.payload.order.orderId) ;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CheckoutErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | OrderAction\n): CheckoutErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return objectSet(errors, 'updateError', undefined);\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n        return objectSet(errors, 'updateError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | OrderAction | SpamProtectionAction\n): CheckoutStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(statuses, 'isLoading', false);\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n        return objectSet(statuses, 'isUpdating', true);\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return objectSet(statuses, 'isUpdating', false);\n\n    case SpamProtectionActionType.ExecuteRequested:\n        return objectSet(statuses, 'isExecutingSpamCheck', true);\n\n    case SpamProtectionActionType.ExecuteFailed:\n    case SpamProtectionActionType.ExecuteSucceeded:\n        return objectSet(statuses, 'isExecutingSpamCheck', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { deepFreeze } from '@bigcommerce/data-store';\n\n// tslint:disable-next-line:ban-types\ntype FunctionProperties<T> = { [K in keyof T]: T[K] extends Function ? T[K] : never };\n\nexport default function createFreezeProxy<T extends object>(target: T): T {\n    return createProxy(target, (target, name) =>\n        (...args: any[]) => deepFreeze(target[name].call(target, ...args))\n    );\n}\n\nexport function createFreezeProxies<T extends object, TMap extends { [key: string]: T }>(map: TMap): TMap {\n    return Object.keys(map)\n        .reduce((result, key) => {\n            result[key] = createFreezeProxy(map[key]);\n\n            return result;\n        }, {} as { [key: string]: T }) as TMap;\n}\n\nfunction createProxy<T extends object>(target: T, trap: (target: FunctionProperties<T>, name: keyof FunctionProperties<T>, proxy: T) => any): T {\n    const proxy = Object.create(target);\n\n    traversePrototypeOf(target, prototype => {\n        Object.getOwnPropertyNames(prototype)\n            .forEach(name => {\n                if (name === 'constructor' || typeof proxy[name] !== 'function' || name.charAt(0) === '_') {\n                    return;\n                }\n\n                proxy[name] = trap(target as FunctionProperties<T>, name as keyof T, proxy);\n            });\n    });\n\n    return proxy;\n}\n\nfunction traversePrototypeOf(target: object, iteratee: (prototype: object) => void): void {\n    let prototype = Object.getPrototypeOf(target);\n\n    while (prototype) {\n        iteratee(prototype);\n\n        prototype = Object.getPrototypeOf(prototype);\n    }\n}\n","import PaymentInstrument from './instrument';\n\ninterface SupportedInstruments {\n    [key: string]: Pick<PaymentInstrument, 'method' | 'provider'>;\n}\n\nconst supportedInstruments: SupportedInstruments = {\n    'adyenv2.scheme': {\n        provider: 'adyenv2',\n        method: 'scheme',\n    },\n    'adyenv2.bcmc': {\n        provider: 'adyenv2',\n        method: 'bcmc',\n    },\n    braintree: {\n        provider: 'braintree',\n        method: 'credit_card',\n    },\n    braintreepaypal: {\n        provider: 'braintree',\n        method: 'paypal',\n    },\n    authorizenet: {\n        provider: 'authorizenet',\n        method: 'credit_card',\n    },\n    stripe: {\n        provider: 'stripe',\n        method: 'credit_card',\n    },\n    stripev3: {\n        provider: 'stripev3',\n        method: 'credit_card',\n    },\n    cybersource: {\n        provider: 'cybersource',\n        method: 'credit_card',\n    },\n    converge: {\n        provider: 'converge',\n        method: 'credit_card',\n    },\n    bluesnapv2: {\n        provider: 'bluesnapv2',\n        method: 'credit_card',\n    },\n    paymetric: {\n        provider: 'paymetric',\n        method: 'credit_card',\n    },\n    'barclaycard.card': {\n        provider: 'barclaycard',\n        method: 'credit_card',\n    },\n};\n\nexport default supportedInstruments;\n","import { identity, isEqual, pickBy } from 'lodash';\n\nimport Address from './address';\n\nexport default function isAddressEqual(addressA: Partial<Address>, addressB: Partial<Address>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<Address>): Partial<Address> {\n    return pickBy({\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.address1,\n        address2: address.address2,\n        city: address.city,\n        stateOrProvince: address.stateOrProvince,\n        countryCode: address.countryCode,\n        postalCode: address.postalCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    }, identity);\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport default interface StoreCreditState {\n    errors: StoreCreditErrorsState;\n    statuses: StoreCreditStatusesState;\n}\n\nexport interface StoreCreditErrorsState {\n    applyError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface StoreCreditStatusesState {\n    isApplying?: boolean;\n}\n\nexport const DEFAULT_STATE: StoreCreditState = {\n    errors: {},\n    statuses: {},\n};\n","import { createBillingAddressSelectorFactory } from '../billing';\nimport { createCartSelectorFactory } from '../cart';\nimport { createCheckoutButtonSelectorFactory } from '../checkout-buttons';\nimport { createFreezeProxies } from '../common/utility';\nimport { createConfigSelectorFactory } from '../config';\nimport { createCouponSelectorFactory, createGiftCertificateSelectorFactory } from '../coupon';\nimport { createCustomerSelectorFactory, createCustomerStrategySelectorFactory } from '../customer';\nimport { createFormSelectorFactory } from '../form';\nimport { createCountrySelectorFactory } from '../geography';\nimport { createOrderSelectorFactory } from '../order';\nimport { createPaymentMethodSelectorFactory, createPaymentSelectorFactory, createPaymentStrategySelectorFactory } from '../payment';\nimport { createInstrumentSelectorFactory } from '../payment/instrument';\nimport { createRemoteCheckoutSelectorFactory } from '../remote-checkout';\nimport { createConsignmentSelectorFactory, createShippingAddressSelectorFactory, createShippingCountrySelectorFactory, createShippingStrategySelectorFactory } from '../shipping';\nimport { createStoreCreditSelectorFactory } from '../store-credit';\n\nimport { createCheckoutSelectorFactory } from './checkout-selector';\nimport { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport type InternalCheckoutSelectorsFactory = (\n    state: CheckoutStoreState,\n    options?: CheckoutStoreOptions\n) => InternalCheckoutSelectors;\n\nexport function createInternalCheckoutSelectorsFactory(): InternalCheckoutSelectorsFactory {\n    const createBillingAddressSelector = createBillingAddressSelectorFactory();\n    const createCartSelector = createCartSelectorFactory();\n    const createCheckoutButtonSelector = createCheckoutButtonSelectorFactory();\n    const createConfigSelector = createConfigSelectorFactory();\n    const createCountrySelector = createCountrySelectorFactory();\n    const createCouponSelector = createCouponSelectorFactory();\n    const createCustomerSelector = createCustomerSelectorFactory();\n    const createCustomerStrategySelector = createCustomerStrategySelectorFactory();\n    const createGiftCertificateSelector = createGiftCertificateSelectorFactory();\n    const createInstrumentSelector = createInstrumentSelectorFactory();\n    const createFormSelector = createFormSelectorFactory();\n    const createPaymentMethodSelector = createPaymentMethodSelectorFactory();\n    const createPaymentStrategySelector = createPaymentStrategySelectorFactory();\n    const createRemoteCheckoutSelector = createRemoteCheckoutSelectorFactory();\n    const createShippingAddressSelector = createShippingAddressSelectorFactory();\n    const createShippingCountrySelector = createShippingCountrySelectorFactory();\n    const createShippingStrategySelector = createShippingStrategySelectorFactory();\n    const createConsignmentSelector = createConsignmentSelectorFactory();\n    const createCheckoutSelector = createCheckoutSelectorFactory();\n    const createOrderSelector = createOrderSelectorFactory();\n    const createPaymentSelector = createPaymentSelectorFactory();\n    const createStoreCreditSelector = createStoreCreditSelectorFactory();\n\n    return (state, options = {}) => {\n        const billingAddress = createBillingAddressSelector(state.billingAddress);\n        const cart = createCartSelector(state.cart);\n        const checkoutButton = createCheckoutButtonSelector(state.checkoutButton);\n        const config = createConfigSelector(state.config);\n        const countries = createCountrySelector(state.countries);\n        const coupons = createCouponSelector(state.coupons);\n        const customer = createCustomerSelector(state.customer);\n        const customerStrategies = createCustomerStrategySelector(state.customerStrategies);\n        const form = createFormSelector(state.config);\n        const giftCertificates = createGiftCertificateSelector(state.giftCertificates);\n        const instruments = createInstrumentSelector(state.instruments);\n        const paymentMethods = createPaymentMethodSelector(state.paymentMethods);\n        const paymentStrategies = createPaymentStrategySelector(state.paymentStrategies);\n        const remoteCheckout = createRemoteCheckoutSelector(state.remoteCheckout);\n        const shippingAddress = createShippingAddressSelector(state.consignments);\n        const shippingCountries = createShippingCountrySelector(state.shippingCountries);\n        const shippingStrategies = createShippingStrategySelector(state.shippingStrategies);\n        const storeCredit = createStoreCreditSelector(state.storeCredit);\n\n        // Compose selectors\n        const consignments = createConsignmentSelector(state.consignments, cart);\n        const checkout = createCheckoutSelector(state.checkout, billingAddress, cart, consignments, coupons, customer, giftCertificates);\n        const order = createOrderSelector(state.order, billingAddress, coupons);\n        const payment = createPaymentSelector(checkout, order);\n\n        const selectors = {\n            billingAddress,\n            cart,\n            checkout,\n            checkoutButton,\n            config,\n            consignments,\n            countries,\n            coupons,\n            customer,\n            customerStrategies,\n            form,\n            giftCertificates,\n            instruments,\n            order,\n            payment,\n            paymentMethods,\n            paymentStrategies,\n            remoteCheckout,\n            shippingAddress,\n            shippingCountries,\n            shippingStrategies,\n            storeCredit,\n        };\n\n        return options.shouldWarnMutation ? createFreezeProxies(selectors) : selectors;\n    };\n}\n\nexport default function createInternalCheckoutSelectors(\n    state: CheckoutStoreState,\n    options?: CheckoutStoreOptions\n): InternalCheckoutSelectors {\n    return createInternalCheckoutSelectorsFactory()(state, options);\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport BillingAddress from './billing-address';\nimport BillingAddressState, { DEFAULT_STATE } from './billing-address-state';\n\nexport default interface BillingAddressSelector {\n    getBillingAddress(): BillingAddress | undefined;\n    getUpdateError(): Error | undefined;\n    getContinueAsGuestError(): Error | undefined;\n    getLoadError(): Error | undefined;\n    isUpdating(): boolean;\n    isContinuingAsGuest(): boolean;\n    isLoading(): boolean;\n}\n\nexport type BillingAddressSelectorFactory = (state: BillingAddressState) => BillingAddressSelector;\n\nexport function createBillingAddressSelectorFactory(): BillingAddressSelectorFactory {\n    const getBillingAddress = createSelector(\n        (state: BillingAddressState) => state.data,\n        data => () => data\n    );\n\n    const getUpdateError = createSelector(\n        (state: BillingAddressState) => state.errors.updateError,\n        error => () => error\n    );\n\n    const getContinueAsGuestError = createSelector(\n        (state: BillingAddressState) => state.errors.continueAsGuestError,\n        error => () => error\n    );\n\n    const getLoadError = createSelector(\n        (state: BillingAddressState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isUpdating = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isUpdating,\n        status => () => status\n    );\n\n    const isContinuingAsGuest = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isContinuingAsGuest,\n        status => () => status\n    );\n\n    const isLoading = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: BillingAddressState = DEFAULT_STATE\n    ): BillingAddressSelector => {\n        return {\n            getBillingAddress: getBillingAddress(state),\n            getUpdateError: getUpdateError(state),\n            getContinueAsGuestError: getContinueAsGuestError(state),\n            getLoadError: getLoadError(state),\n            isUpdating: isUpdating(state),\n            isContinuingAsGuest: isContinuingAsGuest(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoize, memoizeOne } from '@bigcommerce/memoize';\nimport { find, some, values } from 'lodash';\n\nimport { createSelector } from '../common/selector';\n\nimport CheckoutButtonState, { DEFAULT_STATE } from './checkout-button-state';\nimport { CheckoutButtonMethodType } from './strategies';\n\nexport default interface CheckoutButtonSelector {\n    getState(): CheckoutButtonState;\n    isInitializing(methodId?: CheckoutButtonMethodType): boolean;\n    isInitialized(methodId: CheckoutButtonMethodType, containerId?: string): boolean;\n    isDeinitializing(methodId?: CheckoutButtonMethodType): boolean;\n    getInitializeError(methodId?: CheckoutButtonMethodType): Error | undefined;\n    getDeinitializeError(methodId?: CheckoutButtonMethodType): Error | undefined;\n}\n\nexport type CheckoutButtonSelectorFactory = (state: CheckoutButtonState) => CheckoutButtonSelector;\n\nexport function createCheckoutButtonSelectorFactory(): CheckoutButtonSelectorFactory {\n    const getState = createSelector(\n        (state: CheckoutButtonState) => state,\n        state => () => state\n    );\n\n    const isInitializing = createSelector(\n        (state: CheckoutButtonState) => state.statuses,\n        statuses => memoize((methodId?: CheckoutButtonMethodType) => {\n            if (methodId) {\n                const method = statuses[methodId];\n\n                return (method && method.isInitializing) === true;\n            }\n\n            return some(statuses, { isInitializing: true });\n        })\n    );\n\n    const isInitialized = createSelector(\n        (state: CheckoutButtonState) => state.data,\n        data => memoize((methodId: CheckoutButtonMethodType, containerId?: string) => {\n            const method = data[methodId];\n\n            if (!method) {\n                return false;\n            }\n\n            if (!containerId) {\n                return some(method.initializedContainers, isInitialized => isInitialized === true);\n            }\n\n            return method.initializedContainers[containerId] === true;\n        })\n    );\n\n    const isDeinitializing = createSelector(\n        (state: CheckoutButtonState) => state.statuses,\n        statuses => memoize((methodId?: CheckoutButtonMethodType) => {\n            if (methodId) {\n                const method = statuses[methodId];\n\n                return (method && method.isDeinitializing) === true;\n            }\n\n            return some(statuses, { isDeinitializing: true });\n        })\n    );\n\n    const getInitializeError = createSelector(\n        (state: CheckoutButtonState) => state.errors,\n        errors => memoize((methodId?: CheckoutButtonMethodType) => {\n            const method = methodId ?\n                errors[methodId] :\n                find(values(errors), method => !!(method && method.initializeError));\n\n            return method && method.initializeError;\n        })\n    );\n\n    const getDeinitializeError = createSelector(\n        (state: CheckoutButtonState) => state.errors,\n        errors => memoize((methodId?: CheckoutButtonMethodType) => {\n            const method = methodId ?\n                errors[methodId] :\n                find(values(errors), method => !!(method && method.deinitializeError));\n\n            return method && method.deinitializeError;\n        })\n    );\n\n    return memoizeOne((\n        state: CheckoutButtonState = DEFAULT_STATE\n    ): CheckoutButtonSelector => {\n        return {\n            getState: getState(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isDeinitializing: isDeinitializing(state),\n            getInitializeError: getInitializeError(state),\n            getDeinitializeError: getDeinitializeError(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport Coupon from './coupon';\nimport CouponState, { DEFAULT_STATE } from './coupon-state';\n\nexport default interface CouponSelector {\n    getCoupons(): Coupon[] | undefined;\n    getRemoveError(): RequestError | undefined;\n    getApplyError(): RequestError | undefined;\n    isApplying(): boolean;\n    isRemoving(): boolean;\n}\n\nexport type CouponSelectorFactory = (state: CouponState) => CouponSelector;\n\nexport function createCouponSelectorFactory(): CouponSelectorFactory {\n    const getCoupons = createSelector(\n        (state: CouponState) => state.data,\n        data => () => data\n    );\n\n    const getRemoveError = createSelector(\n        (state: CouponState) => state.errors.removeCouponError,\n        error => () => error\n    );\n\n    const getApplyError = createSelector(\n        (state: CouponState) => state.errors.applyCouponError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: CouponState) => !!state.statuses.isApplyingCoupon,\n        status => () => status\n    );\n\n    const isRemoving = createSelector(\n        (state: CouponState) => !!state.statuses.isRemovingCoupon,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CouponState = DEFAULT_STATE\n    ): CouponSelector => {\n        return {\n            getCoupons: getCoupons(state),\n            getRemoveError: getRemoveError(state),\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n            isRemoving: isRemoving(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Customer from './customer';\nimport CustomerState, { DEFAULT_STATE } from './customer-state';\n\nexport default interface CustomerSelector {\n    getCustomer(): Customer | undefined;\n}\n\nexport type CustomerSelectorFactory = (state: CustomerState) => CustomerSelector;\n\nexport function createCustomerSelectorFactory(): CustomerSelectorFactory {\n    const getCustomer = createSelector(\n        (state: CustomerState) => state.data,\n        customer => () => customer\n    );\n\n    return memoizeOne((\n        state: CustomerState = DEFAULT_STATE\n    ): CustomerSelector => {\n        return {\n            getCustomer: getCustomer(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport RemoteCheckoutState, { DEFAULT_STATE, RemoteCheckoutStateData } from './remote-checkout-state';\n\nexport default interface RemoteCheckoutSelector {\n    getCheckout<TMethodId extends keyof RemoteCheckoutStateData>(\n        methodId: TMethodId\n    ): RemoteCheckoutStateData[TMethodId] | undefined;\n}\n\nexport type RemoteCheckoutSelectorFactory = (state: RemoteCheckoutState) => RemoteCheckoutSelector;\n\nexport function createRemoteCheckoutSelectorFactory(): RemoteCheckoutSelectorFactory {\n    const getCheckout = createSelector(\n        (state: RemoteCheckoutState) => state.data,\n        data => <TMethodId extends keyof RemoteCheckoutStateData>(methodId: TMethodId) => {\n            return data[methodId];\n        }\n    );\n\n    return memoizeOne((\n        state: RemoteCheckoutState = DEFAULT_STATE\n    ): RemoteCheckoutSelector => {\n        return {\n            getCheckout: getCheckout(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { Address } from '../address';\nimport { createSelector } from '../common/selector';\n\nimport ConsignmentState, { DEFAULT_STATE } from './consignment-state';\n\nexport default interface ShippingAddressSelector {\n    getShippingAddress(): Address | undefined;\n}\n\nexport type ShippingAddressSelectorFactory = (state: ConsignmentState) => ShippingAddressSelector;\n\nexport function createShippingAddressSelectorFactory(): ShippingAddressSelectorFactory {\n    const getShippingAddress = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => {\n            if (!consignments || !consignments[0]) {\n                return;\n            }\n\n            return consignments[0].shippingAddress;\n        }\n    );\n\n    return memoizeOne((\n        state: ConsignmentState = DEFAULT_STATE\n    ): ShippingAddressSelector => {\n        return {\n            getShippingAddress: getShippingAddress(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { CheckoutSelector } from '../checkout';\nimport { createSelector } from '../common/selector';\nimport { GatewayOrderPayment, OrderSelector } from '../order';\n\nimport PaymentMethod from './payment-method';\nimport { HOSTED } from './payment-method-types';\nimport { ACKNOWLEDGE, FINALIZE } from './payment-status-types';\n\nexport default interface PaymentSelector {\n    getPaymentId(): { providerId: string; gatewayId?: string } | undefined;\n    getPaymentStatus(): string | undefined;\n    getPaymentToken(): string | undefined;\n    getPaymentRedirectUrl(): string | undefined;\n    isPaymentDataRequired(useStoreCredit?: boolean): boolean;\n    isPaymentDataSubmitted(paymentMethod?: PaymentMethod): boolean;\n}\n\nexport type PaymentSelectorFactory = (\n    checkout: CheckoutSelector,\n    order: OrderSelector\n) => PaymentSelector;\n\ninterface PaymentSelectorDependencies {\n    checkout: CheckoutSelector;\n    order: OrderSelector;\n}\n\nexport function createPaymentSelectorFactory(): PaymentSelectorFactory {\n    const getInternalPayment = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrderMeta,\n        getOrderMeta => () => {\n            const meta = getOrderMeta();\n\n            return meta && meta.payment;\n        }\n    );\n\n    const getGatewayPayment = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrder,\n        getOrder => () => {\n            const order = getOrder();\n\n            return find(order && order.payments, ({ providerId }) =>\n                providerId !== 'giftcertificate' && providerId !== 'storecredit'\n            ) as GatewayOrderPayment;\n        }\n    );\n\n    const getHostedPayment = createSelector(\n        ({ checkout }: PaymentSelectorDependencies) => checkout.getCheckout,\n        getCheckout => () => {\n            const checkout = getCheckout();\n\n            return find(checkout && checkout.payments, ({ providerType }) =>\n                providerType === HOSTED\n            );\n        }\n    );\n\n    const getPaymentId = createSelector(\n        getInternalPayment,\n        getHostedPayment,\n        getGatewayPayment,\n        (getInternalPayment, getHostedPayment, getGatewayPayment) => () => {\n            const internalPayment = getInternalPayment();\n\n            if (internalPayment && internalPayment.id) {\n                return {\n                    providerId: internalPayment.id,\n                    gatewayId: internalPayment.gateway,\n                };\n            }\n\n            const payment = getHostedPayment() || getGatewayPayment();\n\n            if (payment && payment.providerId) {\n                return {\n                    providerId: payment.providerId,\n                    gatewayId: payment.gatewayId,\n                };\n            }\n        }\n    );\n\n    const getPaymentStatus = createSelector(\n        getInternalPayment,\n        getHostedPayment,\n        getGatewayPayment,\n        (getInternalPayment, getHostedPayment, getGatewayPayment) => () => {\n            const internalPayment = getInternalPayment();\n\n            if (internalPayment && internalPayment.status) {\n                return internalPayment.status.replace('PAYMENT_STATUS_', '');\n            }\n\n            const payment = getHostedPayment() || getGatewayPayment();\n\n            if (payment) {\n                return payment.detail.step;\n            }\n        }\n    );\n\n    const getPaymentToken = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrderMeta,\n        getOrderMeta => () => {\n            const meta = getOrderMeta();\n\n            return meta && meta.token;\n        }\n    );\n\n    const getPaymentRedirectUrl = createSelector(\n        getInternalPayment,\n        getInternalPayment => () => {\n            const payment = getInternalPayment();\n\n            return payment && payment.redirectUrl;\n        }\n    );\n\n    const isPaymentDataRequired = createSelector(\n        ({ checkout }: PaymentSelectorDependencies) => checkout.getOutstandingBalance,\n        getOutstandingBalance => (useStoreCredit: boolean = false) => {\n            const grandTotal = getOutstandingBalance(useStoreCredit);\n\n            return grandTotal ? grandTotal > 0 : false;\n        }\n    );\n\n    const isPaymentDataSubmitted = createSelector(\n        getPaymentStatus,\n        getPaymentStatus => (paymentMethod?: PaymentMethod) => {\n            if (paymentMethod && paymentMethod.nonce) {\n                return true;\n            }\n\n            return getPaymentStatus() === ACKNOWLEDGE || getPaymentStatus() === FINALIZE;\n        }\n    );\n\n    return memoizeOne((\n        checkout: CheckoutSelector,\n        order: OrderSelector\n    ): PaymentSelector => {\n        return {\n            getPaymentId: getPaymentId({ checkout, order }),\n            getPaymentStatus: getPaymentStatus({ checkout, order }),\n            getPaymentToken: getPaymentToken({ checkout, order }),\n            getPaymentRedirectUrl: getPaymentRedirectUrl({ checkout, order }),\n            isPaymentDataRequired: isPaymentDataRequired({ checkout, order }),\n            isPaymentDataSubmitted: isPaymentDataSubmitted({ checkout, order }),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Cart from './cart';\nimport CartState, { DEFAULT_STATE } from './cart-state';\n\nexport default interface CartSelector {\n    getCart(): Cart | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type CartSelectorFactory = (state: CartState) => CartSelector;\n\nexport function createCartSelectorFactory() {\n    const getCart = createSelector(\n        (state: CartState) => state.data,\n        cart => () => cart\n    );\n\n    const getLoadError = createSelector(\n        (state: CartState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: CartState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CartState = DEFAULT_STATE\n    ): CartSelector => {\n        return {\n            getCart: getCart(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Config, { ContextConfig, StoreConfig } from './config';\nimport ConfigState, { DEFAULT_STATE } from './config-state';\n\nexport default interface ConfigSelector {\n    getConfig(): Config | undefined;\n    getStoreConfig(): StoreConfig | undefined;\n    getContextConfig(): ContextConfig | undefined;\n    getExternalSource(): string | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type ConfigSelectorFactory = (state: ConfigState) => ConfigSelector;\n\nexport function createConfigSelectorFactory(): ConfigSelectorFactory {\n\n    const getConfig = createSelector(\n        (state: ConfigState) => state.data,\n        data => () => data\n    );\n\n    const getStoreConfig = createSelector(\n        (state: ConfigState) => state.data && state.data.storeConfig,\n        data => () => data\n    );\n\n    const getContextConfig = createSelector(\n        (state: ConfigState) => state.data && state.data.context,\n        data => () => data\n    );\n\n    const getExternalSource = createSelector(\n        (state: ConfigState) => state.meta && state.meta.externalSource,\n        data => () => data\n    );\n\n    const getLoadError = createSelector(\n        (state: ConfigState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: ConfigState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: ConfigState = DEFAULT_STATE\n    ): ConfigSelector => {\n        return {\n            getConfig: getConfig(state),\n            getStoreConfig: getStoreConfig(state),\n            getContextConfig: getContextConfig(state),\n            getExternalSource: getExternalSource(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Country from './country';\nimport CountryState, { DEFAULT_STATE } from './country-state';\n\nexport default interface CountrySelector {\n    getCountries(): Country[] | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type CountrySelectorFactory = (state: CountryState) => CountrySelector;\n\nexport function createCountrySelectorFactory(): CountrySelectorFactory {\n    const getCountries = createSelector(\n        (state: CountryState) => state.data,\n        countries => () => countries\n    );\n\n    const getLoadError = createSelector(\n        (state: CountryState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: CountryState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CountryState = DEFAULT_STATE\n    ): CountrySelector => {\n        return {\n            getCountries: getCountries(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport CustomerStrategyState, { DEFAULT_STATE } from './customer-strategy-state';\n\nexport default interface CustomerStrategySelector {\n    getSignInError(methodId?: string): Error | undefined;\n    getSignOutError(methodId?: string): Error | undefined;\n    getInitializeError(methodId?: string): Error | undefined;\n    getWidgetInteractionError(methodId?: string): Error | undefined;\n    isSigningIn(methodId?: string): boolean;\n    isSigningOut(methodId?: string): boolean;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n    isWidgetInteracting(methodId?: string): boolean;\n}\n\nexport type CustomerStrategySelectorFactory = (state: CustomerStrategyState) => CustomerStrategySelector;\n\nexport function createCustomerStrategySelectorFactory(): CustomerStrategySelectorFactory {\n    const getSignInError = createSelector(\n        (state: CustomerStrategyState) => state.errors.signInMethodId,\n        (state: CustomerStrategyState) => state.errors.signInError,\n        (signInMethodId, signInError) => (methodId?: string) => {\n            if (methodId && signInMethodId !== methodId) {\n                return;\n            }\n\n            return signInError;\n        }\n    );\n\n    const getSignOutError = createSelector(\n        (state: CustomerStrategyState) => state.errors.signOutMethodId,\n        (state: CustomerStrategyState) => state.errors.signOutError,\n        (signOutMethodId, signOutError) => (methodId?: string) => {\n            if (methodId && signOutMethodId !== methodId) {\n                return;\n            }\n\n            return signOutError;\n        }\n    );\n\n    const getInitializeError = createSelector(\n        (state: CustomerStrategyState) => state.errors.initializeMethodId,\n        (state: CustomerStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const getWidgetInteractionError = createSelector(\n        (state: CustomerStrategyState) => state.errors.widgetInteractionMethodId,\n        (state: CustomerStrategyState) => state.errors.widgetInteractionError,\n        (widgetInteractionMethodId, widgetInteractionError) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return;\n            }\n\n            return widgetInteractionError;\n        }\n    );\n\n    const isSigningIn = createSelector(\n        (state: CustomerStrategyState) => state.statuses.signInMethodId,\n        (state: CustomerStrategyState) => state.statuses.isSigningIn,\n        (signInMethodId, isSigningIn) => (methodId?: string) => {\n            if (methodId && signInMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSigningIn;\n        }\n    );\n\n    const isSigningOut = createSelector(\n        (state: CustomerStrategyState) => state.statuses.signOutMethodId,\n        (state: CustomerStrategyState) => state.statuses.isSigningOut,\n        (signOutMethodId, isSigningOut) => (methodId?: string) => {\n            if (methodId && signOutMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSigningOut;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: CustomerStrategyState) => state.statuses.initializeMethodId,\n        (state: CustomerStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: CustomerStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    const isWidgetInteracting = createSelector(\n        (state: CustomerStrategyState) => state.statuses.widgetInteractionMethodId,\n        (state: CustomerStrategyState) => state.statuses.isWidgetInteracting,\n        (widgetInteractionMethodId, isWidgetInteracting) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isWidgetInteracting;\n        }\n    );\n\n    return memoizeOne((\n        state: CustomerStrategyState = DEFAULT_STATE\n    ): CustomerStrategySelector => {\n        return {\n            getSignInError: getSignInError(state),\n            getSignOutError: getSignOutError(state),\n            getInitializeError: getInitializeError(state),\n            getWidgetInteractionError: getWidgetInteractionError(state),\n            isSigningIn: isSigningIn(state),\n            isSigningOut: isSigningOut(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isWidgetInteracting: isWidgetInteracting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport GiftCertificate from './gift-certificate';\nimport GiftCertificateState, { DEFAULT_STATE } from './gift-certificate-state';\n\nexport default interface GiftCertificateSelector {\n    getGiftCertificates(): GiftCertificate[] | undefined;\n    getRemoveError(): RequestError<StorefrontErrorResponseBody> | undefined;\n    getApplyError(): RequestError<StorefrontErrorResponseBody> | undefined;\n    isApplying(): boolean;\n    isRemoving(): boolean;\n}\n\nexport type GiftCertificateSelectorFactory = (state: GiftCertificateState) => GiftCertificateSelector;\n\nexport function createGiftCertificateSelectorFactory(): GiftCertificateSelectorFactory {\n    const getGiftCertificates = createSelector(\n        (state: GiftCertificateState) => state.data,\n        data => () => data\n    );\n\n    const getRemoveError = createSelector(\n        (state: GiftCertificateState) => state.errors.removeGiftCertificateError,\n        error => () => error\n    );\n\n    const getApplyError = createSelector(\n        (state: GiftCertificateState) => state.errors.applyGiftCertificateError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: GiftCertificateState) => !!state.statuses.isApplyingGiftCertificate,\n        status => () => status\n    );\n\n    const isRemoving = createSelector(\n        (state: GiftCertificateState) => !!state.statuses.isRemovingGiftCertificate,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: GiftCertificateState = DEFAULT_STATE\n    ): GiftCertificateSelector => {\n        return {\n            getGiftCertificates: getGiftCertificates(state),\n            getRemoveError: getRemoveError(state),\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n            isRemoving: isRemoving(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { filter, flatMap, isMatch } from 'lodash';\n\nimport { PaymentMethod } from '..';\nimport { createSelector } from '../../common/selector';\n\nimport PaymentInstrument, { CardInstrument } from './instrument';\nimport InstrumentState, { DEFAULT_STATE, InstrumentMeta } from './instrument-state';\nimport supportedInstruments from './supported-payment-instruments';\n\nexport default interface InstrumentSelector {\n    getInstruments(): CardInstrument[] | undefined;\n    getInstrumentsByPaymentMethod(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n    getInstrumentsMeta(): InstrumentMeta | undefined;\n    getLoadError(): Error | undefined;\n    getDeleteError(instrumentId?: string): Error | undefined;\n    isLoading(): boolean ;\n    isDeleting(instrumentId?: string): boolean;\n}\n\nexport type InstrumentSelectorFactory = (state: InstrumentState) => InstrumentSelector;\n\nexport function createInstrumentSelectorFactory(): InstrumentSelectorFactory {\n    const getInstrumentsByPaymentMethod = createSelector(\n        (state: InstrumentState) => state.data,\n        instruments => (paymentMethod: PaymentMethod) => {\n            if (!instruments) {\n                return;\n            }\n\n            const paymentMethodKey = paymentMethod.gateway ? `${paymentMethod.gateway}.${paymentMethod.id}` : paymentMethod.id;\n\n            const currentMethod = supportedInstruments[paymentMethodKey];\n\n            if (!currentMethod) {\n                return [];\n            }\n\n            return filter<PaymentInstrument>(instruments, currentMethod);\n        }\n    );\n\n    const getInstruments = createSelector(\n        (state: InstrumentState) => state.data,\n        instruments => () => {\n            if (!instruments) {\n                return;\n            }\n\n            const cardInstruments = flatMap(supportedInstruments, card =>\n                filter(instruments, (instrument: PaymentInstrument): instrument is CardInstrument => {\n                    return card.method === 'credit_card' && isMatch(instrument, card);\n                })\n            );\n\n            return cardInstruments;\n        }\n    );\n\n    const getInstrumentsMeta = createSelector(\n        (state: InstrumentState) => state.meta,\n        meta => () => meta\n    );\n\n    const getLoadError = createSelector(\n        (state: InstrumentState) => state.errors.loadError,\n        loadError => () => loadError\n    );\n\n    const getDeleteError = createSelector(\n        (state: InstrumentState) => state.errors.failedInstrument,\n        (state: InstrumentState) => state.errors.deleteError,\n        (failedInstrument, deleteError) => (instrumentId?: string) => {\n            if (instrumentId && failedInstrument !== instrumentId) {\n                return;\n            }\n\n            return deleteError;\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: InstrumentState) => state.statuses.isLoading,\n        isLoading => () => !!isLoading\n    );\n\n    const isDeleting = createSelector(\n        (state: InstrumentState) => state.statuses.deletingInstrument,\n        (state: InstrumentState) => state.statuses.isDeleting,\n        (deletingInstrument, isDeleting) => (instrumentId?: string) => {\n            if (instrumentId && deletingInstrument !== instrumentId) {\n                return false;\n            }\n\n            return !!isDeleting;\n        }\n    );\n\n    return memoizeOne((\n        state: InstrumentState = DEFAULT_STATE\n    ): InstrumentSelector => {\n        return {\n            getInstruments: getInstruments(state),\n            getInstrumentsByPaymentMethod: getInstrumentsByPaymentMethod(state),\n            getInstrumentsMeta: getInstrumentsMeta(state),\n            getLoadError: getLoadError(state),\n            getDeleteError: getDeleteError(state),\n            isLoading: isLoading(state),\n            isDeleting: isDeleting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { createSelector } from '../common/selector';\nimport { ConfigState, DEFAULT_STATE } from '../config';\nimport { Country } from '../geography';\n\nimport FormField from './form-field';\n\nexport default interface FormSelector {\n    getShippingAddressFields(countries: Country[] | undefined, countryCode: string): FormField[];\n    getBillingAddressFields(countries: Country[] | undefined, countryCode: string): FormField[];\n}\n\nexport type FormSelectorFactory = (state: ConfigState) => FormSelector;\n\nexport function createFormSelectorFactory(): FormSelectorFactory {\n    const getShippingAddressFields = createSelector(\n        (state: ConfigState) => state.data,\n        config => (countries: Country[] = [], countryCode: string) => {\n            const selectedCountry = find(countries, { code: countryCode });\n            const fields = config ? config.storeConfig.formFields.shippingAddressFields : [];\n\n            return fields.map((field: any) => processField(field, countries, selectedCountry));\n        }\n    );\n\n    const getBillingAddressFields = createSelector(\n        (state: ConfigState) => state.data,\n        config => (countries: Country[] = [], countryCode: string) => {\n            const selectedCountry = find(countries, { code: countryCode });\n            const fields = config ? config.storeConfig.formFields.billingAddressFields : [];\n\n            return fields.map((field: any) => processField(field, countries, selectedCountry));\n        }\n    );\n\n    function processField(field: FormField, countries: Country[], selectedCountry?: Country): FormField {\n        if (field.name === 'countryCode') {\n            return processCountry(field, countries, selectedCountry);\n        }\n\n        if (field.name === 'stateOrProvince') {\n            return processProvince(field, selectedCountry);\n        }\n\n        if (field.name === 'postalCode') {\n            return processsPostCode(field, selectedCountry);\n        }\n\n        return field;\n    }\n\n    function processCountry(field: FormField, countries: Country[] = [], country?: Country): FormField {\n        if (!countries.length) {\n            return field;\n        }\n\n        const { code = '' } = country || {};\n        const items = countries.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            options: { items },\n            default: code,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    function processProvince(field: FormField, country?: Country): FormField {\n        const { subdivisions = [], requiresState } = country || {};\n\n        if (!subdivisions.length) {\n            return {\n                ...field,\n                required: requiresState == null ? false : requiresState,\n            };\n        }\n\n        const items = subdivisions.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            name: 'stateOrProvinceCode',\n            options: { items },\n            required: requiresState == null ? true : requiresState,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    function processsPostCode(field: FormField, country?: Country): FormField {\n        const { hasPostalCodes = [] } = country || {};\n\n        if (hasPostalCodes === undefined) {\n            return field;\n        }\n\n        return { ...field, required: Boolean(hasPostalCodes) };\n    }\n\n    return memoizeOne((\n        state: ConfigState = DEFAULT_STATE\n    ): FormSelector => {\n        return {\n            getShippingAddressFields: getShippingAddressFields(state),\n            getBillingAddressFields: getBillingAddressFields(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { createSelector } from '../common/selector';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { DEFAULT_STATE } from './payment-method-state';\n\nexport default interface PaymentMethodSelector {\n    getPaymentMethods(): PaymentMethod[] | undefined;\n    getPaymentMethodsMeta(): PaymentMethodMeta | undefined;\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined;\n    getLoadError(): Error | undefined;\n    getLoadMethodError(methodId?: string): Error | undefined;\n    isLoading(): boolean;\n    isLoadingMethod(methodId?: string): boolean;\n}\n\nexport type PaymentMethodSelectorFactory = (state: PaymentMethodState) => PaymentMethodSelector;\n\nexport function createPaymentMethodSelectorFactory(): PaymentMethodSelectorFactory {\n    const getPaymentMethods = createSelector(\n        (state: PaymentMethodState) => state.data,\n        paymentMethods => () => paymentMethods\n    );\n\n    const getPaymentMethodsMeta = createSelector(\n        (state: PaymentMethodState) => state.meta,\n        meta => () => meta\n    );\n\n    const getPaymentMethod = createSelector(\n        (state: PaymentMethodState) => state.data,\n        paymentMethods => (methodId: string, gatewayId?: string) => {\n            return gatewayId ?\n                find(paymentMethods, { id: methodId, gateway: gatewayId }) :\n                find(paymentMethods, { id: methodId });\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: PaymentMethodState) => state.errors.loadError,\n        loadError => () => loadError\n    );\n\n    const getLoadMethodError = createSelector(\n        (state: PaymentMethodState) => state.errors.loadMethodId,\n        (state: PaymentMethodState) => state.errors.loadMethodError,\n        (loadMethodId, loadMethodError) => (methodId?: string) => {\n            if (methodId && loadMethodId !== methodId) {\n                return;\n            }\n\n            return loadMethodError;\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: PaymentMethodState) => state.statuses.isLoading,\n        isLoading => () => !!isLoading\n    );\n\n    const isLoadingMethod = createSelector(\n        (state: PaymentMethodState) => state.statuses.loadMethodId,\n        (state: PaymentMethodState) => state.statuses.isLoadingMethod,\n        (loadMethodId, isLoadingMethod) => (methodId?: string) => {\n            if (methodId && loadMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isLoadingMethod;\n        }\n    );\n\n    return memoizeOne((\n        state: PaymentMethodState = DEFAULT_STATE\n    ): PaymentMethodSelector => {\n        return {\n            getPaymentMethods: getPaymentMethods(state),\n            getPaymentMethodsMeta: getPaymentMethodsMeta(state),\n            getPaymentMethod: getPaymentMethod(state),\n            getLoadError: getLoadError(state),\n            getLoadMethodError: getLoadMethodError(state),\n            isLoading: isLoading(state),\n            isLoadingMethod: isLoadingMethod(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport PaymentStrategyState, { DEFAULT_STATE } from './payment-strategy-state';\n\nexport default interface PaymentStrategySelector {\n    getInitializeError(methodId?: string): Error | undefined;\n    getExecuteError(methodId?: string): Error | undefined;\n    getFinalizeError(methodId?: string): Error | undefined;\n    getWidgetInteractingError(methodId?: string): Error | undefined;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n    isExecuting(methodId?: string): boolean;\n    isFinalizing(methodId?: string): boolean;\n    isWidgetInteracting(methodId?: string): boolean;\n}\n\nexport type PaymentStrategySelectorFactory = (state: PaymentStrategyState) => PaymentStrategySelector;\n\nexport function createPaymentStrategySelectorFactory(): PaymentStrategySelectorFactory {\n    const getInitializeError = createSelector(\n        (state: PaymentStrategyState) => state.errors.initializeMethodId,\n        (state: PaymentStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const getExecuteError = createSelector(\n        (state: PaymentStrategyState) => state.errors.executeMethodId,\n        (state: PaymentStrategyState) => state.errors.executeError,\n        (executeMethodId, executeError) => (methodId?: string) => {\n            if (methodId && executeMethodId !== methodId) {\n                return;\n            }\n\n            return executeError;\n        }\n    );\n\n    const getFinalizeError = createSelector(\n        (state: PaymentStrategyState) => state.errors.finalizeMethodId,\n        (state: PaymentStrategyState) => state.errors.finalizeError,\n        (finalizeMethodId, finalizeError) => (methodId?: string) => {\n            if (methodId && finalizeMethodId !== methodId) {\n                return;\n            }\n\n            return finalizeError;\n        }\n    );\n\n    const getWidgetInteractingError = createSelector(\n        (state: PaymentStrategyState) => state.errors.widgetInteractionMethodId,\n        (state: PaymentStrategyState) => state.errors.widgetInteractionError,\n        (widgetInteractionMethodId, widgetInteractionError) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return;\n            }\n\n            return widgetInteractionError;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: PaymentStrategyState) => state.statuses.initializeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: PaymentStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    const isExecuting = createSelector(\n        (state: PaymentStrategyState) => state.statuses.executeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isExecuting,\n        (executeMethodId, isExecuting) => (methodId?: string) => {\n            if (methodId && executeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isExecuting;\n        }\n    );\n\n    const isFinalizing = createSelector(\n        (state: PaymentStrategyState) => state.statuses.finalizeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isFinalizing,\n        (finalizeMethodId, isFinalizing) => (methodId?: string) => {\n            if (methodId && finalizeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isFinalizing;\n        }\n    );\n\n    const isWidgetInteracting = createSelector(\n        (state: PaymentStrategyState) => state.statuses.widgetInteractionMethodId,\n        (state: PaymentStrategyState) => state.statuses.isWidgetInteracting,\n        (widgetInteractionMethodId, isWidgetInteracting) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isWidgetInteracting;\n        }\n    );\n\n    return memoizeOne((\n        state: PaymentStrategyState = DEFAULT_STATE\n    ): PaymentStrategySelector => {\n        return {\n            getInitializeError: getInitializeError(state),\n            getExecuteError: getExecuteError(state),\n            getFinalizeError: getFinalizeError(state),\n            getWidgetInteractingError: getWidgetInteractingError(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isExecuting: isExecuting(state),\n            isFinalizing: isFinalizing(state),\n            isWidgetInteracting: isWidgetInteracting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\nimport { Country } from '../geography';\n\nimport ShippingCountryState, { DEFAULT_STATE } from './shipping-country-state';\n\nexport default interface ShippingCountrySelector {\n    getShippingCountries(): Country[] | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type ShippingCountrySelectorFactory = (state: ShippingCountryState) => ShippingCountrySelector;\n\nexport function createShippingCountrySelectorFactory(): ShippingCountrySelectorFactory {\n    const getShippingCountries = createSelector(\n        (state: ShippingCountryState) => state.data,\n        data => () => data\n    );\n\n    const getLoadError = createSelector(\n        (state: ShippingCountryState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: ShippingCountryState) => state.statuses.isLoading,\n        status => () => !!status\n    );\n\n    return memoizeOne((\n        state: ShippingCountryState = DEFAULT_STATE\n    ): ShippingCountrySelector => {\n        return {\n            getShippingCountries: getShippingCountries(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport ShippingStrategyState, { DEFAULT_STATE } from './shipping-strategy-state';\n\nexport default interface ShippingStrategySelector {\n    getUpdateAddressError(methodId?: string): Error | undefined;\n    getSelectOptionError(methodId?: string): Error | undefined;\n    getInitializeError(methodId?: string): Error | undefined;\n    isUpdatingAddress(methodId?: string): boolean;\n    isSelectingOption(methodId?: string): boolean;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n}\n\nexport type ShippingStrategySelectorFactory = (state: ShippingStrategyState) => ShippingStrategySelector;\n\nexport function createShippingStrategySelectorFactory(): ShippingStrategySelectorFactory {\n    const getUpdateAddressError = createSelector(\n        (state: ShippingStrategyState) => state.errors.updateAddressMethodId,\n        (state: ShippingStrategyState) => state.errors.updateAddressError,\n        (updateAddressMethodId, updateAddressError) => (methodId?: string) => {\n            if (methodId && updateAddressMethodId !== methodId) {\n                return;\n            }\n\n            return updateAddressError;\n        }\n    );\n\n    const getSelectOptionError = createSelector(\n        (state: ShippingStrategyState) => state.errors.selectOptionMethodId,\n        (state: ShippingStrategyState) => state.errors.selectOptionError,\n        (selectOptionMethodId, selectOptionError) => (methodId?: string) => {\n            if (methodId && selectOptionMethodId !== methodId) {\n                return;\n            }\n\n            return selectOptionError;\n        }\n    );\n\n    const getInitializeError = createSelector(\n        (state: ShippingStrategyState) => state.errors.initializeMethodId,\n        (state: ShippingStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const isUpdatingAddress = createSelector(\n        (state: ShippingStrategyState) => state.statuses.updateAddressMethodId,\n        (state: ShippingStrategyState) => state.statuses.isUpdatingAddress,\n        (updateAddressMethodId, isUpdatingAddress) => (methodId?: string) => {\n            if (methodId && updateAddressMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isUpdatingAddress;\n        }\n    );\n\n    const isSelectingOption = createSelector(\n        (state: ShippingStrategyState) => state.statuses.selectOptionMethodId,\n        (state: ShippingStrategyState) => state.statuses.isSelectingOption,\n        (selectOptionMethodId, isSelectingOption) => (methodId?: string) => {\n            if (methodId && selectOptionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSelectingOption;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: ShippingStrategyState) => state.statuses.initializeMethodId,\n        (state: ShippingStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: ShippingStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: ShippingStrategyState = DEFAULT_STATE\n    ): ShippingStrategySelector => {\n        return {\n            getUpdateAddressError: getUpdateAddressError(state),\n            getSelectOptionError: getSelectOptionError(state),\n            getInitializeError: getInitializeError(state),\n            isUpdatingAddress: isUpdatingAddress(state),\n            isSelectingOption: isSelectingOption(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { isAddressEqual, AddressRequestBody } from '../address';\nimport { CartSelector, PhysicalItem } from '../cart';\nimport { createSelector } from '../common/selector';\n\nimport Consignment from './consignment';\nimport ConsignmentState, { DEFAULT_STATE } from './consignment-state';\nimport ShippingOption from './shipping-option';\n\nexport default interface ConsignmentSelector {\n    getConsignments(): Consignment[] | undefined;\n    getConsignmentById(id: string): Consignment | undefined;\n    getConsignmentByAddress(address: AddressRequestBody): Consignment | undefined;\n    getShippingOption(): ShippingOption | undefined;\n    getLoadError(): Error | undefined;\n    getCreateError(): Error | undefined;\n    getLoadShippingOptionsError(): Error | undefined;\n    getUnassignedItems(): PhysicalItem[];\n    getUpdateError(consignmentId?: string): Error | undefined;\n    getDeleteError(consignmentId?: string): Error | undefined;\n    getItemAssignmentError(address: AddressRequestBody): Error | undefined;\n    getUpdateShippingOptionError(consignmentId?: string): Error | undefined;\n    isLoading(): boolean;\n    isLoadingShippingOptions(): boolean;\n    isCreating(): boolean;\n    isUpdating(consignmentId?: string): boolean;\n    isDeleting(consignmentId?: string): boolean;\n    isAssigningItems(address: AddressRequestBody): boolean;\n    isUpdatingShippingOption(consignmentId?: string): boolean;\n}\n\nexport type ConsignmentSelectorFactory = (\n    state: ConsignmentState,\n    cart: CartSelector\n) => ConsignmentSelector;\n\ninterface ConsignmentSelectorDependencies {\n    cart: CartSelector;\n}\n\nexport function createConsignmentSelectorFactory(): ConsignmentSelectorFactory {\n    const getConsignments = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => consignments\n    );\n\n    const getConsignmentById = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => (id: string) => {\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return find(consignments, { id });\n        }\n    );\n\n    const getConsignmentByAddress = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => (address: AddressRequestBody) => {\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return find(consignments, consignment =>\n                isAddressEqual(consignment.shippingAddress, address)\n            );\n        }\n    );\n\n    const getShippingOption = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => {\n            if (consignments && consignments.length) {\n                return consignments[0].selectedShippingOption;\n            }\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: ConsignmentState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const getCreateError = createSelector(\n        (state: ConsignmentState) => state.errors.createError,\n        error => () => error\n    );\n\n    const getLoadShippingOptionsError = createSelector(\n        (state: ConsignmentState) => state.errors.loadShippingOptionsError,\n        error => () => error\n    );\n\n    const getUnassignedItems = createSelector(\n        getConsignments,\n        (_: ConsignmentState, { cart }: ConsignmentSelectorDependencies) => cart.getCart,\n        (getConsignments, getCart) => () => {\n            const cart = getCart();\n\n            if (!cart) {\n                return [];\n            }\n\n            const assignedLineItemIds = (getConsignments() || []).reduce(\n                (itemIds, consignment) => itemIds.concat(consignment.lineItemIds),\n                [] as string[]\n            );\n\n            return (cart.lineItems.physicalItems || []).filter(\n                item => assignedLineItemIds.indexOf(item.id as string) < 0\n            );\n        }\n    );\n\n    const getUpdateError = createSelector(\n        (state: ConsignmentState) => state.errors.updateError,\n        updateError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return updateError[consignmentId];\n            }\n\n            return find(updateError);\n        }\n    );\n\n    const getDeleteError = createSelector(\n        (state: ConsignmentState) => state.errors.deleteError,\n        deleteError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return deleteError[consignmentId];\n            }\n\n            return find(deleteError);\n        }\n    );\n\n    const getItemAssignmentError = createSelector(\n        getConsignmentByAddress,\n        getUpdateError,\n        getCreateError,\n        (getConsignmentByAddress, getUpdateError, getCreateError) => (address: AddressRequestBody) => {\n            const consignment = getConsignmentByAddress(address);\n\n            return consignment ? getUpdateError(consignment.id) : getCreateError();\n        }\n    );\n\n    const getUpdateShippingOptionError = createSelector(\n        (state: ConsignmentState) => state.errors.updateShippingOptionError,\n        updateShippingOptionError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return updateShippingOptionError[consignmentId];\n            }\n\n            return find(updateShippingOptionError);\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: ConsignmentState) => state.statuses.isLoading,\n        isLoading => () => isLoading === true\n    );\n\n    const isLoadingShippingOptions = createSelector(\n        (state: ConsignmentState) => state.statuses.isLoadingShippingOptions,\n        isLoadingShippingOptions => () => isLoadingShippingOptions === true\n    );\n\n    const isCreating = createSelector(\n        (state: ConsignmentState) => state.statuses.isCreating,\n        isCreating => () => isCreating === true\n    );\n\n    const isUpdating = createSelector(\n        (state: ConsignmentState) => state.statuses.isUpdating,\n        isUpdating => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isUpdating[consignmentId] === true;\n            }\n\n            return find(isUpdating) === true;\n        }\n    );\n\n    const isDeleting = createSelector(\n        (state: ConsignmentState) => state.statuses.isDeleting,\n        isDeleting => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isDeleting[consignmentId] === true;\n            }\n\n            return find(isDeleting) === true;\n        }\n    );\n\n    const isAssigningItems = createSelector(\n        getConsignmentByAddress,\n        isUpdating,\n        isCreating,\n        (getConsignmentByAddress, isUpdating, isCreating) => (address: AddressRequestBody) => {\n            const consignment = getConsignmentByAddress(address);\n\n            return consignment ? isUpdating(consignment.id) : isCreating();\n        }\n    );\n\n    const isUpdatingShippingOption = createSelector(\n        (state: ConsignmentState) => state.statuses.isUpdatingShippingOption,\n        isUpdatingShippingOption => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isUpdatingShippingOption[consignmentId] === true;\n            }\n\n            return find(isUpdatingShippingOption) === true;\n        }\n    );\n\n    return memoizeOne((\n        state: ConsignmentState = DEFAULT_STATE,\n        cart: CartSelector\n    ): ConsignmentSelector => {\n        return {\n            getConsignments: getConsignments(state),\n            getConsignmentById: getConsignmentById(state),\n            getConsignmentByAddress: getConsignmentByAddress(state),\n            getShippingOption: getShippingOption(state),\n            getLoadError: getLoadError(state),\n            getCreateError: getCreateError(state),\n            getLoadShippingOptionsError: getLoadShippingOptionsError(state),\n            getUnassignedItems: getUnassignedItems(state, { cart }),\n            getUpdateError: getUpdateError(state),\n            getDeleteError: getDeleteError(state),\n            getItemAssignmentError: getItemAssignmentError(state),\n            getUpdateShippingOptionError: getUpdateShippingOptionError(state),\n            isLoading: isLoading(state),\n            isLoadingShippingOptions: isLoadingShippingOptions(state),\n            isCreating: isCreating(state),\n            isUpdating: isUpdating(state),\n            isDeleting: isDeleting(state),\n            isAssigningItems: isAssigningItems(state),\n            isUpdatingShippingOption: isUpdatingShippingOption(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { BillingAddressSelector } from '../billing';\nimport { CartSelector } from '../cart';\nimport { createSelector } from '../common/selector';\nimport { CouponSelector, GiftCertificateSelector } from '../coupon';\nimport { CustomerSelector } from '../customer';\nimport { ConsignmentSelector } from '../shipping';\n\nimport Checkout from './checkout';\nimport CheckoutState, { DEFAULT_STATE } from './checkout-state';\n\nexport default interface CheckoutSelector {\n    getCheckout(): Checkout | undefined;\n    getOutstandingBalance(useStoreCredit?: boolean): number | undefined;\n    getLoadError(): Error | undefined;\n    getUpdateError(): Error | undefined;\n    isExecutingSpamCheck(): boolean;\n    isLoading(): boolean;\n    isUpdating(): boolean;\n}\n\nexport type CheckoutSelectorFactory = (\n    state: CheckoutState,\n    billingAddress: BillingAddressSelector,\n    cart: CartSelector,\n    consignments: ConsignmentSelector,\n    coupons: CouponSelector,\n    customer: CustomerSelector,\n    giftCertificates: GiftCertificateSelector\n) => CheckoutSelector;\n\ninterface CheckoutSelectorDependencies {\n    billingAddress: BillingAddressSelector;\n    cart: CartSelector;\n    consignments: ConsignmentSelector;\n    coupons: CouponSelector;\n    customer: CustomerSelector;\n    giftCertificates: GiftCertificateSelector;\n}\n\nexport function createCheckoutSelectorFactory(): CheckoutSelectorFactory {\n    const getCheckout = createSelector(\n        (state: CheckoutState) => state.data,\n        (_: CheckoutState, { billingAddress }: CheckoutSelectorDependencies) => billingAddress.getBillingAddress,\n        (_: CheckoutState, { cart }: CheckoutSelectorDependencies) => cart.getCart,\n        (_: CheckoutState, { customer }: CheckoutSelectorDependencies) => customer.getCustomer,\n        (_: CheckoutState, { consignments }: CheckoutSelectorDependencies) => consignments.getConsignments,\n        (_: CheckoutState, { coupons }: CheckoutSelectorDependencies) => coupons.getCoupons,\n        (_: CheckoutState, { giftCertificates }: CheckoutSelectorDependencies) => giftCertificates.getGiftCertificates,\n        (data, getBillingAddress, getCart, getCustomer, getConsignments, getCoupons, getGiftCertificates) => () => {\n            const billingAddress = getBillingAddress();\n            const cart = getCart();\n            const customer = getCustomer();\n            const consignments = getConsignments() || [];\n            const coupons = getCoupons() || [];\n            const giftCertificates = getGiftCertificates() || [];\n\n            if (!data || !cart || !customer) {\n                return;\n            }\n\n            return {\n                ...data,\n                billingAddress,\n                cart,\n                customer,\n                consignments,\n                coupons,\n                giftCertificates,\n            };\n        }\n    );\n\n    const getOutstandingBalance = createSelector(\n        getCheckout,\n        getCheckout => (useStoreCredit?: boolean) => {\n            const checkout = getCheckout();\n\n            if (!checkout) {\n                return;\n            }\n\n            const grandTotal = checkout.grandTotal || 0;\n            const storeCredit = checkout.customer.storeCredit || 0;\n\n            return useStoreCredit ? Math.max(grandTotal - storeCredit, 0) : checkout.outstandingBalance;\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: CheckoutState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const getUpdateError = createSelector(\n        (state: CheckoutState) => state.errors.updateError,\n        error => () => error\n    );\n\n    const isExecutingSpamCheck = createSelector(\n        (state: CheckoutState) => state.statuses.isExecutingSpamCheck,\n        isExecutingSpamCheck => () => isExecutingSpamCheck === true\n    );\n\n    const isLoading = createSelector(\n        (state: CheckoutState) => state.statuses.isLoading,\n        isLoading => () => isLoading === true\n    );\n\n    const isUpdating = createSelector(\n        (state: CheckoutState) => state.statuses.isUpdating,\n        isUpdating => () => isUpdating === true\n    );\n\n    return memoizeOne((\n        state: CheckoutState = DEFAULT_STATE,\n        billingAddress: BillingAddressSelector,\n        cart: CartSelector,\n        consignments: ConsignmentSelector,\n        coupons: CouponSelector,\n        customer: CustomerSelector,\n        giftCertificates: GiftCertificateSelector\n    ): CheckoutSelector => {\n        return {\n            getCheckout: getCheckout(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getOutstandingBalance: getOutstandingBalance(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getLoadError: getLoadError(state),\n            getUpdateError: getUpdateError(state),\n            isExecutingSpamCheck: isExecutingSpamCheck(state),\n            isLoading: isLoading(state),\n            isUpdating: isUpdating(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { BillingAddressSelector } from '../billing';\nimport { createSelector } from '../common/selector';\nimport { CouponSelector } from '../coupon';\n\nimport Order from './order';\nimport OrderState, { DEFAULT_STATE, OrderMetaState } from './order-state';\n\nexport default interface OrderSelector {\n    getOrder(): Order | undefined;\n    getOrderMeta(): OrderMetaState | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type OrderSelectorFactory = (\n    state: OrderState,\n    billingAddress: BillingAddressSelector,\n    coupons: CouponSelector\n) => OrderSelector;\n\ninterface OrderSelectorDependencies {\n    billingAddress: BillingAddressSelector;\n    coupons: CouponSelector;\n}\n\nexport function createOrderSelectorFactory(): OrderSelectorFactory {\n    const getOrder = createSelector(\n        (state: OrderState) => state.data,\n        (_: OrderState, { billingAddress }: OrderSelectorDependencies) => billingAddress.getBillingAddress(),\n        (_: OrderState, { coupons }: OrderSelectorDependencies) => coupons.getCoupons(),\n        (data, billingAddress, coupons = []) => () => {\n            if (!data || !billingAddress) {\n                return;\n            }\n\n            return {\n                ...data,\n                billingAddress,\n                coupons,\n            };\n        }\n    );\n\n    const getOrderMeta = createSelector(\n        (state: OrderState) => state.meta,\n        meta => () => meta\n    );\n\n    const getLoadError = createSelector(\n        (state: OrderState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: OrderState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: OrderState = DEFAULT_STATE,\n        billingAddress: BillingAddressSelector,\n        coupons: CouponSelector\n    ): OrderSelector => {\n        return {\n            getOrder: getOrder(state, { billingAddress, coupons }),\n            getOrderMeta: getOrderMeta(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport StoreCreditState, { DEFAULT_STATE } from './store-credit-state';\n\nexport default interface StoreCreditSelector {\n    getApplyError(): RequestError | undefined;\n    isApplying(): boolean;\n}\n\nexport type StoreCreditSelectorFactory = (state: StoreCreditState) => StoreCreditSelector;\n\nexport function createStoreCreditSelectorFactory(): StoreCreditSelectorFactory {\n    const getApplyError = createSelector(\n        (state: StoreCreditState) => state.errors.applyError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: StoreCreditState) => !!state.statuses.isApplying,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: StoreCreditState = DEFAULT_STATE\n    ): StoreCreditSelector => {\n        return {\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n        };\n    });\n}\n","import { createDataStore } from '@bigcommerce/data-store';\n\nimport { createRequestErrorFactory } from '../common/error';\n\nimport CheckoutStore, { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport createActionTransformer from './create-action-transformer';\nimport createCheckoutStoreReducer from './create-checkout-store-reducer';\nimport { createInternalCheckoutSelectorsFactory } from './create-internal-checkout-selectors';\n\nexport default function createCheckoutStore(\n    initialState: Partial<CheckoutStoreState> = {},\n    options?: CheckoutStoreOptions\n): CheckoutStore {\n    const actionTransformer = createActionTransformer(createRequestErrorFactory());\n    const createInternalCheckoutSelectors = createInternalCheckoutSelectorsFactory();\n    const stateTransformer = (state: CheckoutStoreState) => createInternalCheckoutSelectors(state);\n\n    return createDataStore(\n        createCheckoutStoreReducer(),\n        initialState,\n        { actionTransformer, stateTransformer, ...options }\n    );\n}\n","import { Action } from '@bigcommerce/data-store';\nimport { from, Observable, Subscribable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { RequestErrorFactory } from '../common/error';\n\nexport default function createActionTransformer(\n    requestErrorFactory: RequestErrorFactory\n): (action: Subscribable<Action>) => Observable<Action> {\n    return action$ => from(action$).pipe(catchError<Action, never>(action => {\n        if (action instanceof Error || action.payload instanceof Error) {\n            throw action;\n        }\n\n        if (isResponse(action.payload)) {\n            const message = action.payload.body && action.payload.body.detail;\n\n            throw { ...action, payload: requestErrorFactory.createError(action.payload, message) };\n        }\n\n        throw action;\n    }));\n}\n\nfunction isResponse(object: any) {\n    if (!object || typeof object !== 'object') {\n        return false;\n    }\n\n    return ['body', 'headers', 'status', 'statusText'].every(key =>\n        object.hasOwnProperty(key)\n    );\n}\n","import { PaymentMethodInvalidError } from '../../payment/errors';\n\nimport { UnrecoverableError } from './errors';\nimport RequestErrorFactory from './request-error-factory';\n\nexport default function createRequestErrorFactory(): RequestErrorFactory {\n    const factory = new RequestErrorFactory();\n\n    const unrecoverableErrorTypes = [\n        'catalog_only',\n        'empty_cart',\n        'invalid_order_id',\n        'invalid_order_token',\n        'missing_order_token',\n        'missing_provider_token',\n        'missing_shipping_method',\n        'order_completion_error',\n        'order_could_not_be_finalized_error',\n        'order_create_failed',\n        'provider_fatal_error',\n        'provider_setup_error',\n        'stock_too_low',\n    ];\n\n    unrecoverableErrorTypes.forEach(type => {\n        factory.register(type, (response, message) => new UnrecoverableError(response, message));\n    });\n\n    factory.register('invalid_payment_provider', response => new PaymentMethodInvalidError(response));\n    factory.register('payment_config_not_found', response => new PaymentMethodInvalidError(response));\n\n    return factory;\n}\n","import { combineReducers, Action, Reducer } from '@bigcommerce/data-store';\n\nimport { billingAddressReducer } from '../billing';\nimport { cartReducer } from '../cart';\nimport { checkoutButtonReducer } from '../checkout-buttons';\nimport { configReducer } from '../config';\nimport { couponReducer, giftCertificateReducer } from '../coupon';\nimport { customerReducer, customerStrategyReducer } from '../customer';\nimport { countryReducer } from '../geography';\nimport { orderReducer } from '../order';\nimport { paymentMethodReducer, paymentReducer, paymentStrategyReducer } from '../payment';\nimport { instrumentReducer } from '../payment/instrument';\nimport { remoteCheckoutReducer } from '../remote-checkout';\nimport { consignmentReducer, shippingCountryReducer, shippingStrategyReducer } from '../shipping';\nimport { storeCreditReducer } from '../store-credit';\n\nimport checkoutReducer from './checkout-reducer';\nimport CheckoutStoreState from './checkout-store-state';\n\nexport default function createCheckoutStoreReducer(): Reducer<CheckoutStoreState, Action> {\n    return combineReducers({\n        billingAddress: billingAddressReducer,\n        cart: cartReducer,\n        checkout: checkoutReducer,\n        checkoutButton: checkoutButtonReducer,\n        config: configReducer,\n        consignments: consignmentReducer,\n        countries: countryReducer,\n        coupons: couponReducer,\n        customer: customerReducer,\n        customerStrategies: customerStrategyReducer,\n        giftCertificates: giftCertificateReducer,\n        instruments: instrumentReducer,\n        order: orderReducer,\n        payment: paymentReducer,\n        paymentMethods: paymentMethodReducer,\n        paymentStrategies: paymentStrategyReducer,\n        remoteCheckout: remoteCheckoutReducer,\n        shippingCountries: shippingCountryReducer,\n        shippingStrategies: shippingStrategyReducer,\n        storeCredit: storeCreditReducer,\n    });\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../../common/error';\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error when we are unable to retrieve a checkout object from the\n * server using the provided ID. It could be because the shopper does not have\n * permission to view the object, or the ID itself is invalid.\n */\nexport default class CheckoutNotAvailableError extends RequestError {\n    constructor(response: Response<InternalErrorResponseBody>) {\n        super(response, { message: response.body.title });\n\n        this.name = 'CheckoutNotAvailableError';\n        this.type = 'checkout_not_available';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { joinOrMergeIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport Checkout, { CheckoutRequestBody } from './checkout';\nimport CHECKOUT_DEFAULT_INCLUDES from './checkout-default-includes';\nimport CheckoutParams from './checkout-params';\nimport { CheckoutNotAvailableError } from './errors';\n\nexport default class CheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadCheckout(id: string, { params: { include } = {}, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.get(url, {\n            params: {\n                include: joinOrMergeIncludes(CHECKOUT_DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        }).catch(error => {\n            if (error.status >= 400 && error.status < 500) {\n                throw new CheckoutNotAvailableError(error);\n            }\n\n            throw error;\n        });\n    }\n\n    updateCheckout(id: string, body: CheckoutRequestBody, { params: { include } = {}, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            params: {\n                include: joinOrMergeIncludes(CHECKOUT_DEFAULT_INCLUDES, include),\n            },\n            body,\n            headers,\n            timeout,\n        });\n    }\n}\n","export enum CheckoutIncludes {\n    AvailableShippingOptions = 'consignments.availableShippingOptions',\n    PhysicalItemsCategoryNames = 'cart.lineItems.physicalItems.categoryNames',\n    DigitalItemsCategoryNames = 'cart.lineItems.digitalItems.categoryNames',\n}\n\nexport default interface CheckoutParams {\n    include?: CheckoutIncludes[] | CheckoutIncludeParam;\n}\n\nexport type CheckoutIncludeParam = {\n    [key in CheckoutIncludes]?: boolean;\n};\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","import { memoize } from '@bigcommerce/memoize';\n\nimport { bindDecorator, isEqual, isPrivate, CacheKeyResolver } from '../utility';\n\n/**\n * Decorates a class by patching all of its methods to cache their return values\n * and return them if they are called again with the same set of parameters. The\n * decorator also binds all the methods to the calling instance so it can be\n * destructed.\n */\nexport default function selectorDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                selectorMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\nfunction selectorMethodDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let resolver = new CacheKeyResolver();\n    let method = descriptor.value;\n    let memoizedMethod = memoize(method);\n\n    return bindDecorator(target, key, {\n        get() {\n            const value = ((...args: any[]) => {\n                const cachedValue = memoizedMethod.call(this, ...args);\n\n                if (resolver.getUsedCount(...args) === 1) {\n                    return cachedValue;\n                }\n\n                const newValue = method.call(this, ...args);\n\n                if (isEqual(newValue, cachedValue, { keyFilter: key => !isPrivate(key) })) {\n                    return cachedValue;\n                }\n\n                memoizedMethod.cache.set(resolver.getKey(...args), newValue);\n\n                return newValue;\n            }) as T;\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n        set(value) {\n            resolver = new CacheKeyResolver();\n            method = value;\n            memoizedMethod = memoize(method);\n        },\n    });\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\ntype Method = (...args: any[]) => any;\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\nimport { CheckoutButtonMethodType } from './strategies';\n\n@selector\nexport default class CheckoutButtonErrorSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    getInitializeButtonError(methodId?: CheckoutButtonMethodType): Error | undefined {\n        return this._checkoutButton.getInitializeError(methodId);\n    }\n\n    getDeinitializeButtonError(methodId?: CheckoutButtonMethodType): Error | undefined {\n        return this._checkoutButton.getDeinitializeError(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\nimport { CheckoutButtonMethodType } from './strategies';\n\n@selector\nexport default class CheckoutButtonStatusSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    isInitializingButton(methodId?: CheckoutButtonMethodType): boolean {\n        return this._checkoutButton.isInitializing(methodId);\n    }\n\n    isDeinitializingButton(methodId?: CheckoutButtonMethodType): boolean {\n        return this._checkoutButton.isDeinitializing(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\n\nimport CheckoutButtonErrorSelector from './checkout-button-error-selector';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStatusSelector from './checkout-button-status-selector';\n\nexport default function createCheckoutButtonSelectors(selectors: InternalCheckoutSelectors): CheckoutButtonSelectors {\n    const errors = new CheckoutButtonErrorSelector(selectors);\n    const statuses = new CheckoutButtonStatusSelector(selectors);\n\n    return {\n        errors,\n        statuses,\n    };\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../checkout';\nimport { isElementId, setUniqueElementId } from '../common/dom';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonSelectors from './create-checkout-button-selectors';\n\n@bind\nexport default class CheckoutButtonInitializer {\n    private _state: CheckoutButtonSelectors;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _buttonStrategyActionCreator: CheckoutButtonStrategyActionCreator\n    ) {\n        this._state = createCheckoutButtonSelectors(this._store.getState());\n\n        this._store.subscribe(state => {\n            this._state = createCheckoutButtonSelectors(state);\n        });\n    }\n\n    /**\n     * Returns a snapshot of the current state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * state. You can query the state by calling any of its getter methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.errors.getInitializeButtonError());\n     * console.log(state.statuses.isInitializingButton());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutButtonSelectors {\n        return this._state;\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the current state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.statuses.isInitializingButton());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.errors.getInitializeButtonError();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.errors.getInitializeButtonError())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutButtonSelectors) => void,\n        ...filters: Array<(state: CheckoutButtonSelectors) => any>\n    ): () => void {\n        return this._store.subscribe(\n            () => subscriber(this.getState()),\n            state => state.checkoutButton.getState(),\n            ...filters.map(filter => (state: InternalCheckoutSelectors) => filter(createCheckoutButtonSelectors(state)))\n        );\n    }\n\n    /**\n     * Initializes the checkout button of a payment method.\n     *\n     * When the checkout button is initialized, it will be inserted into the DOM,\n     * ready to be interacted with by the customer.\n     *\n     * ```js\n     * initializer.initializeButton({\n     *     methodId: 'braintreepaypal',\n     *     containerId: 'checkoutButton',\n     *     braintreepaypal: {\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeButton(options: CheckoutButtonInitializeOptions): Promise<CheckoutButtonSelectors> {\n        const containerIds = isElementId(options.containerId) ?\n            [options.containerId] :\n            setUniqueElementId(options.containerId, `${options.methodId}-container`);\n\n        return Promise.all(\n            containerIds.map(containerId => {\n                const action = this._buttonStrategyActionCreator.initialize({ ...options, containerId });\n                const queueId = `checkoutButtonStrategy:${options.methodId}:${containerId}`;\n\n                return this._store.dispatch(action, { queueId });\n            })\n        )\n            .then(() => this.getState());\n    }\n\n    /**\n     * De-initializes the checkout button by performing any necessary clean-ups.\n     *\n     * ```js\n     * await service.deinitializeButton({\n     *     methodId: 'braintreepaypal',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeButton(options: CheckoutButtonOptions): Promise<CheckoutButtonSelectors> {\n        const action = this._buttonStrategyActionCreator.deinitialize(options);\n        const queueId = `checkoutButtonStrategy:${options.methodId}`;\n\n        return this._store.dispatch(action, { queueId })\n            .then(() => this.getState());\n    }\n}\n","enum CheckoutButtonMethodType {\n    BRAINTREE_PAYPAL = 'braintreepaypal',\n    BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit',\n    GOOGLEPAY_BRAINTREE = 'googlepaybraintree',\n    GOOGLEPAY_STRIPE = 'googlepaystripe',\n    MASTERPASS = 'masterpass',\n    PAYPALEXPRESS = 'paypalexpress',\n}\n\nexport default CheckoutButtonMethodType;\n","export default function isElementId(id: string): boolean {\n    return /^\\w[\\w\\-\\:\\.]*$/.test(id);\n}\n","import { uniqueId } from 'lodash';\n\nimport { InvalidArgumentError } from '../error/errors';\n\nexport default function setUniqueElementId(selector: string, idPrefix: string): string[] {\n    const containers = document.querySelectorAll(selector);\n\n    if (!containers.length) {\n        throw new InvalidArgumentError(`Unable to find any element with the specified selector: ${selector}`);\n    }\n\n    return Array.prototype.slice.call(containers)\n        .map((container: HTMLElement) => {\n            if (!container.id) {\n                container.id = uniqueId(idPrefix);\n            }\n\n            return container.id;\n        });\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator } from '../payment';\n\nimport { CheckoutButtonActionType, DeinitializeButtonAction, InitializeButtonAction } from './checkout-button-actions';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport { CheckoutButtonStrategy } from './strategies';\n\nexport default class CheckoutButtonStrategyActionCreator {\n    constructor(\n        private _registry: Registry<CheckoutButtonStrategy>,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): ThunkAction<InitializeButtonAction, InternalCheckoutSelectors> {\n        return store => {\n            const meta = { methodId: options.methodId, containerId: options.containerId };\n\n            if (store.getState().checkoutButton.isInitialized(options.methodId, options.containerId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(CheckoutButtonActionType.InitializeButtonRequested, undefined, meta)),\n                this._paymentMethodActionCreator.loadPaymentMethod(options.methodId, { timeout: options.timeout, useCache: true }),\n                defer(() => this._registry.get(options.methodId).initialize(options)\n                    .then(() => createAction(CheckoutButtonActionType.InitializeButtonSucceeded, undefined, meta)))\n            ).pipe(\n                catchError(error => throwErrorAction(CheckoutButtonActionType.InitializeButtonFailed, error, meta))\n            );\n        };\n    }\n\n    deinitialize(options: CheckoutButtonOptions): ThunkAction<DeinitializeButtonAction, InternalCheckoutSelectors> {\n        return store => {\n            const meta = { methodId: options.methodId };\n\n            if (!store.getState().checkoutButton.isInitialized(options.methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(CheckoutButtonActionType.DeinitializeButtonRequested, undefined, meta)),\n                defer(() => this._registry.get(options.methodId).deinitialize()\n                    .then(() => createAction(CheckoutButtonActionType.DeinitializeButtonSucceeded, undefined, meta)))\n            ).pipe(\n                catchError(error => throwErrorAction(CheckoutButtonActionType.DeinitializeButtonFailed, error, meta))\n            );\n        };\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { Address, LegacyAddress } from '../../../address';\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../../common/error/errors';\nimport { PaymentMethod } from '../../../payment';\nimport { BraintreeError, BraintreePaypalCheckout, BraintreeShippingAddressOverride, BraintreeSDKCreator, BraintreeTokenizePayload } from '../../../payment/strategies/braintree';\nimport { PaypalAuthorizeData, PaypalScriptLoader } from '../../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class BraintreePaypalButtonStrategy implements CheckoutButtonStrategy {\n    private _paypalCheckout?: BraintreePaypalCheckout;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _paypalScriptLoader: PaypalScriptLoader,\n        private _formPoster: FormPoster,\n        private _offerCredit: boolean = false\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const paypalOptions = (this._offerCredit ? options.braintreepaypalcredit : options.braintreepaypal) || {};\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paymentMethod || !paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return Promise.all([\n            this._braintreeSDKCreator.getPaypalCheckout(),\n            this._paypalScriptLoader.loadPaypal(),\n        ])\n            .then(([paypalCheckout, paypal]) => {\n                this._paypalCheckout = paypalCheckout;\n\n                const allowedSources = [];\n                const disallowedSources = [];\n\n                if (paypalOptions.allowCredit) {\n                    allowedSources.push(paypal.FUNDING.CREDIT);\n                } else {\n                    disallowedSources.push(paypal.FUNDING.CREDIT);\n                }\n\n                return paypal.Button.render({\n                    env: paymentMethod.config.testMode ? 'sandbox' : 'production',\n                    commit: paypalOptions.shouldProcessPayment ? true : false,\n                    funding: {\n                        allowed: allowedSources,\n                        disallowed: disallowedSources,\n                    },\n                    style: {\n                        shape: 'rect',\n                        label: this._offerCredit ? 'credit' : undefined,\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    payment: () => this._setupPayment(paypalOptions.shippingAddress, paypalOptions.onPaymentError),\n                    onAuthorize: data => this._tokenizePayment(data, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                }, options.containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        this._paypalCheckout = undefined;\n        this._paymentMethod = undefined;\n\n        this._braintreeSDKCreator.teardown();\n\n        return Promise.resolve();\n    }\n\n    private _setupPayment(\n        address?: Address | null,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<string> {\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const checkout = state.checkout.getCheckout();\n                const config = state.config.getStoreConfig();\n                const customer = state.customer.getCustomer();\n                const shippingAddress = address === undefined ?\n                    customer && customer.addresses && customer.addresses[0] :\n                    address;\n\n                if (!this._paypalCheckout) {\n                    throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!config) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                return this._paypalCheckout.createPayment({\n                    flow: 'checkout',\n                    enableShippingAddress: true,\n                    shippingAddressEditable: false,\n                    shippingAddressOverride: shippingAddress ? this._mapToBraintreeAddress(shippingAddress) : undefined,\n                    amount: checkout.outstandingBalance,\n                    currency: config.currency.code,\n                    offerCredit: this._offerCredit,\n                });\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        shouldProcessPayment?: boolean,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<BraintreeTokenizePayload> {\n        if (!this._paypalCheckout || !this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return Promise.all([\n            this._paypalCheckout.tokenizePayment(data),\n            this._braintreeSDKCreator.getDataCollector({ paypal: true }),\n        ])\n            .then(([payload, { deviceData }]) => {\n                this._formPoster.postForm('/checkout.php', {\n                    payment_type: 'paypal',\n                    provider: methodId,\n                    action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                    nonce: payload.nonce,\n                    device_data: deviceData,\n                    shipping_address: JSON.stringify(this._mapToLegacyShippingAddress(payload)),\n                    billing_address: JSON.stringify(this._mapToLegacyBillingAddress(payload)),\n                });\n\n                return payload;\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _mapToLegacyShippingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const shippingAddress = payload.details.shippingAddress;\n        const recipientName = shippingAddress && shippingAddress.recipientName || '';\n        const [firstName, lastName] = recipientName.split(' ');\n\n        return {\n            email: payload.details.email,\n            first_name: firstName,\n            last_name: lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToLegacyBillingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const billingAddress = payload.details.billingAddress;\n        const shippingAddress = payload.details.shippingAddress;\n\n        if (billingAddress) {\n            return {\n                email: payload.details.email,\n                first_name: payload.details.firstName,\n                last_name: payload.details.lastName,\n                phone_number: payload.details.phone,\n                address_line_1: billingAddress.line1,\n                address_line_2: billingAddress.line2,\n                city: billingAddress.city,\n                state: billingAddress.state,\n                country_code: billingAddress.countryCode,\n                postal_code: billingAddress.postalCode,\n            };\n        }\n\n        return {\n            email: payload.details.email,\n            first_name: payload.details.firstName,\n            last_name: payload.details.lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToBraintreeAddress(address: Address): BraintreeShippingAddressOverride {\n        return {\n            line1: address.address1,\n            line2: address.address2,\n            city: address.city,\n            state: address.stateOrProvinceCode,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phone,\n            recipientName: `${address.firstName} ${address.lastName}`,\n        };\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { GooglePayPaymentProcessor } from '../../../payment/strategies/googlepay';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class GooglePayButtonStrategy implements CheckoutButtonStrategy {\n    private _methodId?: string;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _formPoster: FormPoster,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const { containerId, methodId } = options;\n\n        if (!containerId || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"containerId\" argument is not provided.');\n        }\n\n        this._methodId = methodId;\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(() => this._googlePayPaymentProcessor.initialize(this._getMethodId()))\n            .then(() => {\n                this._walletButton = this._createSignInButton(containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return this._googlePayPaymentProcessor.deinitialize();\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const googlePayButton = this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);\n\n        container.appendChild(googlePayButton);\n\n        return googlePayButton;\n    }\n\n    private _getMethodId(): string {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._methodId;\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n\n        return this._googlePayPaymentProcessor.displayWallet()\n            .then(paymentData => this._googlePayPaymentProcessor.handleSuccess(paymentData)\n            .then(() => {\n                if (paymentData.shippingAddress) {\n                    this._googlePayPaymentProcessor.updateShippingAddress(paymentData.shippingAddress);\n                }\n            }))\n            .then(() => this._onPaymentSelectComplete())\n            .catch(error => this._onError(error));\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        });\n    }\n\n    private _onError(error?: Error): void {\n        if (error && error.message !== 'CANCELED') {\n            throw error;\n        }\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { getCallbackUrl, Masterpass, MasterpassCheckoutOptions, MasterpassScriptLoader } from '../../../payment/strategies/masterpass';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class MasterpassButtonStrategy implements CheckoutButtonStrategy {\n    private _masterpassClient?: Masterpass;\n    private _methodId?: string;\n    private _signInButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const { containerId, methodId } = options;\n\n        if (!containerId || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"containerId\" argument is not provided.');\n        }\n\n        this._methodId = methodId;\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!paymentMethod || !paymentMethod.initializationData.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                return this._masterpassScriptLoader.load(paymentMethod.config.testMode);\n            })\n            .then(masterpass => {\n                this._masterpassClient = masterpass;\n                this._signInButton = this._createSignInButton(containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        if (this._signInButton && this._signInButton.parentNode) {\n            this._signInButton.removeEventListener('click', this._handleWalletButtonClick);\n            this._signInButton.parentNode.removeChild(this._signInButton);\n            this._signInButton = undefined;\n        }\n\n        return Promise.resolve();\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const buttonContainer = document.getElementById(containerId);\n\n        if (!buttonContainer) {\n            throw new Error('Need a container to place the button');\n        }\n\n        const button = document.createElement('input');\n\n        button.type = 'image';\n        button.src = 'https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg';\n        buttonContainer.appendChild(button);\n\n        button.addEventListener('click', this._handleWalletButtonClick);\n\n        return button;\n    }\n\n    private _createMasterpassPayload(): MasterpassCheckoutOptions {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const paymentMethod = this._methodId ? state.paymentMethods.getPaymentMethod(this._methodId) : null;\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return {\n            checkoutId: paymentMethod.initializationData.checkoutId,\n            allowedCardTypes: paymentMethod.initializationData.allowedCardTypes,\n            amount: checkout.cart.cartAmount.toString(),\n            currency: checkout.cart.currency.code,\n            cartId: checkout.cart.id,\n            suppressShippingAddress: false,\n            callbackUrl: getCallbackUrl('cart'),\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(): void {\n        if (!this._masterpassClient) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        this._masterpassClient.checkout(this._createMasterpassPayload());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../../common/error/errors';\nimport { INTERNAL_USE_ONLY } from '../../../common/http-request';\nimport { PaymentMethod } from '../../../payment';\nimport { PaypalActions, PaypalAuthorizeData, PaypalClientToken, PaypalScriptLoader } from '../../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class PaypalButtonStrategy implements CheckoutButtonStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paypalScriptLoader: PaypalScriptLoader,\n        private _formPoster: FormPoster,\n        private _host: string = ''\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const paypalOptions = options.paypal;\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paypalOptions) {\n            throw new InvalidArgumentError();\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._paypalScriptLoader.loadPaypal(paymentMethod.config.merchantId)\n            .then(paypal => {\n                if (!paymentMethod || !paymentMethod.config.merchantId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const merchantId = paymentMethod.config.merchantId;\n                const env = paymentMethod.config.testMode ? 'sandbox' : 'production';\n                const clientToken: PaypalClientToken = { [env]: paypalOptions.clientId };\n\n                const allowedSources = [];\n                const disallowedSources = [];\n\n                if (paypalOptions.allowCredit) {\n                    allowedSources.push(paypal.FUNDING.CREDIT);\n                } else {\n                    disallowedSources.push(paypal.FUNDING.CREDIT);\n                }\n\n                return paypal.Button.render({\n                    env,\n                    client: clientToken,\n                    commit: paypalOptions.shouldProcessPayment,\n                    funding: {\n                        allowed: allowedSources,\n                        disallowed: disallowedSources,\n                    },\n                    style: {\n                        shape: 'rect',\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    payment: (_, actions) => this._setupPayment(merchantId, actions, paypalOptions.onPaymentError),\n                    onAuthorize: (data, actions) => this._tokenizePayment(data, actions, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                }, options.containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve();\n    }\n\n    private _setupPayment(merchantId: string, actions?: PaypalActions, onError?: (error: StandardError) => void): Promise<string> {\n        if (!actions) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const cart = state.cart.getCart();\n                const cartId = cart ? cart.id : '';\n\n                return actions.request.post(`${this._host}/api/storefront/payment/paypalexpress`, { merchantId, cartId }, {\n                    headers: {\n                        'X-API-INTERNAL': INTERNAL_USE_ONLY,\n                    },\n                });\n            })\n            .then(res => res.id)\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        actions?: PaypalActions,\n        shouldProcessPayment?: boolean,\n        _onError?: (error: StandardError) => void // FIXME: This parameter seems to be unused\n    ): Promise<void> {\n        if (!this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        if (!actions) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        if (!data.paymentID || !data.payerID) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return actions.payment.get(data.paymentID).then(payload => {\n            this._formPoster.postForm('/checkout.php', {\n                payment_type: 'paypal',\n                provider: methodId,\n                action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                paymentId: data.paymentID,\n                payerId: data.payerID,\n                payerInfo: JSON.stringify(payload.payer.payer_info),\n            });\n        });\n    }\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { createCheckoutStore } from '../checkout';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\n\nimport CheckoutButtonInitializer from './checkout-button-initializer';\nimport CheckoutButtonInitializerOptions from './checkout-button-initializer-options';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonRegistry from './create-checkout-button-registry';\n\n/**\n * Creates an instance of `CheckoutButtonInitializer`.\n *\n * @remarks\n * ```js\n * const initializer = createCheckoutButtonInitializer();\n *\n * initializer.initializeButton({\n *     methodId: 'braintreepaypal',\n *     braintreepaypal: {\n *         container: '#checkoutButton',\n *     },\n * });\n * ```\n *\n * @alpha\n * Please note that `CheckoutButtonInitializer` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutButtonInitializer`.\n */\nexport default function createCheckoutButtonInitializer(\n    options?: CheckoutButtonInitializerOptions\n): CheckoutButtonInitializer {\n    const host = options && options.host;\n    const store = createCheckoutStore();\n    const requestSender = createRequestSender({ host });\n    const formPoster = createFormPoster({ host });\n\n    return new CheckoutButtonInitializer(\n        store,\n        new CheckoutButtonStrategyActionCreator(\n            createCheckoutButtonRegistry(store, requestSender, formPoster, host),\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender))\n        )\n    );\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { BraintreeScriptLoader, BraintreeSDKCreator } from '../payment/strategies/braintree';\nimport { createGooglePayPaymentProcessor, GooglePayBraintreeInitializer, GooglePayStripeInitializer } from '../payment/strategies/googlepay';\nimport { MasterpassScriptLoader } from '../payment/strategies/masterpass';\nimport { PaypalScriptLoader } from '../payment/strategies/paypal';\n\nimport { CheckoutButtonMethodType, CheckoutButtonStrategy } from './strategies';\nimport { BraintreePaypalButtonStrategy } from './strategies/braintree';\nimport { GooglePayButtonStrategy } from './strategies/googlepay';\nimport { MasterpassButtonStrategy } from './strategies/masterpass';\nimport { PaypalButtonStrategy } from './strategies/paypal';\n\nexport default function createCheckoutButtonRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender,\n    formPoster: FormPoster,\n    host?: string\n): Registry<CheckoutButtonStrategy, CheckoutButtonMethodType> {\n    const registry = new Registry<CheckoutButtonStrategy, CheckoutButtonMethodType>();\n    const scriptLoader = getScriptLoader();\n    const checkoutActionCreator = new CheckoutActionCreator(\n        new CheckoutRequestSender(requestSender),\n        new ConfigActionCreator(new ConfigRequestSender(requestSender))\n    );\n\n    registry.register(CheckoutButtonMethodType.BRAINTREE_PAYPAL, () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            formPoster\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.BRAINTREE_PAYPAL_CREDIT, () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            new PaypalScriptLoader(scriptLoader),\n            formPoster,\n            true\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.MASTERPASS, () =>\n        new MasterpassButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        ));\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_BRAINTREE, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_STRIPE, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.PAYPALEXPRESS, () =>\n        new PaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new PaypalScriptLoader(scriptLoader),\n            formPoster,\n            host\n        )\n    );\n\n    return registry;\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport enum NotEmbeddableErrorType {\n    MissingContainer = 'missing_container',\n    MissingContent = 'missing_content',\n    UnknownError = 'unknown_error',\n}\n\n/**\n * Throw this error if we are not able to embed the checkout form as an iframe.\n * This can be due to the fact that the provided container ID is invalid, or the\n * checkout form fails to load inside the iframe. It can also be due to an\n * unknown reason.\n */\nexport default class NotEmbeddableError extends StandardError {\n    constructor(\n        message?: string,\n        public subtype: NotEmbeddableErrorType = NotEmbeddableErrorType.UnknownError\n    ) {\n        super(message || 'Unable to embed the checkout form.');\n\n        this.name = 'NotEmbeddableError';\n        this.type = 'not_embeddable';\n    }\n}\n","import { default as storage } from 'local-storage-fallback';\n\nexport default class BrowserStorage {\n    constructor(\n        private _namespace: string\n    ) {}\n\n    getItem<TValue = any>(key: string): TValue | null {\n        const rawValue = storage.getItem(this.withNamespace(key));\n\n        if (rawValue === null) {\n            return null;\n        }\n\n        try {\n            return JSON.parse(rawValue);\n        } catch (error) {\n            // Clean up invalid values\n            this.removeItem(this.withNamespace(key));\n\n            return null;\n        }\n    }\n\n    getItemOnce<TValue = any>(key: string): TValue | null {\n        const value = this.getItem(key);\n\n        this.removeItem(key);\n\n        return value;\n    }\n\n    setItem<TValue = any>(key: string, value: TValue): void {\n        return storage.setItem(this.withNamespace(key), JSON.stringify(value));\n    }\n\n    removeItem(key: string): void {\n        return storage.removeItem(this.withNamespace(key));\n    }\n\n    private withNamespace(key: string): string {\n        return `${this._namespace}.${key}`;\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../../common/error';\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error we are not able to sign in a shopper because the provided\n * login token is invalid.\n */\nexport default class InvalidLoginTokenError extends RequestError {\n    constructor(response: Response<InternalErrorResponseBody>) {\n        super(response, { message: response.body.title });\n\n        this.name = 'InvalidLoginTokenError';\n        this.type = 'invalid_login_token';\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport { IFrameComponent } from '../common/iframe';\nimport { BrowserStorage } from '../common/storage';\nimport { parseUrl } from '../common/url';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport EmbeddedCheckoutError from './embedded-checkout-error';\nimport { EmbeddedCheckoutEventMap, EmbeddedCheckoutEventType } from './embedded-checkout-events';\nimport EmbeddedCheckoutOptions from './embedded-checkout-options';\nimport { InvalidLoginTokenError, NotEmbeddableError, NotEmbeddableErrorType } from './errors';\nimport { EmbeddedContentEvent, EmbeddedContentEventType } from './iframe-content';\nimport IframeEventListener from './iframe-event-listener';\nimport IframeEventPoster from './iframe-event-poster';\nimport LoadingIndicator from './loading-indicator';\nimport ResizableIframeCreator from './resizable-iframe-creator';\n\nexport const ALLOW_COOKIE_ATTEMPT_INTERVAL = 10 * 60 * 1000;\nexport const IS_COOKIE_ALLOWED_KEY = 'isCookieAllowed';\nexport const LAST_ALLOW_COOKIE_ATTEMPT_KEY = 'lastAllowCookieAttempt';\n\n@bind\nexport default class EmbeddedCheckout {\n    private _iframe?: IFrameComponent;\n    private _isAttached: boolean;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _iframeCreator: ResizableIframeCreator,\n        private _messageListener: IframeEventListener<EmbeddedCheckoutEventMap>,\n        private _messagePoster: IframeEventPoster<EmbeddedContentEvent>,\n        private _loadingIndicator: LoadingIndicator,\n        private _requestSender: RequestSender,\n        private _storage: BrowserStorage,\n        private _location: Location,\n        private _options: EmbeddedCheckoutOptions\n    ) {\n        this._isAttached = false;\n\n        if (this._options.onComplete) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutComplete, this._options.onComplete);\n        }\n\n        if (this._options.onError) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutError, this._options.onError);\n        }\n\n        if (this._options.onLoad) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutLoaded, this._options.onLoad);\n        }\n\n        if (this._options.onFrameLoad) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.FrameLoaded, this._options.onFrameLoad);\n        }\n\n        if (this._options.onSignOut) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.SignedOut, this._options.onSignOut);\n        }\n\n        this._messageListener.addListener(EmbeddedCheckoutEventType.FrameLoaded, () => this._configureStyles());\n    }\n\n    attach(): Promise<this> {\n        if (this._isAttached) {\n            return Promise.resolve(this);\n        }\n\n        this._isAttached = true;\n        this._messageListener.listen();\n        this._loadingIndicator.show(this._options.containerId);\n\n        return this._allowCookie()\n            .then(() => this._attemptLogin())\n            .then(url => this._iframeCreator.createFrame(url, this._options.containerId))\n            .then(iframe => {\n                this._iframe = iframe;\n\n                this._configureStyles();\n                this._loadingIndicator.hide();\n            })\n            .catch(error => {\n                this._isAttached = false;\n\n                return this._retryAllowCookie(error)\n                    .catch(() => {\n                        this._messageListener.trigger({\n                            type: EmbeddedCheckoutEventType.FrameError,\n                            payload: error,\n                        });\n\n                        this._loadingIndicator.hide();\n\n                        throw error;\n                    });\n            })\n            .then(() => this);\n    }\n\n    detach(): void {\n        if (!this._isAttached) {\n            return;\n        }\n\n        this._isAttached = false;\n        this._messageListener.stopListen();\n\n        if (this._iframe && this._iframe.parentNode) {\n            this._iframe.parentNode.removeChild(this._iframe);\n            this._iframe.iFrameResizer.close();\n        }\n    }\n\n    private _configureStyles(): void {\n        if (!this._iframe || !this._iframe.contentWindow || !this._options.styles) {\n            return;\n        }\n\n        this._messagePoster.setTarget(this._iframe.contentWindow);\n\n        this._messagePoster.post({\n            type: EmbeddedContentEventType.StyleConfigured,\n            payload: this._options.styles,\n        });\n    }\n\n    private _attemptLogin(): Promise<string> {\n        if (!/^\\/login\\/token/.test(parseUrl(this._options.url).pathname)) {\n            return Promise.resolve(this._options.url);\n        }\n\n        return this._requestSender.post(this._options.url)\n            .then(({ body: { redirectUrl } }) => redirectUrl)\n            .catch(response => Promise.reject(new InvalidLoginTokenError(response)));\n    }\n\n    /**\n     * This workaround is required for certain browsers (namely Safari) that\n     * prevent session cookies to be set for a third party website unless the\n     * user has recently visited such website. Therefore, before we attempt to\n     * login or set an active cart in the session, we need to first redirect the\n     * user to the domain of Embedded Checkout.\n     */\n    private _allowCookie(): Promise<void> {\n        if (this._storage.getItem(IS_COOKIE_ALLOWED_KEY)) {\n            return Promise.resolve();\n        }\n\n        this._storage.setItem(IS_COOKIE_ALLOWED_KEY, true);\n\n        // It could be possible that the flag is set to true but the browser has\n        // already removed the permission to store third-party cookies. In that\n        // case, we should try to redirect the user again. But we only want to\n        // do it once within a fixed interval. This is to avoid getting into a\n        // redirect loop if the shopper actually doesn't have a valid card\n        // session.\n        this._storage.setItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY, Date.now());\n\n        const { origin } = parseUrl(this._options.url);\n        const redirectUrl = `${origin}/embedded-checkout/allow-cookie?returnUrl=${encodeURIComponent(this._location.href)}`;\n\n        document.body.style.visibility = 'hidden';\n        this._location.replace(redirectUrl);\n\n        return new Promise<never>(() => {});\n    }\n\n    private _retryAllowCookie(error: EmbeddedCheckoutError): Promise<void> {\n        const lastAttempt = Number(this._storage.getItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY));\n        const canRetry = (\n            (!lastAttempt || Date.now() - lastAttempt > ALLOW_COOKIE_ATTEMPT_INTERVAL) &&\n            error instanceof NotEmbeddableError &&\n            error.subtype === NotEmbeddableErrorType.MissingContent\n        );\n\n        if (!canRetry) {\n            return Promise.reject();\n        }\n\n        this._storage.removeItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY);\n        this._storage.removeItem(IS_COOKIE_ALLOWED_KEY);\n\n        return this._allowCookie();\n    }\n}\n","import { LoadingIndicatorStyles } from './embedded-checkout-styles';\n\nconst DEFAULT_STYLES: LoadingIndicatorStyles = {\n    size: 70,\n    color: '#d9d9d9',\n    backgroundColor: '#ffffff',\n};\n\nconst ROTATION_ANIMATION = 'embedded-checkout-loading-indicator-rotation';\n\nexport default class LoadingIndicator {\n    private _container: HTMLElement;\n    private _indicator: HTMLElement;\n    private _styles: LoadingIndicatorStyles;\n\n    constructor(\n        options?: { styles?: LoadingIndicatorStyles }\n    ) {\n        this._styles = { ...DEFAULT_STYLES, ...options && options.styles };\n\n        this._defineAnimation();\n\n        this._container = this._buildContainer();\n        this._indicator = this._buildIndicator();\n\n        this._container.appendChild(this._indicator);\n    }\n\n    show(parentId?: string): void {\n        if (parentId) {\n            const parent = document.getElementById(parentId);\n\n            if (!parent) {\n                throw new Error('Unable to attach the loading indicator because the parent ID is not valid.');\n            }\n\n            parent.appendChild(this._container);\n        }\n\n        this._container.style.visibility = 'visible';\n        this._container.style.opacity = '1';\n    }\n\n    hide(): void {\n        const handleTransitionEnd = () => {\n            this._container.style.visibility = 'hidden';\n\n            this._container.removeEventListener('transitionend', handleTransitionEnd);\n        };\n\n        this._container.addEventListener('transitionend', handleTransitionEnd);\n\n        this._container.style.opacity = '0';\n    }\n\n    private _buildContainer(): HTMLElement {\n        const container = document.createElement('div');\n\n        container.style.display = 'block';\n        container.style.bottom = '0';\n        container.style.left = '0';\n        container.style.height = '100%';\n        container.style.width = '100%';\n        container.style.position = 'absolute';\n        container.style.right = '0';\n        container.style.top = '0';\n        container.style.transition = 'all 250ms ease-out';\n        container.style.opacity = '0';\n\n        return container;\n    }\n\n    private _buildIndicator(): HTMLElement {\n        const indicator = document.createElement('div');\n\n        indicator.style.display = 'block';\n        indicator.style.width = `${this._styles.size}px`;\n        indicator.style.height = `${this._styles.size}px`;\n        indicator.style.borderRadius = `${this._styles.size}px`;\n        indicator.style.border = 'solid 1px';\n        indicator.style.borderColor = `${this._styles.backgroundColor} ${this._styles.backgroundColor} ${this._styles.color} ${this._styles.color}`;\n        indicator.style.margin = '0 auto';\n        indicator.style.position = 'absolute';\n        indicator.style.left = '0';\n        indicator.style.right = '0';\n        indicator.style.top = '50%';\n        indicator.style.transform = 'translateY(-50%) rotate(0deg)';\n        indicator.style.transformStyle = 'preserve-3d';\n        indicator.style.animation = `${ROTATION_ANIMATION} 500ms infinite cubic-bezier(0.69, 0.31, 0.56, 0.83)`;\n\n        return indicator;\n    }\n\n    private _defineAnimation(): void {\n        // In order to define CSS animation, we need to insert a stylesheet into the host frame.\n        // We only have to do it once.\n        if (document.getElementById(ROTATION_ANIMATION)) {\n            return;\n        }\n\n        const style = document.createElement('style');\n\n        style.id = ROTATION_ANIMATION;\n\n        document.head.appendChild(style);\n\n        if (style.sheet instanceof CSSStyleSheet) {\n            // We need to provide the 2nd parameter for IE11, even though it is\n            // 0 by default for all other browsers.\n            style.sheet.insertRule(`\n                @keyframes ${ROTATION_ANIMATION} {\n                    0% { transform: translateY(-50%) rotate(0deg); }\n                    100% { transform: translateY(-50%) rotate(360deg); }\n                }\n            `, 0);\n        }\n    }\n}\n","import { iframeResizer, IFrameComponent } from '../common/iframe';\nimport { parseUrl } from '../common/url';\n\nimport { EmbeddedCheckoutEventType } from './embedded-checkout-events';\nimport { NotEmbeddableError, NotEmbeddableErrorType } from './errors';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class ResizableIframeCreator {\n    constructor(\n        private _options?: { timeout: number }\n    ) {}\n\n    createFrame(src: string, containerId: string): Promise<IFrameComponent> {\n        const container = document.getElementById(containerId);\n        const { timeout = 60000 } = this._options || {};\n\n        if (!container) {\n            throw new NotEmbeddableError(\n                'Unable to embed the iframe because the container element could not be found.',\n                NotEmbeddableErrorType.MissingContainer\n            );\n        }\n\n        const iframe = document.createElement('iframe');\n\n        iframe.src = src;\n        iframe.style.border = 'none';\n        iframe.style.display = 'none';\n        iframe.style.width = '100%';\n        iframe.allowPaymentRequest = true;\n\n        container.appendChild(iframe);\n\n        return this._toResizableFrame(iframe, timeout)\n            .catch(error => {\n                container.removeChild(iframe);\n\n                throw error;\n            });\n    }\n\n    private _toResizableFrame(iframe: HTMLIFrameElement, timeoutInterval: number): Promise<IFrameComponent> {\n        // Can't simply listen to `load` event because it always gets triggered even if there's an error.\n        // Instead, listen to the `load` inside the iframe and let the parent frame know when it happens.\n        return new Promise((resolve, reject) => {\n            const timeout = window.setTimeout(() => {\n                reject(new NotEmbeddableError('Unable to embed the iframe because the content could not be loaded.'));\n            }, timeoutInterval);\n\n            const handleMessage = (event: MessageEvent) => {\n                if (event.origin !== parseUrl(iframe.src).origin) {\n                    return;\n                }\n\n                if (isIframeEvent(event.data, EmbeddedCheckoutEventType.FrameError)) {\n                    teardown();\n                    reject(new NotEmbeddableError(event.data.payload.message, NotEmbeddableErrorType.MissingContent));\n                }\n\n                if (isIframeEvent(event.data, EmbeddedCheckoutEventType.FrameLoaded)) {\n                    iframe.style.display = '';\n\n                    const contentId = event.data.payload && event.data.payload.contentId;\n                    const iframes = iframeResizer({\n                        scrolling: false,\n                        sizeWidth: false,\n                        heightCalculationMethod: contentId ? 'taggedElement' : 'lowestElement',\n                    }, iframe);\n\n                    teardown();\n                    resolve(iframes[iframes.length - 1]);\n                }\n            };\n\n            const teardown = () => {\n                window.removeEventListener('message', handleMessage);\n                window.clearTimeout(timeout);\n            };\n\n            window.addEventListener('message', handleMessage);\n        });\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { BrowserStorage } from '../common/storage';\nimport { parseUrl } from '../common/url';\n\nimport EmbeddedCheckout from './embedded-checkout';\nimport { EmbeddedCheckoutEventMap } from './embedded-checkout-events';\nimport EmbeddedCheckoutOptions from './embedded-checkout-options';\nimport { EmbeddedContentEvent } from './iframe-content';\nimport IframeEventListener from './iframe-event-listener';\nimport IframeEventPoster from './iframe-event-poster';\nimport LoadingIndicator from './loading-indicator';\nimport ResizableIframeCreator from './resizable-iframe-creator';\n\nconst STORAGE_PREFIX = 'BigCommerce.EmbeddedCheckout';\n\n/**\n * Embed the checkout form in an iframe.\n *\n * @remarks\n * Once the iframe is embedded, it will automatically resize according to the\n * size of the checkout form. It will also notify the parent window when certain\n * events have occurred. i.e.: when the form is loaded and ready to be used.\n *\n * ```js\n * embedCheckout({\n *     url: 'https://checkout/url',\n *     containerId: 'container-id',\n * });\n * ```\n *\n * @param options - Options for embedding the checkout form.\n * @returns A promise that resolves to an instance of `EmbeddedCheckout`.\n */\nexport default function embedCheckout(options: EmbeddedCheckoutOptions): Promise<EmbeddedCheckout> {\n    const origin = parseUrl(options.url).origin;\n    const embeddedCheckout = new EmbeddedCheckout(\n        new ResizableIframeCreator(),\n        new IframeEventListener<EmbeddedCheckoutEventMap>(origin),\n        new IframeEventPoster<EmbeddedContentEvent>(origin),\n        new LoadingIndicator({ styles: options.styles && options.styles.loadingIndicator }),\n        createRequestSender(),\n        new BrowserStorage(STORAGE_PREFIX),\n        window.location,\n        options\n    );\n\n    return embeddedCheckout.attach();\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return map.hasOwnProperty('cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return map.hasOwnProperty('parentMap');\n}\n","import { noop } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nimport { isRootCacheKeyMap, isTerminalCacheKeyMap, ChildCacheKeyMap, IntermediateCacheKeyMap, RootCacheKeyMap, TerminalCacheKeyMap } from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            maxSize: 0,\n            isEqual: shallowEqual,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n","module.exports = require(\"@bigcommerce/bigpay-client\");","module.exports = require(\"messageformat\");","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * Throw this error if a request fails to complete within its required timeframe\n * because of a network issue.\n */\nexport default class TimeoutError extends RequestError<{}> {\n    constructor(response?: Response) {\n        super(response, {\n            message: 'The request has timed out or aborted.',\n        });\n\n        this.name = 'TimeoutError';\n        this.type = 'timeout';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are unable to successfully submit a server request\n * using a payment method because the method has invalid configuration or is in\n * an invalid state.\n */\nexport default class PaymentMethodInvalidError extends RequestError {\n    constructor(response?: Response) {\n        super(response, { message: 'There is a problem processing your payment. Please try again later.' });\n\n        this.name = 'PaymentMethodInvalidError';\n        this.type = 'payment_method_invalid';\n    }\n}\n","import { createSelector as defaultSelectorCreator } from 'reselect';\n\nimport withMemoizedCombiner from './with-memoized-combiner';\n\n/**\n * This is a decorated version of Reselect's default `createSelector` function.\n * If the return value of the combiner function is a function, it will create a\n * memorized version of that function and return it instead.\n */\nexport default withMemoizedCombiner(defaultSelectorCreator);\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { cachableAction, ActionOptions } from '../common/data-store';\nimport { RequestOptions } from '../common/http-request';\n\nimport { ConfigRequestSender } from '.';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\n\nexport default class ConfigActionCreator {\n    constructor(\n        private _configRequestSender: ConfigRequestSender\n    ) {}\n\n    @cachableAction\n    loadConfig(options?: RequestOptions & ActionOptions): Observable<LoadConfigAction> {\n        return Observable.create((observer: Observer<LoadConfigAction>) => {\n            observer.next(createAction(ConfigActionType.LoadConfigRequested));\n\n            this._configRequestSender.loadConfig(options)\n                .then(response => {\n                    observer.next(createAction(ConfigActionType.LoadConfigSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConfigActionType.LoadConfigFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport Config from './config';\n\nexport default class ConfigRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadConfig({ timeout }: RequestOptions = {}): Promise<Response<Config>> {\n        const url = '/api/storefront/checkout-settings';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../address';\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { BillingAddressUpdateRequestBody } from './billing-address';\n\nconst DEFAULT_PARAMS = {\n    include: [\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ].join(','),\n};\n\nexport default class BillingAddressRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createAddress(checkoutId: string, address: Partial<AddressRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: address, params: DEFAULT_PARAMS, headers, timeout });\n    }\n\n    updateAddress(checkoutId: string, address: Partial<BillingAddressUpdateRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const { id, ...body } = address;\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, { params: DEFAULT_PARAMS, body, headers, timeout });\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nexport default class Registry<T, K extends string = string> {\n    private _factories: { [key: string]: Factory<T> };\n    private _instances: { [key: string]: T };\n    private _options: RegistryOptions;\n\n    constructor(options?: RegistryOptions) {\n        this._factories = {};\n        this._instances = {};\n        this._options = { defaultToken: 'default', ...options };\n    }\n\n    get(token?: K, cacheToken?: string): T {\n        try {\n            return this._getInstance(\n                token || this._options.defaultToken,\n                cacheToken || token || this._options.defaultToken\n            );\n        } catch (error) {\n            return this._getInstance(\n                this._options.defaultToken,\n                cacheToken || this._options.defaultToken\n            );\n        }\n    }\n\n    register(token: K, factory: Factory<T>): void {\n        if (this._hasFactory(token)) {\n            throw new InvalidArgumentError(`'${token}' is already registered.`);\n        }\n\n        this._factories[token] = factory;\n    }\n\n    protected _hasFactory(token: string): boolean {\n        return !!this._factories[token];\n    }\n\n    private _hasInstance(token: string): boolean {\n        return !!this._instances[token];\n    }\n\n    private _getInstance(token: string, cacheToken: string): T {\n        if (!this._hasInstance(cacheToken)) {\n            const factory = this._factories[token];\n\n            if (!factory) {\n                throw new InvalidArgumentError(`'${token}' is not registered.`);\n            }\n\n            this._instances[cacheToken] = factory();\n        }\n\n        return this._instances[cacheToken];\n    }\n}\n\nexport type Factory<T> = () => T;\n\nexport interface RegistryOptions {\n    defaultToken: string;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { Masterpass, MasterpassHostWindow } from './masterpass';\n\nexport default class MasterpassScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: MasterpassHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<Masterpass> {\n        return this._scriptLoader\n            .loadScript(`//${testMode ? 'sandbox.' : ''}masterpass.com/integration/merchant.js`)\n            .then(() => {\n                if (!this._window.masterpass) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.masterpass;\n            });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are unable to synchronize the checkout details of a\n * shopper with a hosted / remote checkout provider (i.e.: Amazon).\n */\nexport default class RemoteCheckoutSynchronizationError extends StandardError {\n    constructor(\n        public error?: Error\n    ) {\n        super('Unable to synchronize your checkout details with a third party provider. Please try again later.');\n\n        this.name = 'RemoteCheckoutSynchronizationError';\n        this.type = 'remote_checkout_synchronization';\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeSDKCreator, GooglePayBraintreeSDK } from '../braintree';\n\nimport { GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload } from './googlepay';\nimport { GooglePayBraintreeDataRequest, GooglePayBraintreePaymentDataRequestV1 } from './googlepay-braintree';\n\nexport default class GooglePayBraintreeInitializer implements GooglePayInitializer {\n    private _googlePaymentInstance!: GooglePayBraintreeSDK;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator\n    ) {}\n\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        if (!paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return this._braintreeSDKCreator.getGooglePaymentComponent()\n            .then(googleBraintreePaymentInstance => {\n                this._googlePaymentInstance = googleBraintreePaymentInstance;\n\n                return this._createGooglePayPayload(\n                    checkout,\n                    paymentMethod.initializationData,\n                    hasShippingAddress\n                );\n            });\n    }\n\n    teardown(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): TokenizePayload {\n        const payload = JSON.parse(paymentData.paymentMethodData.tokenizationData.token).androidPayCards[0];\n\n        return {\n            nonce: payload.nonce,\n            type: payload.type,\n            description: payload.description,\n            details: {\n                cardType: payload.details.cardType,\n                lastFour: payload.details.lastFour,\n                lastTwo: payload.details.lastTwo,\n            },\n            binData: payload.binData,\n        };\n    }\n\n    private _createGooglePayPayload(\n        checkout: Checkout,\n        initializationData: any,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        if (!initializationData.platformToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const googlePayBraintreePaymentDataRequest: GooglePayBraintreeDataRequest = {\n            merchantInfo: {\n                authJwt: initializationData.platformToken,\n                merchantName: initializationData.googleMerchantName,\n                merchantId: initializationData.googleMerchantId,\n            },\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(checkout.outstandingBalance, 2).toFixed(2),\n            },\n            cardRequirements: {\n                billingAddressRequired: true,\n                billingAddressFormat: 'FULL',\n            },\n            shippingAddressRequired: !hasShippingAddress,\n            emailRequired: true,\n            phoneNumberRequired: true,\n        };\n\n        return this._mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2(\n            this._googlePaymentInstance.createPaymentDataRequest(googlePayBraintreePaymentDataRequest)\n        );\n    }\n\n    private _mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2(googlePayBraintreeDataRequestV1: GooglePayBraintreePaymentDataRequestV1): GooglePayPaymentDataRequestV2 {\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt: googlePayBraintreeDataRequestV1.merchantInfo.authJwt,\n                merchantId: googlePayBraintreeDataRequestV1.merchantInfo.merchantId,\n                merchantName: googlePayBraintreeDataRequestV1.merchantInfo.merchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: googlePayBraintreeDataRequestV1.cardRequirements.allowedCardNetworks,\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: 'FULL',\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'braintree',\n                        'braintree:apiVersion': 'v1',\n                        'braintree:authorizationFingerprint': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:authorizationFingerprint'],\n                        'braintree:merchantId': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:merchantId'],\n                        'braintree:sdkVersion': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:sdkVersion'],\n                    },\n                },\n            }],\n            transactionInfo: googlePayBraintreeDataRequestV1.transactionInfo,\n            emailRequired: true,\n            shippingAddressRequired: googlePayBraintreeDataRequestV1.shippingAddressRequired,\n            shippingAddressParameters: {\n                phoneNumberRequired: googlePayBraintreeDataRequestV1.phoneNumberRequired,\n            },\n        };\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport { InvalidArgumentError } from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\n\nimport { GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload } from './googlepay';\n\nexport default class GooglePayStripeInitializer implements GooglePayInitializer {\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        return Promise.resolve(this._mapGooglePayStripeDataRequestToGooglePayDataRequestV2(\n            checkout,\n            paymentMethod.initializationData,\n            hasShippingAddress\n        ));\n    }\n\n    teardown(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): TokenizePayload {\n        try {\n            const payload = JSON.parse(paymentData.paymentMethodData.tokenizationData.token);\n\n            return {\n                nonce: payload.id,\n                type: payload.type,\n                details: {\n                    cardType: payload.card.brand,\n                    lastFour: payload.card.last4,\n                },\n            };\n        } catch (err) {\n            throw new InvalidArgumentError('Unable to parse response from Google Pay.');\n        }\n    }\n\n    private _mapGooglePayStripeDataRequestToGooglePayDataRequestV2(\n        checkout: Checkout,\n        initializationData: any,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt: initializationData.platformToken,\n                merchantId: initializationData.googleMerchantId,\n                merchantName: initializationData.googleMerchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: ['AMEX', 'DISCOVER', 'JCB', 'MASTERCARD', 'VISA'],\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: 'FULL',\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'stripe',\n                        'stripe:version': initializationData.stripeVersion,\n                        'stripe:publishableKey': initializationData.stripePublishableKey,\n                    },\n                },\n            }],\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(checkout.outstandingBalance, 2).toFixed(2),\n            },\n            emailRequired: true,\n            shippingAddressRequired: !hasShippingAddress,\n            shippingAddressParameters: {\n                phoneNumberRequired: true,\n            },\n        };\n    }\n}\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { LoadScriptOptions, ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalScriptLoader {\n    private _window: PaypalHostWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    async loadPaypal(merchantId: string = ''): Promise<PaypalSDK> {\n        const scriptSrc = '//www.paypalobjects.com/api/checkout.min.js';\n        const options: LoadScriptOptions = { async: true, attributes: { 'data-merchant-id': merchantId } };\n\n        merchantId\n            ? await this._scriptLoader.loadScript(scriptSrc, options)\n            : await this._scriptLoader.loadScript(scriptSrc);\n\n        if (!this._window.paypal) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.paypal;\n    }\n}\n","import { IFrameComponent, IFrameOptions } from 'iframe-resizer';\n\nexport {\n    HeightCalculationMethod,\n    IFrameComponent,\n    IFrameMessageData,\n    IFrameObject,\n    IFrameOptions,\n    IFramePage,\n    IFramePageOptions,\n    IFrameResizedData,\n    IFrameScrollData,\n    PageInfo,\n    WidthCalculationMethod,\n} from 'iframe-resizer';\n\n// The reason why we are wrapping the original `iframeResizer` function imported\n// from the package is because the package sets up event listeners (window\n// resize etc...) as soon as the package is imported. Therefore, to defer the\n// side effect from happening until the function is actually being used, we are\n// importing the package inside this function. To minimise the chance of\n// importing the original package inadvertently, we are also re-exporting all of\n// its public interfaces. The re-exports do not cause any side effect because\n// they are plain TypeScript interfaces; meaning they are only used for type\n// checks rather than for code output.\nexport function iframeResizer(options: IFrameOptions, target: string | HTMLElement): IFrameComponent[] {\n    const { iframeResizer: originalIframeResizer } = require('iframe-resizer');\n\n    return originalIframeResizer(options, target);\n}\n\n// We also need to wrap the original `iframeResizer.contentWindow` because\n// similarly the package sets up event listeners as soon as the package gets\n// imported. Another reason is that if it is imported at the top level using a\n// regular import statement, it will be stripped out by Webpack as it is\n// considered as \"unused\", unless we explicitly mark it as a package that\n// produces side effects.\nexport function setupContentWindowForIframeResizer(): void {\n    /* eslint-disable-next-line import/no-internal-modules */\n    require('iframe-resizer/js/iframeResizer.contentWindow');\n}\n","import { ClearErrorAction, ErrorActionType } from './error-actions';\n\nexport default class ErrorActionCreator {\n    clearError(error: Error): ClearErrorAction {\n        return {\n            type: ErrorActionType.ClearError,\n            payload: error,\n        };\n    }\n}\n","export default function getEnvironment(): string {\n    try {\n        return process.env.NODE_ENV || 'development';\n    } catch (e) {\n        return 'development';\n    }\n}\n","import ConsoleLogger from './console-logger';\nimport Logger from './logger';\nimport NoopLogger from './noop-logger';\n\nexport default function createLogger(isEnabled = true): Logger {\n    if (!isEnabled) {\n        return new NoopLogger();\n    }\n\n    return new ConsoleLogger(console);\n}\n","import Logger from './logger';\n\nexport default class ConsoleLogger implements Logger {\n    constructor(\n        private _console?: Console\n    ) {}\n\n    log(...messages: any[]): void {\n        this._logToConsole('log', ...messages);\n    }\n\n    info(...messages: any[]): void {\n        this._logToConsole('info', ...messages);\n    }\n\n    warn(...messages: any[]): void {\n        this._logToConsole('warn', ...messages);\n    }\n\n    error(...messages: any[]): void {\n        this._logToConsole('error', ...messages);\n    }\n\n    debug(...messages: any[]): void {\n        this._logToConsole('debug', ...messages);\n    }\n\n    private _logToConsole(type: keyof Console, ...messages: any[]): void {\n        if (!this._console || !this._console[type]) {\n            return;\n        }\n\n        this._console[type].call(this._console, ...messages);\n    }\n}\n","import Logger from './logger';\n\nexport default class NoopLogger implements Logger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n}\n","import { getEnvironment } from '../utility';\n\nimport createLogger from './create-logger';\nimport Logger from './logger';\n\nconst logger = createLogger(getEnvironment() !== 'test');\n\nexport default function getDefaultLogger(): Logger {\n    return logger;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { ApplyCouponAction, CouponAction, CouponActionType, RemoveCouponAction } from './coupon-actions';\nimport CouponRequestSender from './coupon-request-sender';\n\nexport default class CouponActionCreator {\n    constructor(\n        private _couponRequestSender: CouponRequestSender\n    ) {}\n\n    applyCoupon(code: string, options?: RequestOptions): ThunkAction<CouponAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ApplyCouponAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CouponActionType.ApplyCouponRequested));\n\n            this._couponRequestSender.applyCoupon(checkout.id, code, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CouponActionType.ApplyCouponSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CouponActionType.ApplyCouponFailed, response));\n                });\n        });\n    }\n\n    removeCoupon(code: string, options?: RequestOptions): ThunkAction<CouponAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<RemoveCouponAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CouponActionType.RemoveCouponRequested));\n\n            this._couponRequestSender.removeCoupon(checkout.id, code, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CouponActionType.RemoveCouponSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CouponActionType.RemoveCouponFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CheckoutIncludes, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class CouponRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyCoupon(checkoutId: string, couponCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/coupons`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes([\n                    ...CHECKOUT_DEFAULT_INCLUDES,\n                    CheckoutIncludes.AvailableShippingOptions,\n                ]),\n            },\n            body: { couponCode },\n        });\n    }\n\n    removeCoupon(checkoutId: string, couponCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/coupons/${couponCode}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes([\n                    ...CHECKOUT_DEFAULT_INCLUDES,\n                    CheckoutIncludes.AvailableShippingOptions,\n                ]),\n            },\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable ,  Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { GiftCertificateRequestSender } from '.';\nimport { ApplyGiftCertificateAction, GiftCertificateActionType, RemoveGiftCertificateAction } from './gift-certificate-actions';\n\nexport default class GiftCertificateActionCreator {\n    constructor(\n        private _giftCertificateRequestSender: GiftCertificateRequestSender\n    ) {}\n\n    applyGiftCertificate(giftCertificate: string, options?: RequestOptions): ThunkAction<ApplyGiftCertificateAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ApplyGiftCertificateAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(GiftCertificateActionType.ApplyGiftCertificateRequested));\n\n            this._giftCertificateRequestSender.applyGiftCertificate(checkout.id, giftCertificate, options)\n                .then(({ body }) => {\n                    observer.next(createAction(GiftCertificateActionType.ApplyGiftCertificateSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(GiftCertificateActionType.ApplyGiftCertificateFailed, response));\n                });\n        });\n    }\n\n    removeGiftCertificate(giftCertificate: string, options?: RequestOptions): ThunkAction<RemoveGiftCertificateAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<RemoveGiftCertificateAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(GiftCertificateActionType.RemoveGiftCertificateRequested));\n\n            this._giftCertificateRequestSender.removeGiftCertificate(checkout.id, giftCertificate, options)\n                .then(({ body }) => {\n                    observer.next(createAction(GiftCertificateActionType.RemoveGiftCertificateSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(GiftCertificateActionType.RemoveGiftCertificateFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class GiftCertificateRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyGiftCertificate(checkoutId: string, giftCertificateCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/gift-certificates`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n            body: { giftCertificateCode },\n        });\n    }\n\n    removeGiftCertificate(checkoutId: string, giftCertificateCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/gift-certificates/${giftCertificateCode}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport CustomerCredentials from './customer-credentials';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from './customer-request-options';\nimport { CustomerStrategyActionType, CustomerStrategyDeinitializeAction, CustomerStrategyInitializeAction, CustomerStrategySignInAction, CustomerStrategySignOutAction, CustomerStrategyWidgetAction } from './customer-strategy-actions';\nimport { CustomerStrategy } from './strategies';\n\nexport default class CustomerStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<CustomerStrategy>\n    ) {}\n\n    signIn(credentials: CustomerCredentials, options?: CustomerRequestOptions): Observable<CustomerStrategySignInAction> {\n        return Observable.create((observer: Observer<CustomerStrategySignInAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.SignInRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .signIn(credentials, options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.SignInSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.SignInFailed, error, meta));\n                });\n        });\n    }\n\n    signOut(options?: CustomerRequestOptions): Observable<CustomerStrategySignOutAction> {\n        return Observable.create((observer: Observer<CustomerStrategySignOutAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.SignOutRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .signOut(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.SignOutSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.SignOutFailed, error, meta));\n                });\n        });\n    }\n\n    initialize(options?: CustomerInitializeOptions): ThunkAction<CustomerStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CustomerStrategyInitializeAction>) => {\n            const state = store.getState();\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            if (methodId && state.customerStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(CustomerStrategyActionType.InitializeRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.InitializeSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.InitializeFailed, error, meta));\n                });\n        });\n    }\n\n    deinitialize(options?: CustomerRequestOptions): ThunkAction<CustomerStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CustomerStrategyDeinitializeAction>) => {\n            const state = store.getState();\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            if (methodId && !state.customerStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(CustomerStrategyActionType.DeinitializeRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.DeinitializeSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.DeinitializeFailed, error, meta));\n                });\n        });\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: CustomerRequestOptions): Observable<CustomerStrategyWidgetAction> {\n        return Observable.create((observer: Observer<CustomerStrategyWidgetAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.WidgetInteractionStarted, undefined, meta));\n\n            method().then(() => {\n                observer.next(createAction(CustomerStrategyActionType.WidgetInteractionFinished, undefined, meta));\n                observer.complete();\n            })\n            .catch(error => {\n                observer.error(createErrorAction(CustomerStrategyActionType.WidgetInteractionFailed, error, meta));\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayScriptLoader {\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    loadWidget(method: PaymentMethod, onPaymentReady?: () => void): Promise<void> {\n        const {\n            config: { merchantId, testMode },\n            initializationData: { region = 'us' } = {},\n        } = method;\n\n        const url = 'https://' +\n            (region.toLowerCase() !== 'us' ? 'static-eu.' : 'static-na.') +\n            'payments-amazon.com/OffAmazonPayments/' +\n            `${region.toLowerCase()}/` +\n            (testMode ? 'sandbox/' : '') +\n            (region.toLowerCase() !== 'us' ? 'lpa/' : '') +\n            `js/Widgets.js?sellerId=${merchantId}`;\n\n        this._configureWidget(method, onPaymentReady);\n\n        return this._scriptLoader.loadScript(url);\n    }\n\n    private _configureWidget(method: PaymentMethod, onPaymentReady?: () => void): void {\n        const onLoginReady = () => {\n            if (!this._window.amazon) {\n                return;\n            }\n\n            this._window.amazon.Login.setClientId(method.initializationData.clientId);\n            this._window.amazon.Login.setUseCookie(true);\n        };\n\n        if (this._window.amazon && this._window.amazon.Login) {\n            onLoginReady();\n        } else {\n            this._window.onAmazonLoginReady = onLoginReady;\n        }\n\n        if (this._window.OffAmazonPayments && onPaymentReady) {\n            onPaymentReady();\n        } else {\n            this._window.onAmazonPaymentsReady = onPaymentReady;\n        }\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport { Address, LegacyAddress } from '../../../address';\n\nimport { BraintreeDataCollector } from './braintree';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\nimport { VisaCheckoutAddress, VisaCheckoutInitOptions, VisaCheckoutPaymentSuccessPayload, VisaCheckoutTokenizedPayload } from './visacheckout';\n\nexport default class BraintreeVisaCheckoutPaymentProcessor {\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _requestSender: RequestSender\n    ) {}\n\n    initialize(clientToken: string, options: VisaCheckoutInitializeOptions): Promise<VisaCheckoutInitOptions> {\n        this._braintreeSDKCreator.initialize(clientToken);\n\n        return this._braintreeSDKCreator.getVisaCheckout()\n            .then(visaCheckout => visaCheckout.createInitOptions({\n                settings: {\n                    locale: options.locale,\n                    shipping: {\n                        collectShipping: options.collectShipping,\n                    },\n                },\n                paymentRequest: {\n                    currencyCode: options.currencyCode,\n                    subtotal: String(options.subtotal),\n                },\n            }));\n    }\n\n    deinitialize(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    handleSuccess(payment: VisaCheckoutPaymentSuccessPayload, shipping?: Address, billing?: Address): Promise<any> {\n        return this._braintreeSDKCreator.getVisaCheckout()\n            .then(braintreeVisaCheckout => Promise.all([\n                braintreeVisaCheckout.tokenize(payment),\n                this._braintreeSDKCreator.getDataCollector(),\n            ])\n            .then(([tokenizedPayload, dataCollector]) => {\n                const {\n                    shippingAddress = this._toVisaCheckoutAddress(shipping),\n                    billingAddress = this._toVisaCheckoutAddress(billing),\n                } = tokenizedPayload;\n\n                return this._postForm({\n                    ...tokenizedPayload,\n                    shippingAddress,\n                    billingAddress,\n                }, dataCollector);\n            }));\n    }\n\n    private _postForm(paymentData: VisaCheckoutTokenizedPayload, dataCollector: BraintreeDataCollector) {\n        const {\n            userData,\n            billingAddress,\n            shippingAddress,\n            details: cardInformation,\n        } = paymentData;\n        const { userEmail } = userData;\n        const { deviceData } = dataCollector;\n\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                payment_type: paymentData.type,\n                nonce: paymentData.nonce,\n                provider: 'braintreevisacheckout',\n                action: 'set_external_checkout',\n                device_data: deviceData,\n                card_information: this._getCardInformation(cardInformation),\n                billing_address: this._getAddress(userEmail, billingAddress),\n                shipping_address: this._getAddress(userEmail, shippingAddress),\n            },\n        });\n    }\n\n    private _toVisaCheckoutAddress(address?: Address): VisaCheckoutAddress {\n        if (!address) {\n            return {};\n        }\n\n        return {\n            firstName: address.firstName,\n            lastName: address.lastName,\n            phoneNumber: address.phone,\n            streetAddress: address.address1,\n            extendedAddress: address.address2,\n            locality: address.city,\n            region: address.stateOrProvinceCode,\n            countryCode: address.countryCode,\n            postalCode: address.postalCode,\n        };\n    }\n\n    private _getAddress(email: string, address: VisaCheckoutAddress = {}): Partial<LegacyAddress> {\n        return {\n            email,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone_number: address.phoneNumber,\n            address_line_1: address.streetAddress,\n            address_line_2: address.extendedAddress,\n            city: address.locality,\n            state: address.region,\n            country_code: address.countryCode,\n            postal_code: address.postalCode,\n        };\n    }\n\n    private _getCardInformation(cardInformation: { cardType: string; lastTwo: string }) {\n        return {\n            type: cardInformation.cardType,\n            number: cardInformation.lastTwo,\n        };\n    }\n}\n\nexport interface VisaCheckoutInitializeOptions {\n    locale?: string;\n    collectShipping?: boolean;\n    subtotal?: number;\n    currencyCode?: string;\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport BraintreeScriptLoader from './braintree-script-loader';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\nimport BraintreeVisaCheckoutPaymentProcessor from './braintree-visacheckout-payment-processor';\n\nexport default function createBraintreeVisaCheckoutPaymentProcessor(\n    scriptLoader: ScriptLoader,\n    requestSender: RequestSender\n) {\n    const braintreeScriptLoader = new BraintreeScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(braintreeScriptLoader);\n\n    return new BraintreeVisaCheckoutPaymentProcessor(braintreeSDKCreator, requestSender);\n}\n","enum PaymentStrategyType {\n    ADYENV2 = 'adyenv2',\n    AFFIRM = 'affirm',\n    AFTERPAY = 'afterpay',\n    AMAZON = 'amazon',\n    CREDIT_CARD = 'creditcard',\n    CYBERSOURCE = 'cybersource',\n    KLARNA = 'klarna',\n    LEGACY = 'legacy',\n    OFFLINE = 'offline',\n    OFFSITE = 'offsite',\n    PAYPAL = 'paypal',\n    PAYPAL_EXPRESS = 'paypalexpress',\n    PAYPAL_EXPRESS_CREDIT = 'paypalexpresscredit',\n    SAGE_PAY = 'sagepay',\n    SQUARE = 'squarev2',\n    STRIPEV3 = 'stripev3',\n    NO_PAYMENT_DATA_REQUIRED = 'nopaymentdatarequired',\n    BRAINTREE = 'braintree',\n    BRAINTREE_PAYPAL = 'braintreepaypal',\n    BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit',\n    BRAINTREE_VISA_CHECKOUT = 'braintreevisacheckout',\n    BRAINTREE_GOOGLE_PAY = 'googlepaybraintree',\n    CHASE_PAY = 'chasepay',\n    WE_PAY = 'wepay',\n    MASTERPASS = 'masterpass',\n    STRIPE_GOOGLE_PAY = 'googlepaystripe',\n    ZIP = 'zip',\n    CONVERGE = 'converge',\n}\n\nexport default PaymentStrategyType;\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { VisaCheckoutHostWindow, VisaCheckoutSDK } from './visacheckout';\n\nexport default class VisaCheckoutScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: VisaCheckoutHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<VisaCheckoutSDK> {\n        return this._scriptLoader\n            .loadScript(`//${testMode ? 'sandbox-' : ''}assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js`)\n            .then(() => {\n                if (!this._window.V) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.V;\n            });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { ChasePayHostWindow, JPMC } from './chasepay';\n\nexport default class ChasePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: ChasePayHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<JPMC> {\n        return this._scriptLoader\n            .loadScript(`//pwc${testMode ? 'psb' : ''}.chase.com/pwc/checkout/js/v20170521/list.action?type=raw&applId=PWC&channelId=CWC&version=1`)\n            .then(() => {\n                if (!this._window.JPMC) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.JPMC;\n            });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class RemoteCheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    initializeBilling(methodName: string, params?: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/billing`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializeShipping(methodName: string, params?: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/shipping`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializePayment(methodName: string, params?: InitializePaymentOptions, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/payment`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    loadSettings(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/settings`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    signOut(methodName: string, { timeout }: RequestOptions = {}): Promise<Response> {\n        const url = `/remote-checkout/${methodName}/signout`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    generateToken({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout-token';\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    trackAuthorizationEvent({ timeout }: RequestOptions = {}): Promise<Response> {\n        const url = '/remote-checkout/events/shopper-checkout-service-provider-authorization-requested';\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n\nexport interface InitializePaymentOptions {\n    authorizationToken?: string;\n    customerMessage?: string;\n    referenceId?: string;\n    useStoreCredit?: boolean;\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { RemoteCheckoutActionType } from './remote-checkout-actions';\nimport RemoteCheckoutRequestSender, { InitializePaymentOptions } from './remote-checkout-request-sender';\nimport { RemoteCheckoutStateData } from './remote-checkout-state';\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action<T>\n */\nexport default class RemoteCheckoutActionCreator {\n    constructor(\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender\n    ) {}\n\n    initializeBilling(methodId: string, params?: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteBillingRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeBilling(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteBillingSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemoteBillingFailed, response, { methodId }));\n                });\n        });\n    }\n\n    initializeShipping(methodId: string, params?: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteShippingRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeShipping(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteShippingSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemoteShippingFailed, response, { methodId }));\n                });\n        });\n    }\n\n    initializePayment(methodId: string, params?: InitializePaymentOptions, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemotePaymentRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializePayment(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemotePaymentSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemotePaymentFailed, response, { methodId }));\n                });\n        });\n    }\n\n    loadSettings(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.LoadRemoteSettingsRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.loadSettings(methodId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.LoadRemoteSettingsSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.LoadRemoteSettingsFailed, response, { methodId }));\n                });\n        });\n    }\n\n    signOut(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.SignOutRemoteCustomerRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.signOut(methodId, options)\n                .then(() => {\n                    observer.next(createAction(RemoteCheckoutActionType.SignOutRemoteCustomerSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.SignOutRemoteCustomerFailed, response, { methodId }));\n                });\n        });\n    }\n\n    updateCheckout<K extends keyof RemoteCheckoutStateData>(methodId: K, data: Partial<RemoteCheckoutStateData[K]>): Action {\n        return createAction(RemoteCheckoutActionType.UpdateRemoteCheckout, data, { methodId });\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, from, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { CheckoutActionCreator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\n\nimport { CustomerActionType, SignInCustomerAction, SignOutCustomerAction } from './customer-actions';\nimport CustomerCredentials from './customer-credentials';\nimport CustomerRequestSender from './customer-request-sender';\n\nexport default class CustomerActionCreator {\n    constructor(\n        private _customerRequestSender: CustomerRequestSender,\n        private _checkoutActionCreator: CheckoutActionCreator\n    ) {}\n\n    signInCustomer(\n        credentials: CustomerCredentials,\n        options?: RequestOptions\n    ): ThunkAction<SignInCustomerAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CustomerActionType.SignInCustomerRequested)),\n            from(this._customerRequestSender.signInCustomer(credentials, options))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._checkoutActionCreator.loadCurrentCheckout(options)(store),\n                        of(createAction(CustomerActionType.SignInCustomerSucceeded, body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(CustomerActionType.SignInCustomerFailed, error))\n        );\n    }\n\n    signOutCustomer(\n        options?: RequestOptions\n    ): ThunkAction<SignOutCustomerAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CustomerActionType.SignOutCustomerRequested)),\n            from(this._customerRequestSender.signOutCustomer(options))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._checkoutActionCreator.loadCurrentCheckout(options)(store),\n                        of(createAction(CustomerActionType.SignOutCustomerSucceeded, body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(CustomerActionType.SignOutCustomerFailed, error))\n        );\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport CustomerCredentials from './customer-credentials';\nimport { InternalCustomerResponseBody } from './internal-customer-responses';\n\nexport default class CustomerRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    signInCustomer(credentials: CustomerCredentials, { timeout }: RequestOptions = {}): Promise<Response<InternalCustomerResponseBody>> {\n        const url = '/internalapi/v1/checkout/customer';\n\n        return this._requestSender.post(url, { timeout, body: credentials });\n    }\n\n    signOutCustomer({ timeout }: RequestOptions = {}): Promise<Response<InternalCustomerResponseBody>> {\n        const url = '/internalapi/v1/checkout/customer';\n\n        return this._requestSender.delete(url, { timeout });\n    }\n}\n","import StandardError from './standard-error';\n\n/**\n * Throw this error if we try to call a method that is only a stub and has not\n * been fully implemented.\n */\nexport default class NotImplementedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Not implemented.');\n\n        this.name = 'NotImplementedError';\n        this.type = 'not_implemented';\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayLoginButton, AmazonPayScriptLoader, AmazonPayWindow } from '../../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nimport AmazonPayCustomerInitializeOptions from './amazon-pay-customer-initialize-options';\n\nexport default class AmazonPayCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const { onError = () => {} } = amazonOptions;\n                const onReady = () => {\n                    this._createSignInButton({\n                        ...amazonOptions,\n                        onError: error => {\n                            reject(error);\n                            onError(error);\n                        },\n                    });\n\n                    resolve();\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via AmazonPay, the shopper must click on \"Login with Amazon\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(options: AmazonPayCustomerInitializeOptions): AmazonPayLoginButton {\n        if (!this._paymentMethod || !this._window.OffAmazonPayments) {\n            throw new NotInitializedError(NotInitializedErrorType.CustomerNotInitialized);\n        }\n\n        if (!this._paymentMethod.config.merchantId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { initializationData } = this._paymentMethod;\n\n        return new this._window.OffAmazonPayments.Button(options.container, this._paymentMethod.config.merchantId, {\n            color: options.color || 'Gold',\n            size: options.size || 'small',\n            type: 'PwA',\n            useAmazonAddressBook: true,\n            onError: options.onError,\n            authorization: () => {\n                this._handleAuthorization(initializationData);\n            },\n        });\n    }\n\n    private _handleAuthorization(options: AuthorizationOptions): void {\n        this._remoteCheckoutRequestSender.generateToken()\n            .then(({ body }) => {\n                if (!this._window.amazon) {\n                    throw new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized);\n                }\n\n                this._window.amazon.Login.authorize({\n                    popup: false,\n                    scope: 'payments:shipping_address payments:billing_address payments:widget profile',\n                    state: `${options.tokenPrefix}${body.token}`,\n                }, options.redirectUrl);\n\n                this._remoteCheckoutRequestSender.trackAuthorizationEvent();\n            });\n    }\n}\n\ninterface AuthorizationOptions {\n    redirectUrl: string;\n    tokenPrefix: string;\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { BraintreeVisaCheckoutPaymentProcessor, VisaCheckoutPaymentSuccessPayload, VisaCheckoutScriptLoader } from '../../../payment/strategies/braintree';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategyActionCreator from '../../customer-strategy-action-creator';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class BraintreeVisaCheckoutCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _buttonClassName: string = 'visa-checkout-wrapper';\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _customerStrategyActionCreator: CustomerStrategyActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _braintreeVisaCheckoutPaymentProcessor: BraintreeVisaCheckoutPaymentProcessor,\n        private _visaCheckoutScriptLoader: VisaCheckoutScriptLoader\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintreevisacheckout: visaCheckoutOptions, methodId } = options;\n\n        if (!visaCheckoutOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.braintreevisacheckout\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const checkout = state.checkout.getCheckout();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const {\n                    container,\n                    onError = () => {},\n                } = visaCheckoutOptions;\n\n                const initOptions = {\n                    locale: storeConfig.storeProfile.storeLanguage,\n                    collectShipping: true,\n                    subtotal: checkout.subtotal,\n                    currencyCode: storeConfig.currency.code,\n                };\n\n                return Promise.all([\n                    this._visaCheckoutScriptLoader.load(this._paymentMethod.config.testMode),\n                    this._braintreeVisaCheckoutPaymentProcessor.initialize(this._paymentMethod.clientToken, initOptions),\n                ])\n                .then(([visaCheckout, initOptions]) => {\n                    const signInButton = this._createSignInButton(container, this._buttonClassName);\n\n                    visaCheckout.init(initOptions);\n                    visaCheckout.on('payment.success', (paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) =>\n                        this._paymentInstrumentSelected(paymentSuccessPayload)\n                            .catch(error => onError(error))\n                    );\n                    visaCheckout.on('payment.error', (_, error) => onError(error));\n\n                    return signInButton;\n                })\n                .then(signInButton => { signInButton.style.visibility = 'visible'; });\n            })\n            .then(() => this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via VisaCheckout, the shopper must click on \"Visa Checkout\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut('braintreevisacheckout', options)\n        );\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return this._braintreeVisaCheckoutPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _paymentInstrumentSelected(paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) {\n        const state = this._store.getState();\n\n        if (!this._paymentMethod) {\n            throw new Error('Payment method not initialized');\n        }\n\n        const { id: methodId } = this._paymentMethod;\n\n        return this._store.dispatch(\n            this._customerStrategyActionCreator.widgetInteraction(() => {\n                return this._braintreeVisaCheckoutPaymentProcessor.handleSuccess(\n                    paymentSuccessPayload,\n                    state.shippingAddress.getShippingAddress(),\n                    state.billingAddress.getBillingAddress()\n                )\n                .then(() => this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _createSignInButton(containerId: string, buttonClass: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new Error('Need a container to place the button');\n        }\n\n        return (container.querySelector('.' + buttonClass) as HTMLElement) ||\n            this._insertVisaCheckoutButton(container, buttonClass);\n    }\n\n    private _insertVisaCheckoutButton(container: Element, buttonClass: string): HTMLElement {\n        const buttonSource = 'https://secure.checkout.visa.com/wallet-services-web/xo/button.png?acceptCanadianVisaDebit=false&cobrand=true&size=154';\n        const buttonTemplate = `\n            <img\n                alt=\"Visa Checkout\"\n                class=\"v-button\"\n                role=\"button\"\n                src=\"${buttonSource}\"\n                />\n            <a class=\"v-learn v-learn-default\" style=\"text-align: right; display: block; font-size: 10px; color: #003366;\" href=\"#\" data-locale=\"en_US\">Tell Me More</a>`;\n\n        const visaCheckoutButton = document.createElement('div');\n        visaCheckoutButton.style.visibility = 'hidden';\n        visaCheckoutButton.className = buttonClass;\n        visaCheckoutButton.innerHTML = buttonTemplate;\n\n        container.appendChild(visaCheckoutButton);\n\n        return visaCheckoutButton;\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { ChasePayScriptLoader, ChasePaySuccessPayload } from '../../../payment/strategies/chasepay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class ChasePayCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _chasePayScriptLoader: ChasePayScriptLoader,\n        private _requestSender: RequestSender,\n        private _formPoster: FormPoster\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { chasepay: chasePayOptions, methodId } = options;\n\n        if (!chasePayOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.chasepay\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const cart = state.cart.getCart();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!cart) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.initializationData.digitalSessionId) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n\n                const { container } = chasePayOptions;\n\n                return this._chasePayScriptLoader.load(this._paymentMethod.config.testMode)\n                    .then(JPMC => {\n                        const ChasePay = JPMC.ChasePay;\n\n                        ChasePay.configure({\n                            language: storeConfig.storeProfile.storeLanguage,\n                        });\n\n                        if (ChasePay.isChasePayUp) {\n                            ChasePay.insertButtons({\n                                containers: [container],\n                            });\n                        }\n\n                        ChasePay.on(ChasePay.EventType.START_CHECKOUT, () => {\n                            this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n                                .then(() => {\n                                    const state = this._store.getState();\n                                    const method = state.paymentMethods.getPaymentMethod(methodId);\n                                    const sessionId = method && method.initializationData && method.initializationData.digitalSessionId;\n\n                                    if (sessionId) {\n                                        ChasePay.startCheckout(sessionId);\n                                    }\n                                });\n                        });\n\n                        ChasePay.on(ChasePay.EventType.COMPLETE_CHECKOUT, (payload: ChasePaySuccessPayload) => {\n                            const state = this._store.getState();\n                            const method = state.paymentMethods.getPaymentMethod(methodId);\n                            const requestId = method && method.initializationData && method.initializationData.merchantRequestId;\n\n                            if (requestId) {\n                                this._setExternalCheckoutData(payload, requestId)\n                                    .then(() => {\n                                        this._reloadPage();\n                                });\n                            }\n                        });\n                    });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Chase Pay®, the shopper must click on \"Chase Pay®\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _setExternalCheckoutData(payload: ChasePaySuccessPayload, requestId: string): Promise<Response> {\n        const url = `checkout.php?provider=chasepay&action=set_external_checkout`;\n        const options = {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            },\n            body: {\n                sessionToken: payload.sessionToken,\n                merchantRequestId: requestId,\n            },\n            method: 'post',\n        };\n\n        return this._requestSender.sendRequest(url, options);\n    }\n\n    private _reloadPage() {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            params: {\n                fromChasePay: true,\n            },\n        });\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport CustomerActionCreator from '../../customer-action-creator';\nimport CustomerCredentials from '../../customer-credentials';\nimport { CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class DefaultCustomerStrategy implements CustomerStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _customerActionCreator: CustomerActionCreator\n    ) {}\n\n    signIn(credentials: CustomerCredentials, options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._customerActionCreator.signInCustomer(credentials, options)\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._customerActionCreator.signOutCustomer(options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { GooglePayPaymentProcessor } from '../../../payment/strategies/googlepay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nimport GooglePayCustomerInitializeOptions from './googlepay-customer-initialize-options';\n\nexport default class GooglePayCustomerStrategy implements CustomerStrategy {\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor,\n        private _formPoster: FormPoster\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId }  = options;\n\n        const googlePayOptions = this._getGooglePayOptions(options);\n\n        if (!methodId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._googlePayPaymentProcessor.initialize(methodId)\n            .then(() => {\n                this._walletButton = this._createSignInButton(googlePayOptions.container);\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Google Pay, the shopper must click on \"Google Pay\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const button = this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);\n\n        container.appendChild(button);\n\n        return button;\n    }\n\n    private _getGooglePayOptions(options: CustomerInitializeOptions): GooglePayCustomerInitializeOptions {\n        if (options.methodId === 'googlepaybraintree' && options.googlepaybraintree) {\n            return options.googlepaybraintree;\n        }\n\n        if (options.methodId === 'googlepaystripe' && options.googlepaystripe) {\n            return options.googlepaystripe;\n        }\n\n        throw new InvalidArgumentError();\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        });\n    }\n\n    private _onError(error?: Error): void {\n        if (error && error.message !== 'CANCELED') {\n            throw error;\n        }\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n\n        return this._googlePayPaymentProcessor.displayWallet()\n            .then(paymentData => this._googlePayPaymentProcessor.handleSuccess(paymentData)\n            .then(() => {\n                if (paymentData.shippingAddress) {\n                    this._googlePayPaymentProcessor.updateShippingAddress(paymentData.shippingAddress);\n                }\n            }))\n            .then(() => this._onPaymentSelectComplete())\n            .catch(error => this._onError(error));\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { getCallbackUrl, MasterpassScriptLoader } from '../../../payment/strategies/masterpass';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class MasterpassCustomerStrategy implements CustomerStrategy {\n    private _signInButton?: HTMLElement;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { masterpass: masterpassOptions, methodId } = options;\n\n        if (!masterpassOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.masterpass\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n                if (!this._paymentMethod || !this._paymentMethod.initializationData.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const cart = state.cart.getCart();\n                if (!cart) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                const { container } = masterpassOptions;\n\n                const payload = {\n                    checkoutId: this._paymentMethod.initializationData.checkoutId,\n                    allowedCardTypes: this._paymentMethod.initializationData.allowedCardTypes,\n                    amount: cart.cartAmount.toString(),\n                    currency: cart.currency.code,\n                    cartId: cart.id,\n                    suppressShippingAddress: false,\n                    callbackUrl: getCallbackUrl('checkout'),\n                };\n\n                return this._masterpassScriptLoader.load(this._paymentMethod.config.testMode)\n                    .then(Masterpass => {\n                        this._signInButton = this._createSignInButton(container);\n\n                        this._signInButton.addEventListener('click', () => {\n                            Masterpass.checkout(payload);\n                        });\n                    });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        if (this._signInButton && this._signInButton.parentNode) {\n            this._signInButton.parentNode.removeChild(this._signInButton);\n            this._signInButton = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Masterpass, the shopper must click on \"Masterpass\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const button = document.createElement('input');\n\n        button.type = 'image';\n        button.src = 'https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg';\n        container.appendChild(button);\n\n        return button;\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { NotImplementedError } from '../../../common/error/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class SquareCustomerStrategy implements CustomerStrategy {\n\n    constructor(\n        private _store: CheckoutStore,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator\n    ) {}\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Masterpass, the shopper must click on \"Masterpass\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport Country from './country';\nimport { CountryActionType } from './country-actions';\nimport CountryRequestSender from './country-request-sender';\n\nexport default class CountryActionCreator {\n    constructor(\n        private _countryRequestSender: CountryRequestSender\n    ) {}\n\n    loadCountries(options?: RequestOptions): Observable<Action<Country[]>> {\n        return Observable.create((observer: Observer<Action<Country[]>>) => {\n            observer.next(createAction(CountryActionType.LoadCountriesRequested));\n\n            this._countryRequestSender.loadCountries(options)\n                .then(response => {\n                    observer.next(createAction(CountryActionType.LoadCountriesSucceeded, response.body.data));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CountryActionType.LoadCountriesFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { CountryResponseBody } from './country-responses';\n\nexport default class CountryRequestSender {\n    constructor(\n        private _requestSender: RequestSender,\n        private _config: { locale?: string }\n    ) {}\n\n    loadCountries({ timeout }: RequestOptions = {}): Promise<Response<CountryResponseBody>> {\n        const url = '/internalapi/v1/store/countries';\n        const headers = {\n            'Accept-Language': this._config.locale,\n        };\n\n        return this._requestSender.get(url, { headers, timeout });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { InternalOrderResponseBody } from './internal-order-responses';\nimport Order from './order';\nimport OrderParams from './order-params';\n\nexport default class OrderRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadOrder(orderId: number, { timeout, params }: RequestOptions<OrderParams> = {}): Promise<Response<Order>> {\n        const url = `/api/storefront/orders/${orderId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const include = [\n            'payments',\n            'lineItems.physicalItems.socialMedia',\n            'lineItems.physicalItems.options',\n            'lineItems.digitalItems.socialMedia',\n            'lineItems.digitalItems.options',\n        ];\n\n        return this._requestSender.get(url, {\n            params: {\n                include: joinIncludes([\n                    ...include,\n                    ...(params && params.include || []),\n                ]),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    submitOrder(body: InternalOrderRequestBody, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = '/internalapi/v1/checkout/order';\n\n        return this._requestSender.post(url, { body, timeout });\n    }\n\n    finalizeOrder(orderId: number, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = `/internalapi/v1/checkout/order/${orderId}`;\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if the shopper chooses not to complete the spam check.\n */\nexport default class SpamProtectionNotCompletedError extends StandardError {\n    constructor() {\n        super('You haven\\'t complete our spam check. Please try again.');\n\n        this.name = 'SpamProtectionNotCompletedError';\n        this.type = 'spam_protection_not_completed';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, from, of, Observable, Observer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { CheckoutValidator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { SpamProtectionNotCompletedError } from '../spam-protection/errors';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { FinalizeOrderAction, LoadOrderAction, LoadOrderPaymentsAction, OrderActionType, SubmitOrderAction } from './order-actions';\nimport OrderRequestBody from './order-request-body';\nimport OrderRequestSender from './order-request-sender';\n\nexport default class OrderActionCreator {\n    constructor(\n        private _orderRequestSender: OrderRequestSender,\n        private _checkoutValidator: CheckoutValidator\n    ) {}\n\n    loadOrder(orderId: number, options?: RequestOptions): Observable<LoadOrderAction> {\n        return new Observable((observer: Observer<LoadOrderAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderFailed, response));\n                });\n        });\n    }\n\n    // TODO: Remove when checkout does not contain unrelated order data.\n    loadOrderPayments(orderId: number, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        return new Observable((observer: Observer<LoadOrderPaymentsAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderPaymentsRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderPaymentsSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderPaymentsFailed, response));\n                });\n        });\n    }\n\n    loadCurrentOrder(options?: RequestOptions): ThunkAction<LoadOrderAction, InternalCheckoutSelectors> {\n        return store => defer(() => {\n            const orderId = this._getCurrentOrderId(store.getState());\n\n            if (!orderId) {\n                throw new MissingDataError(MissingDataErrorType.MissingOrderId);\n            }\n\n            return this.loadOrder(orderId, options);\n        });\n    }\n\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<SubmitOrderAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(OrderActionType.SubmitOrderRequested)),\n            defer(() => {\n                const state = store.getState();\n                const externalSource = state.config.getExternalSource();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (checkout.shouldExecuteSpamCheck) {\n                    throw new SpamProtectionNotCompletedError();\n                }\n\n                return from(\n                    this._checkoutValidator.validate(checkout, options)\n                        .then(() => this._orderRequestSender.submitOrder(this._mapToOrderRequestBody(\n                            payload,\n                            checkout.customerMessage,\n                            externalSource\n                        ), options))\n                ).pipe(\n                    switchMap(response => concat(\n                        // TODO: Remove once we can submit orders using storefront API\n                        this.loadOrder(response.body.data.order.orderId, options),\n                        of(createAction(OrderActionType.SubmitOrderSucceeded, response.body.data, { ...response.body.meta, token: response.headers.token }))\n                    ))\n                );\n            }).pipe(\n                catchError(error => throwErrorAction(OrderActionType.SubmitOrderFailed, error))\n            )\n        );\n    }\n\n    finalizeOrder(orderId: number, options?: RequestOptions): Observable<FinalizeOrderAction | LoadOrderAction> {\n        return concat(\n            of(createAction(OrderActionType.FinalizeOrderRequested)),\n            from(this._orderRequestSender.finalizeOrder(orderId, options))\n                .pipe(\n                    switchMap(response => concat(\n                        this.loadOrder(orderId, options),\n                        of(createAction(OrderActionType.FinalizeOrderSucceeded, response.body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(OrderActionType.FinalizeOrderFailed, error))\n        );\n    }\n\n    private _getCurrentOrderId(state: InternalCheckoutSelectors): number | undefined {\n        const order = state.order.getOrder();\n        const checkout = state.checkout.getCheckout();\n\n        return (order && order.orderId) || (checkout && checkout.orderId);\n    }\n\n    private _mapToOrderRequestBody(\n        payload: OrderRequestBody,\n        customerMessage: string,\n        externalSource?: string\n    ): InternalOrderRequestBody {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            return {\n                ...order,\n                customerMessage,\n                externalSource,\n            };\n        }\n\n        return {\n            ...order,\n            customerMessage,\n            externalSource,\n            payment: {\n                paymentData: payment.paymentData,\n                name: payment.methodId,\n                gateway: payment.gatewayId,\n            },\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are trying to make an order finalization request for a\n * payment method that does not require such procedure.\n */\nexport default class OrderFinalizationNotRequiredError extends StandardError {\n    constructor() {\n        super('The current order does not need to be finalized at this stage.');\n\n        this.name = 'OrderFinalizationNotRequiredError';\n        this.type = 'order_finalization_not_required';\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { LoadOrderPaymentsAction, OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../order';\nimport { OrderFinalizationNotRequiredError } from '../order/errors';\nimport { SpamProtectionAction, SpamProtectionActionCreator } from '../spam-protection';\n\nimport { PaymentInitializeOptions, PaymentRequestOptions } from './payment-request-options';\nimport { PaymentStrategyActionType, PaymentStrategyDeinitializeAction, PaymentStrategyExecuteAction, PaymentStrategyFinalizeAction, PaymentStrategyInitializeAction, PaymentStrategyWidgetAction } from './payment-strategy-actions';\nimport PaymentStrategyRegistry from './payment-strategy-registry';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { PaymentStrategy } from './strategies';\n\nexport default class PaymentStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: PaymentStrategyRegistry,\n        private _orderActionCreator: OrderActionCreator,\n        private _spamProtectionActionCreator: SpamProtectionActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<PaymentStrategyExecuteAction | SpamProtectionAction, InternalCheckoutSelectors> {\n        const { payment = {} as OrderPaymentRequestBody, useStoreCredit } = payload;\n        const meta = { methodId: payment.methodId };\n\n        return store => concat(\n            this._spamProtectionActionCreator.execute()(store),\n            of(createAction(PaymentStrategyActionType.ExecuteRequested, undefined, meta)),\n            defer(() => {\n                const state = store.getState();\n\n                let strategy: PaymentStrategy;\n\n                if (state.payment.isPaymentDataRequired(useStoreCredit)) {\n                    const method = state.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n\n                    if (!method) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    strategy = this._strategyRegistry.getByMethod(method);\n                } else {\n                    strategy = this._strategyRegistry.get(PaymentStrategyType.NO_PAYMENT_DATA_REQUIRED);\n                }\n\n                return strategy\n                    .execute(payload, { ...options, methodId: payment.methodId, gatewayId: payment.gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.ExecuteSucceeded, undefined, meta));\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.ExecuteFailed, error, meta))\n        );\n    }\n\n    finalize(options?: RequestOptions): ThunkAction<PaymentStrategyFinalizeAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentStrategyActionType.FinalizeRequested)),\n            this._loadOrderPaymentsIfNeeded(store, options),\n            defer(() => {\n                const state = store.getState();\n                const { providerId = '', gatewayId = '' } = state.payment.getPaymentId() || {};\n                const method = state.paymentMethods.getPaymentMethod(providerId, gatewayId);\n\n                if (!method) {\n                    throw new OrderFinalizationNotRequiredError();\n                }\n\n                return this._strategyRegistry.getByMethod(method)\n                    .finalize({ ...options, methodId: method.id, gatewayId: method.gateway })\n                    .then(() => createAction(PaymentStrategyActionType.FinalizeSucceeded, undefined, { methodId: method.id }));\n            })\n        ).pipe(\n            catchError(error => {\n                const state = store.getState();\n                const payment = state.payment.getPaymentId();\n\n                return throwErrorAction(PaymentStrategyActionType.FinalizeFailed, error, { methodId: payment && payment.providerId });\n            })\n        );\n    }\n\n    initialize(options: PaymentInitializeOptions): ThunkAction<PaymentStrategyInitializeAction, InternalCheckoutSelectors> {\n        const { methodId, gatewayId } = options;\n\n        return store => defer(() => {\n            const state = store.getState();\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            if (methodId && state.paymentStrategies.isInitialized(methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(PaymentStrategyActionType.InitializeRequested, undefined, { methodId })),\n                this._strategyRegistry.getByMethod(method)\n                    .initialize({ ...options, methodId, gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.InitializeSucceeded, undefined, { methodId }))\n            );\n        }).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.InitializeFailed, error, { methodId }))\n        );\n    }\n\n    deinitialize(options: PaymentRequestOptions): ThunkAction<PaymentStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        const { methodId, gatewayId } = options;\n\n        return store => defer(() => {\n            const state = store.getState();\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            if (methodId && !state.paymentStrategies.isInitialized(methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(PaymentStrategyActionType.DeinitializeRequested, undefined, { methodId })),\n                this._strategyRegistry.getByMethod(method)\n                    .deinitialize({ ...options, methodId, gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.DeinitializeSucceeded, undefined, { methodId }))\n            );\n        }).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.DeinitializeFailed, error, { methodId }))\n        );\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: PaymentRequestOptions): Observable<PaymentStrategyWidgetAction> {\n        const methodId = options && options.methodId;\n        const meta = { methodId };\n\n        return concat(\n            of(createAction(PaymentStrategyActionType.WidgetInteractionStarted, undefined, meta)),\n            defer(() =>\n                method().then(() => createAction(PaymentStrategyActionType.WidgetInteractionFinished, undefined, meta))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.WidgetInteractionFailed, error, meta))\n        );\n    }\n\n    private _loadOrderPaymentsIfNeeded(store: ReadableCheckoutStore, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        const state = store.getState();\n        const checkout = state.checkout.getCheckout();\n\n        if (checkout && checkout.orderId) {\n            return this._orderActionCreator.loadOrderPayments(checkout.orderId, options);\n        }\n\n        return empty();\n    }\n}\n","import { isEqual } from 'lodash';\n\nimport { PartialDeep } from '../common/types';\n\nimport Cart from './cart';\n\nexport default class CartComparator {\n    isEqual(cartA: Cart, cartB: Cart): boolean {\n        return isEqual(\n            this._normalize(cartA),\n            this._normalize(cartB)\n        );\n    }\n\n    private _normalize(cart: Cart): PartialDeep<Cart> {\n        return {\n            cartAmount: cart.cartAmount,\n            currency: cart.currency,\n            id: cart.id,\n            lineItems: {\n                digitalItems: cart.lineItems.digitalItems\n                    .slice()\n                    .sort((itemA, itemB) =>\n                        `${itemA.productId}${itemA.variantId}`.localeCompare(`${itemB.productId}${itemB.variantId}`)\n                    )\n                    .map(item => ({\n                        extendedSalePrice: item.extendedSalePrice,\n                        productId: item.productId,\n                        quantity: item.quantity,\n                        variantId: item.variantId,\n                    })),\n                giftCertificates: cart.lineItems.giftCertificates\n                    .slice()\n                    .sort((itemA, itemB) => `${itemA.id}`.localeCompare(`${itemB.id}`))\n                    .map(item => ({\n                        amount: item.amount,\n                        recipient: item.recipient,\n                    })),\n                physicalItems: cart.lineItems.physicalItems\n                    .slice()\n                    .sort((itemA, itemB) =>\n                        `${itemA.productId}${itemA.variantId}`.localeCompare(`${itemB.productId}${itemB.variantId}`)\n                    )\n                    .map(item => ({\n                        extendedSalePrice: item.extendedSalePrice,\n                        productId: item.productId,\n                        quantity: item.quantity,\n                        variantId: item.variantId,\n                        giftWrapping: item.giftWrapping,\n                    })),\n            },\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class CartChangedError extends StandardError {\n    constructor() {\n        super('An update to your shopping cart has been detected and your available shipping costs have been updated.');\n\n        this.name = 'CartChangedError';\n        this.type = 'cart_changed';\n    }\n}\n","import { isEqual, map } from 'lodash';\n\nimport { CartComparator } from '../cart';\nimport { CartChangedError } from '../cart/errors';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { Coupon, GiftCertificate } from '../coupon';\n\nimport Checkout from './checkout';\nimport CheckoutRequestSender from './checkout-request-sender';\n\nexport default class CheckoutValidator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    validate(checkout?: Checkout, options?: RequestOptions): Promise<void> {\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        return this._checkoutRequestSender.loadCheckout(checkout.id, options)\n            .then(response => {\n                const comparator = new CartComparator();\n\n                if (checkout.outstandingBalance === response.body.outstandingBalance\n                    && this._compareCoupons(checkout.coupons, response.body.coupons)\n                    && this._compareGiftCertificates(checkout.giftCertificates, response.body.giftCertificates)\n                    && comparator.isEqual(checkout.cart, response.body.cart)\n                ) {\n                    return;\n                }\n\n                throw new CartChangedError();\n            });\n    }\n\n    private _compareCoupons(couponsA: Coupon[], couponsB: Coupon[]): boolean {\n        return isEqual(map(couponsA, 'code'), map(couponsB, 'code'));\n    }\n\n    private _compareGiftCertificates(giftCertificatesA: GiftCertificate[], giftCertificatesB: GiftCertificate[]): boolean {\n        return isEqual(map(giftCertificatesA, 'code'), map(giftCertificatesB, 'code'));\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we fail to complete the required spam protection\n * verification due to an unknown reason.\n */\nexport default class SpamProtectionFailedError extends StandardError {\n    constructor() {\n        super('We were not able to complete your spam protection verification. Please try again.');\n\n        this.name = 'SpamProtectionFailedError';\n        this.type = 'spam_protection_failed';\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\n\nimport { SpamProtectionFailedError } from './errors';\nimport GoogleRecaptcha from './google-recaptcha';\nimport { SpamProtectionAction, SpamProtectionActionType } from './spam-protection-actions';\nimport { SpamProtectionOptions } from './spam-protection-options';\nimport SpamProtectionRequestSender from './spam-protection-request-sender';\n\nexport default class SpamProtectionActionCreator {\n    constructor(\n        private _googleRecaptcha: GoogleRecaptcha,\n        private _requestSender: SpamProtectionRequestSender\n    ) {}\n\n    initialize(options?: SpamProtectionOptions): ThunkAction<SpamProtectionAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(SpamProtectionActionType.InitializeRequested, undefined)),\n            defer(async () => {\n                const spamProtectionElementId = options ? options.containerId : 'spamProtectionContainer';\n\n                if (!options && !document.getElementById(spamProtectionElementId)) {\n                    const spamProtectionElement = document.createElement('div');\n                    spamProtectionElement.setAttribute('id', spamProtectionElementId);\n                    document.body.appendChild(spamProtectionElement);\n                }\n\n                const state = store.getState();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                const recaptchaSitekey = storeConfig.checkoutSettings.googleRecaptchaSitekey;\n\n                await this._googleRecaptcha.load(spamProtectionElementId, recaptchaSitekey);\n\n                return createAction(SpamProtectionActionType.InitializeSucceeded);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(SpamProtectionActionType.InitializeFailed, error))\n        );\n    }\n\n    execute(): ThunkAction<SpamProtectionAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const { shouldExecuteSpamCheck } = checkout;\n\n            if (!shouldExecuteSpamCheck) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(SpamProtectionActionType.ExecuteRequested, undefined)),\n                this._googleRecaptcha.execute()\n                    .pipe(take(1))\n                    .pipe(switchMap(({ error, token }) => {\n                        if (error || !token) {\n                            throw new SpamProtectionFailedError();\n                        }\n\n                        return this._requestSender.validate(checkout.id, token)\n                            .then(({ body }) => createAction(SpamProtectionActionType.ExecuteSucceeded, body));\n                    }))\n            ).pipe(\n                catchError(error => throwErrorAction(SpamProtectionActionType.ExecuteFailed, error))\n            );\n        };\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nexport default class SpamProtectionRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    validate(checkoutId: string, token: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/spam-protection`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: { token }, headers, timeout });\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { StoreCreditAction, StoreCreditActionType } from './store-credit-actions';\nimport StoreCreditRequestSender from './store-credit-request-sender';\n\nexport default class StoreCreditActionCreator {\n    constructor(\n        private _storeCreditRequestSender: StoreCreditRequestSender\n    ) {}\n\n    applyStoreCredit(useStoreCredit: boolean, options?: RequestOptions): ThunkAction<StoreCreditAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(StoreCreditActionType.ApplyStoreCreditRequested)),\n            defer(async () => {\n                const state = store.getState();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                const { body } = await (useStoreCredit ?\n                    this._storeCreditRequestSender.applyStoreCredit(checkout.id, options) :\n                    this._storeCreditRequestSender.removeStoreCredit(checkout.id, options));\n\n                return createAction(StoreCreditActionType.ApplyStoreCreditSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(StoreCreditActionType.ApplyStoreCreditFailed, error))\n        );\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class StoreCreditRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyStoreCredit(checkoutId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/store-credit`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n\n    removeStoreCredit(checkoutId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/store-credit`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, from, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { OrderActionCreator } from '../order';\n\nimport Payment, { FormattedHostedInstrument, FormattedPayload, FormattedVaultedInstrument } from './payment';\nimport { InitializeOffsitePaymentAction, PaymentActionType, SubmitPaymentAction } from './payment-actions';\nimport PaymentRequestSender from './payment-request-sender';\nimport PaymentRequestTransformer from './payment-request-transformer';\n\nexport default class PaymentActionCreator {\n    constructor(\n        private _paymentRequestSender: PaymentRequestSender,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentRequestTransformer: PaymentRequestTransformer\n    ) {}\n\n    submitPayment(payment: Payment): ThunkAction<SubmitPaymentAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentActionType.SubmitPaymentRequested)),\n            from(this._paymentRequestSender.submitPayment(\n                this._paymentRequestTransformer.transform(payment, store.getState())\n            ))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._orderActionCreator.loadCurrentOrder()(store),\n                        of(createAction(PaymentActionType.SubmitPaymentSucceeded, body))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentActionType.SubmitPaymentFailed, error))\n        );\n    }\n\n    initializeOffsitePayment(\n        methodId: string,\n        gatewayId?: string,\n        instrumentId?: string,\n        shouldSaveInstrument?: boolean\n    ): ThunkAction<InitializeOffsitePaymentAction, InternalCheckoutSelectors> {\n        return store => {\n            let paymentData: FormattedPayload<FormattedHostedInstrument | FormattedVaultedInstrument> | undefined;\n\n            if (instrumentId) {\n                paymentData = { formattedPayload: { bigpay_token: instrumentId } };\n            } else if (shouldSaveInstrument) {\n                paymentData = { formattedPayload: { vault_payment_instrument: shouldSaveInstrument } };\n            }\n\n            const payload = this._paymentRequestTransformer.transform({ gatewayId, methodId, paymentData }, store.getState());\n\n            return concat(\n                of(createAction(PaymentActionType.InitializeOffsitePaymentRequested)),\n                this._paymentRequestSender.initializeOffsitePayment(payload)\n                    .then(() => createAction(PaymentActionType.InitializeOffsitePaymentSucceeded))\n            ).pipe(\n                catchError(error => throwErrorAction(PaymentActionType.InitializeOffsitePaymentFailed, error))\n            );\n        };\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload);\n        });\n    }\n\n    private _transformResponse(response: any): Response {\n        return {\n            headers: response.headers,\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","import { PaymentInstrument, VaultedInstrument } from './payment';\n\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\n    return Boolean((instrument as VaultedInstrument).instrumentId);\n}\n","import { pick } from 'lodash';\n\nimport { mapToInternalAddress } from '../address';\nimport { mapToInternalCart } from '../cart';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { mapToInternalCustomer } from '../customer';\nimport { mapToInternalOrder } from '../order';\nimport { mapToInternalShippingOption } from '../shipping';\n\nimport isVaultedInstrument from './is-vaulted-instrument';\nimport Payment from './payment';\nimport PaymentMethod from './payment-method';\nimport PaymentMethodSelector from './payment-method-selector';\nimport PaymentRequestBody from './payment-request-body';\n\nexport default class PaymentRequestTransformer {\n    transform(payment: Payment, checkoutState: InternalCheckoutSelectors): PaymentRequestBody {\n        const billingAddress = checkoutState.billingAddress.getBillingAddress();\n        const checkout = checkoutState.checkout.getCheckout();\n        const customer = checkoutState.customer.getCustomer();\n        const order = checkoutState.order.getOrder();\n        const paymentMethod = this._getPaymentMethod(checkoutState.paymentMethods, payment.methodId, payment.gatewayId);\n        const shippingAddress = checkoutState.shippingAddress.getShippingAddress();\n        const consignments = checkoutState.consignments.getConsignments();\n        const shippingOption = checkoutState.consignments.getShippingOption();\n        const storeConfig = checkoutState.config.getStoreConfig();\n        const contextConfig = checkoutState.config.getContextConfig();\n        const instrumentMeta = checkoutState.instruments.getInstrumentsMeta();\n        const paymentMeta = checkoutState.paymentMethods.getPaymentMethodsMeta();\n        const orderMeta = checkoutState.order.getOrderMeta();\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\n\n        const authToken = instrumentMeta && payment.paymentData && isVaultedInstrument(payment.paymentData) ?\n            `${checkoutState.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            checkoutState.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            authToken,\n            paymentMethod,\n            customer: internalCustomer,\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: payment.paymentData,\n            quoteMeta: {\n                request: {\n                    ...paymentMeta,\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: pick(storeConfig && storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    private _getPaymentMethod(\n        paymentMethodSelector: PaymentMethodSelector,\n        methodId: string,\n        gatewayId?: string\n    ): PaymentMethod | undefined {\n        const paymentMethod = paymentMethodSelector.getPaymentMethod(methodId, gatewayId);\n\n        if (!paymentMethod) {\n            return;\n        }\n\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\n            return { ...paymentMethod, gateway: paymentMethod.id };\n        }\n\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\n        }\n\n        return paymentMethod;\n    }\n}\n","export interface AdyenHostWindow extends Window {\n    AdyenCheckout?: new(configuration: AdyenConfiguration) => AdyenCheckout;\n}\n\nexport interface AdyenConfiguration {\n    /*\n     * Use test, and then change this to live when you're ready to accept live payments.\n     */\n    environment?: string;\n\n    /*\n     * The shopper's locale. This is used to set the language rendered in the Components.\n     */\n    locale?: string;\n\n    /*\n     * The Origin Key of your website.\n     */\n    originKey: string;\n\n    /*\n     * Supported from Components version 3.0.0 and later. The full paymentMethods response,\n     * returned in step 1. We recommend that you pass this on the AdyenCheckout instance.\n     * Otherwise, you need to pass the specific payment method details separately for each\n     * Component.\n     */\n    paymentMethodsResponse?: PaymentMethodsResponse;\n\n    /*\n     * Specify the function that you created, for example, handleOnChange. If you wish\n     * to override this function, you can also define an onChange event on the Component\n     * level.\n     */\n    onChange?(state: AdyenCardState, component: AdyenComponent): void;\n}\n\nexport interface PaymentMethodsResponse {\n    /**\n     * Groups of payment methods.\n     */\n    groups?: AdyenPaymentMethodGroup[];\n\n    /**\n     * Detailed list of one-click payment methods.\n     */\n    oneClickPaymentMethods?: RecurringDetail;\n\n    /**\n     * Detailed list of payment methods required to generate payment forms.\n     */\n    paymentMethods?: AdyenPaymentMethod[];\n\n    /**\n     * List of all stored payment methods.\n     */\n    storedPaymentMethods?: AdyenStoredPaymentMethod[];\n}\n\nexport interface AdyenPaymentMethod {\n    /**\n     * List of possible brands. For example: visa, mc.\n     */\n    brands?: string[];\n\n    /**\n     * The configuration of the payment method.\n     */\n    configuration?: object;\n\n    /**\n     * All input details to be provided to complete the payment with this payment\n     * method.\n     */\n    details?: InputDetail[];\n\n    /**\n     * The group where this payment method belongs to.\n     */\n    group?: Group;\n\n    /**\n     * The displayable name of this payment method.\n     */\n    name?: string;\n\n    /**\n     * Echo data required to send in next calls.\n     */\n    paymentMethodData?: string;\n\n    /**\n     * Indicates whether this payment method supports tokenization or not.\n     */\n    supportsRecurring?: boolean;\n\n    /**\n     * The unique payment method code.\n     */\n    type?: string;\n}\n\nexport interface AdyenPaymentMethodGroup {\n    /**\n     * The type to submit for any payment method in this group.\n     */\n    groupType?: string;\n\n    /**\n     * The human-readable name of this group.\n     */\n    name?: string;\n\n    /**\n     * The types of payment methods that belong in this group.\n     */\n    types?: string[];\n}\n\nexport interface InputDetail {\n    /**\n     * Configuration parameters for the required input.\n     */\n    configuration?: object;\n\n    /**\n     * Input details can also be provided recursively.\n     */\n    details?: SubInputDetail[];\n\n    /**\n     * In case of a select, the URL from which to query the items.\n     */\n    itemSearchUrl?: string;\n\n    /**\n     * In case of a select, the items to choose from.\n     */\n    items?: Item[];\n\n    /**\n     * The value to provide in the result.\n     */\n    key?: string;\n\n    /**\n     * True if this input value is optional.\n     */\n    optional?: boolean;\n\n    /**\n     * The type of the required input.\n     */\n    type?: string;\n\n    /**\n     * The value can be pre-filled, if available.\n     */\n    value?: string;\n}\n\nexport interface AdyenThreeDS2Options {\n    /**\n     * Specify Three3DS2Challenge Widget Size\n     */\n    widgetSize?: string;\n\n    /**\n     * A callback that gets called when adyen component is mounted\n     */\n    onLoad(cancel: () => void): void;\n\n    /**\n     * A callback that gets called when adyen component verification\n     * is completed\n     */\n    onComplete(): void;\n}\n\nexport enum ThreeDS2ComponentType {\n    ThreeDS2DeviceFingerprint = 'threeDS2DeviceFingerprint',\n    ThreeDS2Challenge = 'threeDS2Challenge',\n}\n\nexport interface ThreeDS2Result {\n    payment_data: string;\n    code: string;\n    token: string;\n}\n\nexport interface ThreeDS1Result {\n    acs_url: string;\n    payer_auth_request: string;\n    callback_url: string;\n    merchant_data: string;\n}\n\nexport interface SubInputDetail {\n    /**\n     * Configuration parameters for the required input.\n     */\n    configuration?: object;\n\n    /**\n     * In case of a select, the items to choose from.\n     */\n    items?: Item[];\n\n    /**\n     * The value to provide in the result.\n     */\n    key?: string;\n\n    /**\n     * True if this input is optional to provide.\n     */\n    optional?: boolean;\n\n    /**\n     * The type of the required input.\n     */\n    type?: string;\n\n    /**\n     * The value can be pre-filled, if available.\n     */\n    value?: string;\n}\n\nexport interface Item {\n    /**\n     * The value to provide in the result.\n     */\n    id?: string;\n\n    /**\n     * The display name.\n     */\n    name?: string;\n}\n\nexport interface Group {\n    /**\n     * The name of the group.\n     */\n    name?: string;\n\n    /**\n     * Echo data to be used if the payment method is displayed as part of this group.\n     */\n    paymentMethodData?: string;\n\n    /**\n     * The unique code of the group.\n     */\n    type?: string;\n}\n\nexport interface AdyenStoredPaymentMethod {\n    /**\n     * The brand of the card.\n     */\n    brand?: string;\n\n    /**\n     * The month the card expires.\n     */\n    expiryMonth?: string;\n\n    /**\n     * The year the card expires.\n     */\n    expiryYear?: string;\n\n    /**\n     * The unique payment method code.\n     */\n    holderName?: string;\n\n    /**\n     * A unique identifier of this stored payment method.\n     */\n    id?: string;\n\n    /**\n     * The last four digits of the PAN.\n     */\n    lastFour?: string;\n\n    /**\n     * The display name of the stored payment method.\n     */\n    name: string;\n\n    /**\n     * The shopper’s email address.\n     */\n    shopperEmail?: string;\n\n    /**\n     * The supported shopper interactions for this stored payment method.\n     */\n    supportedShopperInteractions?: string[];\n\n    /**\n     * The type of payment method.\n     */\n    type?: string;\n}\n\nexport interface RecurringDetail extends AdyenPaymentMethod {\n    /**\n     * The reference that uniquely identifies the recurring detail.\n     */\n    recurringDetailReference?: string;\n\n    /**\n     * Contains information on previously stored payment details.\n     */\n    storedDetails?: StoredDetails;\n}\n\nexport interface StoredDetails {\n    /**\n     * The stored bank account.\n     */\n    bank?: Bank;\n\n    /**\n     * The stored card information.\n     */\n    card?: Card;\n\n    /**\n     * The email associated with stored payment details.\n     */\n    emailAddress?: string;\n}\n\nexport interface Bank {\n    /**\n     * The bank account number (without separators).\n     */\n    bankAccountNumber?: string;\n\n    /**\n     * The bank city.\n     */\n    bankCity?: string;\n\n    /**\n     * The location id of the bank. The field value is nil in most cases.\n     */\n    bankLocationId?: string;\n\n    /**\n     * The name of the bank.\n     */\n    bankName?: string;\n\n    /**\n     * The Business Identifier Code (BIC) is the SWIFT address assigned to\n     * a bank. The field value is nil in most cases.\n     */\n    bic?: string;\n\n    /**\n     * Country code where the bank is located.\n     * A valid value is an ISO two-character country code (e.g. 'NL').\n     */\n    countryCode?: string;\n\n    /**\n     * The International Bank Account Number (IBAN).\n     */\n    iban?: string;\n\n    /**\n     * The name of the bank account holder. If you submit a name with non-Latin\n     * characters, we automatically replace some of them with corresponding Latin\n     * characters to meet the FATF recommendations. For example:\n     * χ12 is converted to ch12.\n     * üA is converted to euA.\n     * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\n     * After replacement, the ownerName must have at least three alphanumeric characters\n     * (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character\n     * (A-Z, a-z). For example:\n     * John17 - allowed.\n     * J17 - allowed.\n     * 171 - not allowed.\n     * John-7 - allowed.\n     */\n    ownerName?: string;\n\n    /**\n     * The bank account holder's tax ID.\n     */\n    taxId?: string;\n}\n\nexport interface Card {\n    /**\n     * The card verification code (1-20 characters). Depending on the card brand, it\n     * is known also as:\n     * CVV2/CVC2 – length: 3 digits\n     * CID – length: 4 digits\n     */\n    cvc?: string;\n\n    /**\n     * The card expiry month. Format: 2 digits, zero-padded for single digits. For example:\n     * 03 = March\n     * 11 = November\n     * Required\n     */\n    expiryMonth: string;\n\n    /**\n     * The card expiry year. Format: 4 digits. For example: 2020\n     * Required\n     */\n    expiryYear: string;\n\n    /**\n     * The name of the cardholder, as printed on the card.\n     * Required\n     */\n    holderName: string;\n\n    /**\n     * The issue number of the card (for some UK debit cards only).\n     */\n    issueNumber?: string;\n\n    /**\n     * The card number (4-19 characters). Do not use any separators. When this value is\n     * returned in a response, only the last 4 digits of the card number are returned.\n     * Required\n     */\n    number: string;\n\n    /**\n     * The month component of the start date (for some UK debit cards only).\n     */\n    startNumber?: string;\n\n    /**\n     * The year component of the start date (for some UK debit cards only).\n     */\n    startYear?: string;\n}\n\nexport interface CreditCardPlaceHolder {\n    encryptedCardNumber?: string;\n    encryptedExpiryDate?: string;\n    encryptedSecurityCode: string;\n}\n\nexport interface SepaPlaceHolder {\n    ownerName?: string;\n    ibanNumber?: string;\n}\n\nexport interface AdyenComponent {\n    mount(containerId: string): HTMLElement;\n    unmount(): void;\n}\n\nexport interface AdyenCheckout {\n    create(type: string, componentOptions?: AdyenCreditCardComponentOptions |\n        ThreeDS2DeviceFingerprintComponentOptions | ThreeDS2ChallengeComponentOptions | AdyenCustomCardComponentOptions): AdyenComponent;\n}\n\nexport interface AdyenBaseCardComponentOptions {\n    /**\n     * Array of card brands that will be recognized by the component.\n     *\n     */\n    brands?: string[];\n\n    /**\n     * Set a style object to customize the input fields. See Styling Secured Fields\n     * for a list of supported properties.\n     */\n    styles?: AdyenStyleOptions;\n}\n\nexport interface AdyenCardComponentEvents {\n    /**\n     * Called when the shopper enters data in the card input fields.\n     * Here you have the option to override your main Adyen Checkout configuration.\n     */\n    onChange?(state: AdyenCardState, component: AdyenComponent): void;\n}\n\nexport interface AdyenCreditCardComponentOptions extends AdyenBaseCardComponentOptions, AdyenCardComponentEvents {\n    /**\n     * Set an object containing the details array for type: scheme from\n     * the /paymentMethods response.\n     */\n    details?: InputDetail[];\n\n    /**\n     * Set to true to show the checkbox to save card details for the next payment.\n     */\n    enableStoreDetails?: boolean;\n\n    /**\n     * Set to true to request the name of the card holder.\n     */\n    hasHolderName?: boolean;\n\n    /**\n     * Set to true to require the card holder name.\n     */\n    holderNameRequired?: boolean;\n\n    /**\n     * Prefill the card holder name field. Supported from Card component\n     */\n    holderName?: string;\n\n    /**\n     * Defaults to ['mc','visa','amex']. Configure supported card types to\n     * facilitate brand recognition used in the Secured Fields onBrand callback.\n     * See list of available card types. If a shopper enters a card type not\n     * specified in the GroupTypes configuration, the onBrand callback will not be invoked.\n     */\n    groupTypes?: string[];\n\n    /**\n     * Specify the sample values you want to appear for card detail input fields.\n     */\n    placeholders?: CreditCardPlaceHolder | SepaPlaceHolder;\n}\n\nexport interface CustomCardAriaLabel {\n    label?: string;\n    iframeTitle?: string;\n}\n\nexport interface AdyenCustomCardAriaLabels {\n    lang?: string;\n    encryptedCardNumber?: CustomCardAriaLabel;\n    encryptedExpiryDate?: CustomCardAriaLabel;\n    encryptedSecurityCode?: CustomCardAriaLabel;\n}\n\nexport interface AdyenCustomCardComponentOptions extends AdyenBaseCardComponentOptions, AdyenCardComponentEvents {\n    /**\n     * Specify aria attributes for the input fields for web accessibility.\n     */\n    ariaLabels?: AdyenCustomCardAriaLabels;\n\n    /**\n     * Automatically shift the focus from date field to the CVC field.\n     */\n    autofocus?: boolean;\n}\n\nexport interface AdyenCardState {\n    data: AdyenCardDataPaymentMethodState;\n    isValid?: boolean;\n}\n\nexport interface AdyenCardDataPaymentMethodState {\n    paymentMethod: AdyenCardPaymentMethodState;\n}\nexport interface AdyenCardPaymentMethodState {\n    encryptedCardNumber: string;\n    encryptedExpiryMonth: string;\n    encryptedExpiryYear: string;\n    encryptedSecurityCode: string;\n    holderName?: string;\n    type: string;\n}\nexport interface ThreeDS2DeviceFingerprintComponentOptions {\n    fingerprintToken: string;\n    onComplete(fingerprintData: any): void;\n    onError(error: AdyenError): void;\n}\n\nexport enum ResultCode {\n    AuthenticationFinished = 'AuthenticationFinished',\n    Authorised = 'Authorised',\n    Cancelled = 'Cancelled',\n    ChallengeShopper = 'ChallengeShopper',\n    Error = 'Error',\n    IdentifyShopper = 'IdentifyShopper',\n    Pending = 'Pending',\n    Received = 'Received',\n    RedirectShopper = 'RedirectShopper',\n    Refused = 'Refused',\n}\n\nexport interface ThreeDS2ChallengeComponentOptions {\n    challengeToken: string;\n    size?: string;\n    onComplete(fingerprintData: any): void;\n    onError(error: AdyenError): void;\n}\n\nexport interface AdyenStyleOptions {\n    /**\n     * Base styling applied to the iframe. All styling extends from this style.\n     */\n    base?: CssProperties;\n\n    /**\n     * Styling applied when a field fails validation.\n     */\n    error?: CssProperties;\n\n    /**\n     * Styling applied to the field's placeholder values.\n     */\n    placeholder?: CssProperties;\n\n    /**\n     * Styling applied once a field passes validation.\n     */\n    validated?: CssProperties;\n}\n\nexport interface AdyenError {\n    errorCode: string;\n    message: string;\n}\n\nexport interface CssProperties {\n    background?: string;\n    color?: string;\n    display?: string;\n    font?: string;\n    fontFamily?: string;\n    fontSize?: string;\n    fontSizeAdjust?: string;\n    fontSmoothing?: string;\n    fontStretch?: string;\n    fontStyle?: string;\n    fontVariant?: string;\n    fontVariantAlternates?: string;\n    fontVariantCaps?: string;\n    fontVariantEastAsian?: string;\n    fontVariantLigatures?: string;\n    fontVariantNumeric?: string;\n    fontWeight?: string;\n    letterSpacing?: string;\n    lineHeight?: string;\n    mozOsxFontSmoothing?: string;\n    mozTransition?: string;\n    outline?: string;\n    opacity?: string | number;\n    padding?: string;\n    textAlign?: string;\n    textShadow?: string;\n    transition?: string;\n    webkitFontSmoothing?: string;\n    webkitTransition?: string;\n}\n\nexport interface ThreeDS2OnComplete {\n    data: {\n        details: {\n            'threeds2.challengeResult'?: string;\n            'threeds2.fingerprint'?: string;\n            paymentData: string;\n        };\n    };\n}\n\nexport interface ThreeDSRequiredErrorResponse {\n    errors: [\n        { code: string }\n    ];\n    three_ds_result: {\n        code: ResultCode;\n        token?: string;\n        payment_data?: string;\n        acs_url?: string;\n        callback_url?: string;\n        payer_auth_request?: string;\n        merchant_data?: string;\n    };\n    status: string;\n}\n","import { ReadableDataStore } from '@bigcommerce/data-store';\nimport { some } from 'lodash';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { Registry, RegistryOptions } from '../common/registry';\n\nimport PaymentMethod from './payment-method';\nimport * as paymentMethodTypes from './payment-method-types';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { PaymentStrategy } from './strategies';\n\nexport default class PaymentStrategyRegistry extends Registry<PaymentStrategy, PaymentStrategyType> {\n    constructor(\n        private _store: ReadableDataStore<InternalCheckoutSelectors>,\n        options?: PaymentStrategyRegistryOptions\n    ) {\n        super(options);\n    }\n\n    getByMethod(paymentMethod?: PaymentMethod): PaymentStrategy {\n        if (!paymentMethod) {\n            return this.get();\n        }\n\n        const token = this._getToken(paymentMethod);\n\n        const cacheToken = [paymentMethod.gateway, paymentMethod.id]\n            .filter(value => value !== undefined && value !== null)\n            .join('-');\n\n        return this.get(token, cacheToken);\n    }\n\n    private _getToken(paymentMethod: PaymentMethod): PaymentStrategyType {\n        const methodId = paymentMethod.gateway || paymentMethod.id;\n\n        if (this._hasFactoryForMethod(methodId)) {\n            return methodId;\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.OFFLINE) {\n            return PaymentStrategyType.OFFLINE;\n        }\n\n        if (this._isLegacyMethod(paymentMethod)) {\n            return PaymentStrategyType.LEGACY;\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.HOSTED) {\n            return PaymentStrategyType.OFFSITE;\n        }\n\n        return PaymentStrategyType.CREDIT_CARD;\n    }\n\n    private _hasFactoryForMethod(\n        methodId: string\n    ): methodId is PaymentStrategyType {\n        return this._hasFactory(methodId);\n    }\n\n    private _isLegacyMethod(paymentMethod: PaymentMethod): boolean {\n        const config = this._store.getState().config.getStoreConfig();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const { clientSidePaymentProviders } = config.paymentSettings;\n\n        if (!clientSidePaymentProviders || paymentMethod.gateway === 'adyen' || paymentMethod.gateway === 'barclaycard') {\n            return false;\n        }\n\n        return !some(clientSidePaymentProviders, id =>\n            paymentMethod.id === id || paymentMethod.gateway === id\n        );\n    }\n}\n\nexport interface PaymentStrategyRegistryOptions extends RegistryOptions {\n    clientSidePaymentProviders?: string[];\n}\n","import { InvalidArgumentError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when we are unable to submit a payment because\n * the caller has not provided all the required fields, i.e.: if an argument is\n * missing or it is not the expected data type.\n */\nexport default class PaymentArgumentInvalidError extends InvalidArgumentError {\n    constructor(invalidFields?: string[]) {\n        let message = 'Unable to submit payment for the order because the payload is invalid.';\n\n        if (invalidFields) {\n            message = `${message} Make sure the following fields are provided correctly: ${invalidFields.join(', ')}.`;\n        }\n\n        super(message);\n\n        this.name = 'PaymentArgumentInvalidError';\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport Payment, { HostedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { AdyenCardState, AdyenCheckout, AdyenComponent, AdyenConfiguration, AdyenError, ResultCode, ThreeDS2ComponentType, ThreeDS2OnComplete, ThreeDS2Result } from './adyenv2';\nimport AdyenV2PaymentInitializeOptions from './adyenv2-initialize-options';\nimport AdyenV2ScriptLoader from './adyenv2-script-loader';\n\nexport default class AdyenV2PaymentStrategy implements PaymentStrategy {\n    private _adyenCheckout?: AdyenCheckout;\n    private _adyenv2?: AdyenV2PaymentInitializeOptions;\n    private _adyenPaymentComponent?: AdyenComponent;\n    private _adyenCardVerificationComponent?: AdyenComponent;\n    private _adyenComponentState?: AdyenCardState;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _adyenV2ScriptLoader: AdyenV2ScriptLoader,\n        private _formPoster: FormPoster,\n        private _locale: string\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { adyenv2 } = options;\n\n        if (!adyenv2) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.adyenv2\" argument is not provided.');\n        }\n\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._adyenv2 = adyenv2;\n\n        const configuration: AdyenConfiguration = {\n            environment:  paymentMethod.initializationData.environment,\n            locale: this._locale,\n            originKey: paymentMethod.initializationData.originKey,\n            paymentMethodsResponse: paymentMethod.initializationData.paymentMethodsResponse,\n        };\n\n        return this._adyenV2ScriptLoader.load(configuration)\n            .then(adyenCheckout => {\n                this._adyenCheckout = adyenCheckout;\n\n                const adyenPaymentComponent = this._adyenCheckout.create(\n                    paymentMethod.id,\n                    {\n                        ...adyenv2.options,\n                        onChange: (state: AdyenCardState) => {\n                            this._updateAdyenComponentState(state);\n                        },\n                    }\n                );\n\n                adyenPaymentComponent.mount(`#${adyenv2.containerId}`);\n\n                this._adyenPaymentComponent = adyenPaymentComponent;\n\n                if (adyenv2.cardVerificationContainerId) {\n                    const adyenCardVerificationComponent = this._adyenCheckout.create('securedfields', {\n                        onChange: (state: AdyenCardState) => {\n                            this._updateAdyenComponentState(state);\n                        },\n                    });\n\n                    adyenCardVerificationComponent.mount(`#${adyenv2.cardVerificationContainerId}`);\n\n                    this._adyenCardVerificationComponent = adyenCardVerificationComponent;\n                }\n\n                return Promise.resolve(this._store.getState());\n            });\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n        const shouldSaveInstrument = paymentData && (paymentData as HostedInstrument).shouldSaveInstrument;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => {\n                const adyenComponentState = this._adyenComponentState;\n\n                if (!adyenComponentState) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n                if (paymentData && isVaultedInstrument(paymentData)) {\n\n                    const { encryptedCardNumber, encryptedSecurityCode } = adyenComponentState.data.paymentMethod;\n\n                    return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                        ...payment,\n                        paymentData: {\n                            instrumentId: paymentData.instrumentId,\n                            ccCvv: encryptedSecurityCode,\n                            ccNumber: encryptedCardNumber,\n                        },\n                    }));\n                }\n\n                const paymentPayload = {\n                    methodId: payment.methodId,\n                    paymentData: {\n                        nonce: JSON.stringify({\n                            ...adyenComponentState.data.paymentMethod,\n                            origin: window.location.origin,\n                        }),\n                        shouldSaveInstrument,\n                    },\n                };\n\n                return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n            })\n            .catch(error => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                    return Promise.reject(error);\n                }\n\n                if (error.body.three_ds_result.code === ResultCode.IdentifyShopper) {\n                    return this._handle3DS2Fingerprint(error.body.three_ds_result, payment.methodId)\n                        .then((payment: Payment) =>\n                            this._store.dispatch(this._paymentActionCreator.submitPayment({\n                                ...payment,\n                                paymentData: {\n                                    ...payment.paymentData,\n                                    shouldSaveInstrument,\n                                },\n                            })))\n                        .catch(error => {\n                            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                                return Promise.reject(error);\n                            }\n\n                            if (error.body.three_ds_result.code === ResultCode.ChallengeShopper) {\n                                return this._handle3DS2Challenge(error.body.three_ds_result, payment.methodId)\n                                    .then((payment: Payment) =>\n                                        this._store.dispatch(this._paymentActionCreator.submitPayment({\n                                            ...payment,\n                                            paymentData: {\n                                                ...payment.paymentData,\n                                                shouldSaveInstrument,\n                                            },\n                                        }))\n                                    );\n                            }\n\n                            return Promise.reject(error);\n                        });\n                }\n\n                if (error.body.three_ds_result.code === ResultCode.ChallengeShopper) {\n                    return this._handle3DS2Challenge(error.body.three_ds_result, payment.methodId)\n                        .then((payment: Payment) =>\n                            this._store.dispatch(this._paymentActionCreator.submitPayment({\n                                ...payment,\n                                paymentData: {\n                                    ...payment.paymentData,\n                                    shouldSaveInstrument,\n                                },\n                            }))\n                        );\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    });\n                });\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._adyenPaymentComponent) {\n            this._adyenPaymentComponent.unmount();\n            this._adyenPaymentComponent = undefined;\n        }\n\n        if (this._adyenCardVerificationComponent) {\n            this._adyenCardVerificationComponent.unmount();\n            this._adyenCardVerificationComponent = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _getAdyenV2PaymentInitializeOptions(): AdyenV2PaymentInitializeOptions {\n        if (!this._adyenv2) {\n            throw new InvalidArgumentError('\"options.adyenv2\" argument was not provided during initialization.');\n        }\n\n        return this._adyenv2;\n    }\n\n    private _getThreeDS2ChallengeWidgetSize(): string {\n        const { widgetSize } = this._getAdyenV2PaymentInitializeOptions().threeDS2Options;\n\n        if (!widgetSize) {\n            return '01';\n        }\n\n        return widgetSize;\n    }\n\n    private _handle3DS2Challenge(resultObject: ThreeDS2Result, paymentMethodId: string): Promise<Payment> {\n        return new Promise((resolve, reject) => {\n            if (!this._adyenCheckout) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const { onComplete, onLoad } = this._getAdyenV2PaymentInitializeOptions().threeDS2Options;\n\n            const challengeComponent = this._adyenCheckout\n                .create(ThreeDS2ComponentType.ThreeDS2Challenge, {\n                    challengeToken: resultObject.token,\n                    onComplete: (challengeData: ThreeDS2OnComplete) => {\n                        const challengePaymentPayload = {\n                            ...challengeData.data,\n                            paymentData: resultObject.payment_data,\n                        };\n\n                        const paymentPayload = {\n                            methodId: paymentMethodId,\n                            paymentData: {\n                                nonce: JSON.stringify(challengePaymentPayload),\n                            },\n                        };\n\n                        onComplete();\n\n                        resolve(paymentPayload);\n                    },\n                    onError: (error: AdyenError) => reject(error),\n                    size: this._getThreeDS2ChallengeWidgetSize(),\n                });\n\n            const threeDS2Container = this._getAdyenV2PaymentInitializeOptions().threeDS2ContainerId;\n\n            onLoad(() => {\n                challengeComponent.unmount();\n                reject();\n            });\n\n            challengeComponent.mount(`#${threeDS2Container}`);\n        });\n    }\n\n    private _handle3DS2Fingerprint(resultObject: ThreeDS2Result, paymentMethodId: string): Promise<Payment> {\n        return new Promise((resolve, reject) => {\n            if (!this._adyenCheckout) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const { onComplete, onLoad } = this._getAdyenV2PaymentInitializeOptions().threeDS2Options;\n\n            const fingerprintComponent = this._adyenCheckout\n                .create(ThreeDS2ComponentType.ThreeDS2DeviceFingerprint, {\n                    fingerprintToken: resultObject.token,\n                    onComplete: (fingerprintData: ThreeDS2OnComplete) => {\n                        const fingerprintPaymentPayload = {\n                            ...fingerprintData.data,\n                            paymentData: resultObject.payment_data,\n                        };\n\n                        const paymentPayload = {\n                            methodId: paymentMethodId,\n                            paymentData: {\n                                nonce: JSON.stringify(fingerprintPaymentPayload),\n                            },\n                        };\n\n                        onComplete();\n\n                        resolve(paymentPayload);\n                    },\n                    onError: (error: AdyenError) => reject(error),\n                });\n\n            const threeDS2Container = this._getAdyenV2PaymentInitializeOptions().threeDS2ContainerId;\n\n            onLoad(() => {\n                fingerprintComponent.unmount();\n                reject();\n            });\n\n            fingerprintComponent.mount(`#${threeDS2Container}`);\n        });\n    }\n\n    private _updateAdyenComponentState(newState: AdyenCardState) {\n        this._adyenComponentState = newState;\n    }\n}\n","export enum OrderIncludes {\n    DigitalItemsCategories = 'lineItems.digitalItems.categories',\n    PhysicalItemsCategories = 'lineItems.physicalItems.categories',\n}\n\nexport default interface OrderParams {\n    include?: OrderIncludes[];\n}\n","import { ScriptLoader, StylesheetLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { AdyenCheckout, AdyenConfiguration, AdyenHostWindow } from './adyenv2';\n\nexport default class AdyenV2ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _stylesheetLoader: StylesheetLoader,\n        private _window: AdyenHostWindow = window\n    ) {}\n\n    load(configuration: AdyenConfiguration): Promise<AdyenCheckout> {\n        return Promise.all([\n            this._stylesheetLoader.loadStylesheet(`https://checkoutshopper-${configuration.environment}.adyen.com/checkoutshopper/sdk/3.3.0/adyen.css`),\n            this._scriptLoader.loadScript(`https://checkoutshopper-${configuration.environment}.adyen.com/checkoutshopper/sdk/3.3.0/adyen.js`),\n        ])\n        .then(() => {\n            if (!this._window.AdyenCheckout) {\n                throw new PaymentMethodClientUnavailableError();\n            }\n\n            return new this._window.AdyenCheckout(configuration);\n        })\n        .catch(() => {\n            throw new PaymentMethodClientUnavailableError();\n        });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the payment flow is cancelled. It could be\n * due to a deliberate user interaction, i.e.: the user clicks on a cancel\n * button which dismisses the payment modal.\n */\nexport default class PaymentMethodCancelledError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Payment process was cancelled.');\n\n        this.name = 'PaymentMethodCancelledError';\n        this.type = 'payment_cancelled';\n    }\n}\n","import { LineItemCategory } from '../../../cart';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { AmountTransformer } from '../../../common/utility';\nimport { Order, OrderActionCreator, OrderIncludes, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { Consignment } from '../../../shipping';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { Affirm, AffirmAddress, AffirmDiscount, AffirmFailResponse, AffirmItem, AffirmRequestData, AffirmSuccessResponse } from './affirm';\nimport AffirmScriptLoader from './affirm-script-loader';\n\nexport default class AffirmPaymentStrategy implements PaymentStrategy {\n    private _affirm?: Affirm;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _affirmScriptLoader: AffirmScriptLoader\n    ) { }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(options.methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n                if (!paymentMethod || !paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const { config: { testMode }, clientToken: publicKey } = paymentMethod;\n\n                return this._affirmScriptLoader.load(publicKey, testMode);\n            })\n            .then(affirm => {\n                this._affirm = affirm;\n\n                return this._store.getState();\n            });\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const methodId = payload.payment && payload.payment.methodId;\n        const { useStoreCredit } = payload;\n        const { _affirm } = this;\n\n        if (!_affirm) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!methodId) {\n            throw new PaymentArgumentInvalidError(['payment.methodId']);\n        }\n\n        const requestOptions = {\n            ...options,\n            params: {\n                include: [\n                    OrderIncludes.PhysicalItemsCategories,\n                    OrderIncludes.DigitalItemsCategories,\n                ],\n            },\n        };\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit }, requestOptions))\n            .then<AffirmSuccessResponse>(() => {\n                _affirm.checkout(this._getCheckoutInformation());\n\n                return new Promise((resolve, reject) => {\n                    _affirm.checkout.open({\n                        onFail: (failObject: AffirmFailResponse) => {\n                            failObject.reason === 'canceled' ? reject(new PaymentMethodCancelledError()) : reject(new PaymentMethodInvalidError());\n                        },\n                        onSuccess: successObject => { resolve(successObject); },\n                    });\n                    _affirm.ui.error.on('close', () => {\n                        reject(new PaymentMethodCancelledError());\n                    });\n                });\n            })\n            .then(result => {\n                const paymentPayload = {\n                    methodId,\n                    paymentData: { nonce: result.checkout_token },\n                };\n\n                return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._affirm) {\n            this._affirm = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getCheckoutInformation(): AffirmRequestData {\n        const state = this._store.getState();\n        const config = state.config.getStoreConfig();\n        const consignments = state.consignments.getConsignments();\n        const order = state.order.getOrder();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!order) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        const amountTransformer = new AmountTransformer(order.currency.decimalPlaces);\n        const billingAddress = this._getBillingAddress();\n\n        return {\n            merchant: {\n                user_confirmation_url: config.links.checkoutLink,\n                user_cancel_url: config.links.checkoutLink,\n                user_confirmation_url_action: 'POST',\n            },\n            shipping: this._getShippingAddress() || billingAddress,\n            billing: billingAddress,\n            items: this._getItems(amountTransformer, order),\n            metadata: {\n                shipping_type: this._getShippingType(consignments),\n                mode: 'modal',\n                platform_type: 'BigCommerce',\n                platform_version: '',\n                platform_affirm: '',\n            },\n            discounts: this._getDiscounts(amountTransformer, order),\n            order_id: order.orderId ? order.orderId.toString() : '',\n            shipping_amount: amountTransformer.toInteger(order.shippingCostTotal),\n            tax_amount: amountTransformer.toInteger(order.taxTotal),\n            total: amountTransformer.toInteger(order.orderAmount),\n        };\n    }\n\n    private _getShippingType(consignments?: Consignment[]): string {\n        if (!consignments) {\n            return '';\n        }\n\n        const consignment = consignments[0];\n\n        return consignment && consignment.selectedShippingOption ?\n            consignment.selectedShippingOption.type : '';\n    }\n\n    private _getBillingAddress(): AffirmAddress {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!billingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const billingInformation = {\n            name: {\n                first: billingAddress.firstName,\n                last: billingAddress.lastName,\n                full: `${billingAddress.firstName} ${billingAddress.lastName}`,\n            },\n            address: {\n                line1: billingAddress.address1,\n                line2: billingAddress.address2,\n                city: billingAddress.city,\n                state: billingAddress.stateOrProvinceCode,\n                zipcode: billingAddress.postalCode,\n                country: billingAddress.countryCode,\n            },\n            phone_number: billingAddress.phone,\n            email: billingAddress.email,\n        };\n\n        return billingInformation;\n    }\n\n    private _getShippingAddress(): AffirmAddress | undefined {\n        const state = this._store.getState();\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n\n        if (!shippingAddress) {\n            return;\n        }\n\n        const shippingInformation = {\n            name: {\n                first: shippingAddress.firstName,\n                last: shippingAddress.lastName,\n                full: `${shippingAddress.firstName} ${shippingAddress.lastName}`,\n            },\n            address: {\n                line1: shippingAddress.address1,\n                line2: shippingAddress.address2,\n                city: shippingAddress.city,\n                state: shippingAddress.stateOrProvinceCode,\n                zipcode: shippingAddress.postalCode,\n                country: shippingAddress.countryCode,\n            },\n            phone_number: shippingAddress.phone,\n        };\n\n        return shippingInformation;\n    }\n\n    private _getItems(amountTransformer: AmountTransformer, order: Order): AffirmItem[] {\n        const items: AffirmItem[] = [];\n\n        for (const item of order.lineItems.physicalItems) {\n            items.push({\n                display_name: item.name,\n                sku: item.sku,\n                unit_price: amountTransformer.toInteger(item.salePrice),\n                qty: item.quantity,\n                item_image_url: item.imageUrl,\n                item_url: item.url,\n                categories: this._getCategories(item.categories),\n            });\n        }\n\n        for (const item of order.lineItems.digitalItems) {\n            items.push({\n                display_name: item.name,\n                sku: item.sku,\n                unit_price: amountTransformer.toInteger(item.salePrice),\n                qty: item.quantity,\n                item_image_url: item.imageUrl,\n                item_url: item.url,\n                categories: this._getCategories(item.categories),\n            });\n        }\n\n        for (const item of order.lineItems.giftCertificates) {\n            items.push({\n                display_name: item.name,\n                sku: '',\n                unit_price: amountTransformer.toInteger(item.amount),\n                qty: 1,\n                item_image_url: '',\n                item_url: '',\n            });\n        }\n\n        if (order.lineItems.customItems) {\n            for (const item of order.lineItems.customItems) {\n                items.push({\n                    display_name: item.name,\n                    sku: item.sku,\n                    unit_price: amountTransformer.toInteger(item.listPrice),\n                    qty: item.quantity,\n                    item_image_url: '',\n                    item_url: '',\n                });\n            }\n        }\n\n        return items;\n    }\n\n    private _getDiscounts(amountTransformer: AmountTransformer, order: Order): AffirmDiscount {\n        const discounts: AffirmDiscount = {};\n\n        for (const line of order.coupons) {\n            if (line.discountedAmount > 0) {\n                discounts[line.code] = {\n                    discount_amount: amountTransformer.toInteger(line.discountedAmount),\n                    discount_display_name: line.displayName,\n                };\n            }\n        }\n\n        if (order.discountAmount > 0) {\n            discounts.DISCOUNTED_AMOUNT = {\n                discount_amount: amountTransformer.toInteger(order.discountAmount),\n                discount_display_name: 'discount',\n            };\n        }\n\n        return discounts;\n    }\n\n    private _getCategories(categories?: LineItemCategory[][]): string[][] {\n        if (!categories) {\n            return[[]];\n        }\n\n        return categories.map(categoryTree => categoryTree.map(category => category.name));\n    }\n}\n","/**\n * Used this approach as Affirm uses snipped for initializing. Please refer to Affirm documentation in: https://docs.affirm.com/Integrate_Affirm/Direct_API#1._Add_Affirm.js\n */\nexport default Function(`\n'use strict';\nreturn function loadAffirmJS(apiKey, scriptURL) {\n    var _affirm_config = {\n        public_api_key:  apiKey,\n        script:          scriptURL\n    };\n    (function(l,g,m,e,a,f,b){var d,c=l[m]||{},h=document.createElement(f),n=document.getElementsByTagName(f)[0],k=function(a,b,c){return function(){a[b]._.push([c,arguments])}};c[e]=k(c,e,\"set\");d=c[e];c[a]={};c[a]._=[];d._=[];c[a][b]=k(c,a,b);a=0;for(b=\"set add save post open empty reset on off trigger ready setProduct\".split(\" \");a<b.length;a++)d[b[a]]=k(c,e,b[a]);a=0;for(b=[\"get\",\"token\",\"url\",\"items\"];a<b.length;a++)d[b[a]]=function(){};h.async=!0;h.src=g[f];n.parentNode.insertBefore(h,n);delete g[f];d(g);l[m]=c})(window,_affirm_config,\"affirm\",\"checkout\",\"ui\",\"script\",\"ready\");\n}`)();\n","import { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { Affirm, AffirmHostWindow, AffirmScripts } from './affirm';\nimport loadAffirmJS from './affirmJs';\n\nexport default class AffirmScriptLoader {\n    constructor(\n        public _window: AffirmHostWindow = window\n    ) { }\n\n    load(apikey?: string, testMode?: boolean): Promise<Affirm> {\n        const scriptURI = this._getScriptURI(testMode);\n\n        loadAffirmJS(apikey, scriptURI);\n\n        if (!this._window.affirm) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return Promise.resolve(this._window.affirm);\n    }\n\n    private _getScriptURI(testMode: boolean = false): string {\n        const SCRIPTS_DEFAULT: AffirmScripts = {\n            PROD: '//cdn1.affirm.com/js/v2/affirm.js',\n            SANDBOX: '//cdn1-sandbox.affirm.com/js/v2/affirm.js',\n        };\n\n        return testMode ? SCRIPTS_DEFAULT.SANDBOX : SCRIPTS_DEFAULT.PROD;\n    }\n}\n","import { CheckoutStore, CheckoutValidator, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport AfterpayScriptLoader from './afterpay-script-loader';\nimport AfterpaySdk from './afterpay-sdk';\n\nexport default class AfterpayPaymentStrategy implements PaymentStrategy {\n    private _afterpaySdk?: AfterpaySdk;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutValidator: CheckoutValidator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _afterpayScriptLoader: AfterpayScriptLoader\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId, options.gatewayId);\n        const config = state.config.getStoreConfig();\n        const storeCountryName = config ? config.storeProfile.storeCountry : '';\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._afterpaySdk = await this._afterpayScriptLoader.load(paymentMethod, this._mapCountryToISO2(storeCountryName));\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._afterpaySdk) {\n            this._afterpaySdk = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const paymentId = payload.payment && payload.payment.gatewayId;\n\n        if (!paymentId) {\n            throw new PaymentArgumentInvalidError(['payment.gatewayId']);\n        }\n\n        let state = this._store.getState();\n        const config = state.config.getStoreConfig();\n        const storeCountryName = config ? config.storeProfile.storeCountry : '';\n        const { useStoreCredit } = payload;\n\n        if (useStoreCredit !== undefined) {\n            state = await this._store.dispatch(\n                this._storeCreditActionCreator.applyStoreCredit(useStoreCredit)\n            );\n        }\n\n        await this._checkoutValidator.validate(state.checkout.getCheckout(), options);\n\n        state = await this._store.dispatch(\n            this._paymentMethodActionCreator.loadPaymentMethod(paymentId, options)\n        );\n\n        await this._redirectToAfterpay(storeCountryName, state.paymentMethods.getPaymentMethod(paymentId));\n\n        // Afterpay will handle the rest of the flow so return a promise that doesn't really resolve\n        return new Promise<never>(() => {});\n    }\n\n    async finalize(options: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n        const config = state.config.getContextConfig();\n\n        if (!payment) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!config || !config.payment.token) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const paymentPayload = {\n            methodId: payment.providerId,\n            paymentData: { nonce: config.payment.token },\n        };\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder({}, options));\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n    }\n\n    private _redirectToAfterpay(countryName: string, paymentMethod?: PaymentMethod): void {\n        if (!this._afterpaySdk || !paymentMethod || !paymentMethod.clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._afterpaySdk.initialize({ countryCode: this._mapCountryToISO2(countryName)});\n        this._afterpaySdk.redirect({ token: paymentMethod.clientToken });\n    }\n\n    private _mapCountryToISO2(countryName: string): string {\n        switch (countryName) {\n        case 'Australia':\n            return 'AU';\n\n        case 'New Zealand':\n            return 'NZ';\n\n        case 'United States':\n            return 'US';\n\n        default:\n            return 'AU';\n        }\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AfterpaySdk from './afterpay-sdk';\nimport AfterpayWindow from './afterpay-window';\n\ninterface AfterpayScripts {\n    PROD: string;\n    SANDBOX: string;\n}\n\nconst SCRIPTS_DEFAULT: AfterpayScripts = {\n    PROD: '//portal.afterpay.com/afterpay-async.js',\n    SANDBOX: '//portal-sandbox.afterpay.com/afterpay-async.js',\n};\n\nconst SCRIPTS_US: AfterpayScripts = {\n    PROD: '//portal.afterpay.com/afterpay-async.js',\n    SANDBOX: '//portal.us-sandbox.afterpay.com/afterpay-async.js',\n};\n\n/** Class responsible for loading the Afterpay SDK */\nexport default class AfterpayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    /**\n     * Loads the appropriate Afterpay SDK depending on the payment method data.\n     * @param method the payment method data\n     */\n    load(method: PaymentMethod, countryCode: string): Promise<AfterpaySdk> {\n        const testMode = method.config.testMode || false;\n        const scriptURI = this._getScriptURI(countryCode, testMode);\n\n        return this._scriptLoader.loadScript(scriptURI)\n            .then(() => (window as unknown as AfterpayWindow).AfterPay);\n    }\n\n    private _getScriptURI(countryCode: string, testMode: boolean): string {\n        if (countryCode === 'US') {\n            return testMode ? SCRIPTS_US.SANDBOX : SCRIPTS_US.PROD;\n        }\n\n        return testMode ? SCRIPTS_DEFAULT.SANDBOX : SCRIPTS_DEFAULT.PROD;\n    }\n\n}\n","import { isEqual } from 'lodash';\n\nimport { omitPrivate } from '../common/utility';\n\nimport InternalAddress from './internal-address';\n\nexport default function isInternalAddressEqual(addressA: Partial<InternalAddress>, addressB: Partial<InternalAddress>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<InternalAddress>): Partial<InternalAddress> {\n    const ignoredKeys = ['id', 'provinceCode'];\n\n    return (Object.keys(omitPrivate(address) || {}) as Array<keyof InternalAddress>)\n        .reduce(\n            (result, key) => ignoredKeys.indexOf(key) === -1 && address[key] ?\n                { ...result, [key]: address[key] } :\n                result,\n            {}\n        );\n}\n","import isPrivate from './is-private';\nimport omitDeep from './omit-deep';\n\nexport default function omitPrivate(object: any): any {\n    return omitDeep(object, (_: any, key: string) => isPrivate(key));\n}\n","import { BillingAddress } from '../billing';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\nexport default function mapFromInternalAddress(address: InternalAddress): Address | BillingAddress {\n    return {\n        id: address.id,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.addressLine1,\n        address2: address.addressLine2,\n        city: address.city,\n        stateOrProvince: address.province,\n        stateOrProvinceCode: address.provinceCode,\n        postalCode: address.postCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","import { noop } from 'lodash';\n\nimport { isInternalAddressEqual, mapFromInternalAddress, mapToInternalAddress } from '../../../address';\nimport { BillingAddressActionCreator } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport AmazonPayConfirmationFlow from './amazon-pay-confirmation-flow';\nimport AmazonPayOrderReference from './amazon-pay-order-reference';\nimport AmazonPayPaymentInitializeOptions from './amazon-pay-payment-initialize-options';\nimport AmazonPayScriptLoader from './amazon-pay-script-loader';\nimport AmazonPayWallet, { AmazonPayWalletOptions } from './amazon-pay-wallet';\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _walletOptions?: AmazonPayPaymentInitializeOptions;\n    private _window: AmazonPayWindow;\n    private _isPaymentMethodSelected: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n        this._isPaymentMethodSelected = false;\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (!amazonOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.amazon\" argument is not provided.');\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._walletOptions = amazonOptions;\n        this._paymentMethod = paymentMethod;\n\n        return new Promise((resolve, reject) => {\n            const onReady = () => {\n                this._createWallet(amazonOptions)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            this._scriptLoader.loadWidget(paymentMethod, onReady)\n                .catch(reject);\n        })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._walletOptions = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const referenceId = this._getOrderReferenceId();\n        const sellerId = this._getMerchantId();\n\n        if (!referenceId || !sellerId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment.methodId\" argument is not provided.');\n        }\n\n        if (!this._isPaymentMethodSelected) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { payment: { paymentData, ...paymentPayload }, useStoreCredit = false } = payload;\n\n        if (options && this._paymentMethod && this._paymentMethod.config.is3dsEnabled) {\n            return this._processPaymentWith3ds(\n                sellerId,\n                referenceId,\n                paymentPayload.methodId,\n                useStoreCredit,\n                options\n            );\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.initializePayment(paymentPayload.methodId, { referenceId, useStoreCredit })\n        )\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                }, options)\n            ))\n            .catch(error => {\n                if (error instanceof RequestError && error.body.type === 'provider_widget_error' && this._walletOptions) {\n                    return this._createWallet(this._walletOptions)\n                        .then(() => Promise.reject(error));\n                }\n\n                return Promise.reject(error);\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getMerchantId(): string | undefined {\n        return this._paymentMethod && this._paymentMethod.config.merchantId;\n    }\n\n    private _getOrderReferenceId(): string | undefined {\n        const state = this._store.getState();\n        const amazon = state.remoteCheckout.getCheckout('amazon');\n\n        return amazon ? amazon.referenceId : undefined;\n    }\n\n    private _getOrderReferenceIdFromInitializationData(): string | undefined {\n        return this._paymentMethod ? this._paymentMethod.initializationData.orderReferenceId : undefined;\n    }\n\n    private _createWallet(options: AmazonPayPaymentInitializeOptions): Promise<AmazonPayWallet> {\n        return new Promise((resolve, reject) => {\n            const { container, onError = noop, onPaymentSelect = noop, onReady = noop } = options;\n            const referenceId = this._getOrderReferenceId() || this._getOrderReferenceIdFromInitializationData();\n            const merchantId = this._getMerchantId();\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay Wallet widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const walletOptions: AmazonPayWalletOptions = {\n                amazonOrderReferenceId: referenceId,\n                design: { designMode: 'responsive' },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onPaymentSelect: orderReference => {\n                    this._synchronizeBillingAddress()\n                        .then(() => {\n                            this._isPaymentMethodSelected = true;\n                            onPaymentSelect(orderReference);\n                        })\n                        .catch(onError);\n                },\n                onReady: orderReference => {\n                    resolve();\n                    onReady(orderReference);\n                },\n            };\n\n            if (!this._getOrderReferenceId()) {\n                walletOptions.onReady = orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                };\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.Wallet(walletOptions);\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeBillingAddress(): Promise<InternalCheckoutSelectors> {\n        const referenceId = this._getOrderReferenceId();\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.initializeBilling(methodId, { referenceId })\n        )\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.billing && amazon.billing.address;\n                const billingAddress = state.billingAddress.getBillingAddress();\n                const internalBillingAddress = billingAddress && mapToInternalAddress(billingAddress);\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, internalBillingAddress || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._billingAddressActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            });\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n\n    private _processPaymentWith3ds(sellerId: string, referenceId: string, methodId: string, useStoreCredit: boolean, options: PaymentRequestOptions): Promise<never> {\n        return new Promise((_, reject) => {\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n            }\n\n            return this._window.OffAmazonPayments.initConfirmationFlow(\n                sellerId,\n                referenceId,\n                (confirmationFlow: AmazonPayConfirmationFlow) => {\n                    return this._store.dispatch(\n                        this._orderActionCreator.submitOrder({useStoreCredit}, options)\n                    )\n                        .then(() => this._store.dispatch(\n                            this._remoteCheckoutActionCreator.initializePayment(methodId, {\n                                referenceId,\n                                useStoreCredit,\n                            }))\n                        )\n                        .then(() => {\n                            confirmationFlow.success();\n\n                            return new Promise<never>(() => {});\n                        })\n                        .catch(error => {\n                            confirmationFlow.error();\n\n                            return reject(error);\n                        });\n                }\n            );\n        });\n    }\n}\n","export interface OverlayOptions {\n    background?: string;\n    id?: string;\n    transitionDuration?: number;\n}\n\nexport interface OverlayShowOptions {\n    onClick?(event: MouseEvent): void;\n}\n\nexport default class Overlay {\n    private _element: HTMLElement;\n    private _unregisterClick?: () => void;\n\n    constructor(options?: OverlayOptions) {\n        this._element = this._createElement(options);\n    }\n\n    show(options?: OverlayShowOptions): void {\n        if (this._element.parentElement) {\n            return;\n        }\n\n        this._registerClick(options);\n\n        document.body.appendChild(this._element);\n\n        // Fade In\n        setTimeout(() => this._element.style.opacity = '1');\n    }\n\n    remove(): void {\n        if (!this._element.parentElement) {\n            return;\n        }\n\n        if (this._unregisterClick) {\n            this._unregisterClick();\n        }\n\n        this._removeAfterTransition();\n\n        setTimeout(() => this._element.style.opacity = '0');\n    }\n\n    private _createElement(options?: OverlayOptions): HTMLElement {\n        const element = document.createElement('div');\n        const {\n            background = 'rgba(0, 0, 0, 0.8)',\n            id = null,\n            transitionDuration = 400,\n        } = options || {};\n\n        element.style.background = background;\n        element.style.display = 'block';\n        element.style.height = '100%';\n        element.style.left = '0px';\n        element.style.opacity = '0';\n        element.style.position = 'fixed';\n        element.style.top = '0px';\n        element.style.transition = `opacity ${transitionDuration}ms ease-out`;\n        element.style.width = '100%';\n        element.style.zIndex = '2147483647';\n\n        if (id) {\n            element.id = id;\n        }\n\n        return element;\n    }\n\n    private _registerClick(options?: OverlayShowOptions): void {\n        if (this._unregisterClick) {\n            this._unregisterClick();\n        }\n\n        if (options && options.onClick) {\n            const { onClick } = options;\n\n            this._element.addEventListener('click', onClick);\n\n            this._unregisterClick = () => {\n                this._element.removeEventListener('click', onClick);\n                this._unregisterClick = undefined;\n            };\n        }\n    }\n\n    private _removeAfterTransition(): void {\n        const handeTransition: (event: Event) => void = event => {\n            // NOTE: `event` is not correctly typed in this version of TS\n            if ((event as TransitionEvent).propertyName !== 'opacity') {\n                return;\n            }\n\n            if (this._element.parentElement) {\n                this._element.parentElement.removeChild(this._element);\n            }\n\n            this._element.removeEventListener('transitionend', handeTransition);\n        };\n\n        this._element.addEventListener('transitionend', handeTransition);\n    }\n}\n","export default class CancellablePromise<T> {\n    promise: Promise<T>;\n    cancel!: (reason?: any) => void;\n\n    constructor(promise: Promise<T>) {\n        const cancellable = new Promise<T>((_, reject) => {\n            this.cancel = reject;\n        });\n\n        this.promise = Promise.race([promise, cancellable]);\n    }\n}\n","import { Address } from '../../../address';\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { Overlay } from '../../../common/overlay';\nimport { CancellablePromise } from '../../../common/utility';\nimport { OrderPaymentRequestBody } from '../../../order';\nimport { PaymentMethodCancelledError } from '../../errors';\nimport { CreditCardInstrument, NonceInstrument } from '../../payment';\n\nimport { BraintreePaypal, BraintreeRequestData, BraintreeShippingAddressOverride, BraintreeTokenizePayload, BraintreeVerifyPayload } from './braintree';\nimport { BraintreePaymentInitializeOptions, BraintreeThreeDSecureOptions } from './braintree-payment-options';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\n\nexport interface PaypalConfig {\n    amount: number;\n    currency: string;\n    locale: string;\n    offerCredit?: boolean;\n    shippingAddressOverride?: BraintreeShippingAddressOverride;\n    shouldSaveInstrument?: boolean;\n}\n\nexport default class BraintreePaymentProcessor {\n    private _threeDSecureOptions?: BraintreeThreeDSecureOptions;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _overlay: Overlay\n    ) {}\n\n    initialize(clientToken: string, options?: BraintreePaymentInitializeOptions): void {\n        this._braintreeSDKCreator.initialize(clientToken);\n        this._threeDSecureOptions = options && options.threeDSecure;\n    }\n\n    preloadPaypal(): Promise<BraintreePaypal> {\n        return this._braintreeSDKCreator.getPaypal();\n    }\n\n    tokenizeCard(payment: OrderPaymentRequestBody, billingAddress: Address): Promise<NonceInstrument> {\n        const { paymentData } = payment;\n        const requestData = this._mapToCreditCard(paymentData as CreditCardInstrument, billingAddress);\n\n        return this._braintreeSDKCreator.getClient()\n            .then(client => client.request(requestData))\n            .then(({ creditCards }) => ({\n                nonce: creditCards[0].nonce,\n            }));\n    }\n\n    paypal({ shouldSaveInstrument, ...config }: PaypalConfig): Promise<BraintreeTokenizePayload> {\n        return this._braintreeSDKCreator.getPaypal()\n            .then(paypal => {\n                this._overlay.show({\n                    onClick: () => paypal.focusWindow(),\n                });\n\n                return paypal.tokenize({\n                    enableShippingAddress: true,\n                    flow: shouldSaveInstrument ? 'vault' : 'checkout',\n                    useraction: 'commit',\n                    ...config,\n                });\n            })\n            .then(response => {\n                this._overlay.remove();\n\n                return response;\n            })\n            .catch(error => {\n                this._overlay.remove();\n\n                throw error;\n            });\n    }\n\n    verifyCard(payment: OrderPaymentRequestBody, billingAddress: Address, amount: number): Promise<BraintreeVerifyPayload> {\n        if (!this._threeDSecureOptions) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { addFrame, removeFrame } = this._threeDSecureOptions;\n\n        return Promise.all([\n            this.tokenizeCard(payment, billingAddress),\n            this._braintreeSDKCreator.get3DS(),\n        ]).then(([paymentData, threeDSecure]) => {\n            const { nonce } = paymentData;\n            const cancelVerifyCard = () => threeDSecure.cancelVerifyCard()\n                .then(response => {\n                    verification.cancel(new PaymentMethodCancelledError());\n\n                    return response;\n                });\n\n            const verification = new CancellablePromise(\n                threeDSecure.verifyCard({\n                    addFrame: (error, iframe) => {\n                        addFrame(error, iframe, cancelVerifyCard);\n                    },\n                    amount,\n                    nonce,\n                    removeFrame,\n                })\n            );\n\n            return verification.promise;\n        });\n    }\n\n    getSessionId(): Promise<string | undefined> {\n        return this._braintreeSDKCreator.getDataCollector()\n            .then(({ deviceData }) => deviceData);\n    }\n\n    /**\n     * @deprecated Use getSessionId() and combine them in the consumer.\n     */\n    appendSessionId(processedPayment: Promise<NonceInstrument>): Promise<NonceInstrument> {\n        return processedPayment\n            .then(paymentData => Promise.all([paymentData, this._braintreeSDKCreator.getDataCollector()]))\n            .then(([paymentData, { deviceData }]) => ({ ...paymentData, deviceSessionId: deviceData }));\n    }\n\n    deinitialize(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    private _mapToCreditCard(creditCard: CreditCardInstrument, billingAddress: Address): BraintreeRequestData {\n        let streetAddress = billingAddress.address1;\n\n        if (billingAddress.address2) {\n            streetAddress = ` ${billingAddress.address2}`;\n        }\n\n        return {\n            data: {\n                creditCard: {\n                    cardholderName: creditCard.ccName,\n                    number: creditCard.ccNumber,\n                    cvv: creditCard.ccCvv,\n                    expirationDate: `${creditCard.ccExpiry.month}/${creditCard.ccExpiry.year}`,\n                    options: {\n                        validate: false,\n                    },\n                    billingAddress: {\n                        countryName: billingAddress.country,\n                        postalCode: billingAddress.postalCode,\n                        streetAddress,\n                    },\n                },\n            },\n            endpoint: 'payment_methods/credit_cards',\n            method: 'post',\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when a payment method experiences some kind of\n * failure (i.e.: its client library returns a rejected promise). And there is\n * no other error type that is more specific than this one.\n */\nexport default class PaymentMethodFailedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed because the client library of a payment method has thrown an unexpected error.');\n\n        this.name = 'PaymentMethodFailedError';\n        this.type = 'payment_method_client_invalid';\n    }\n}\n","import isVaultedInstrument from './is-vaulted-instrument';\nimport { CreditCardInstrument, PaymentInstrument } from './payment';\n\nexport default function isCreditCardLike(instrument: PaymentInstrument): instrument is CreditCardInstrument {\n    const card = instrument as CreditCardInstrument;\n\n    return !isVaultedInstrument(card) &&\n        typeof card.ccName === 'string' &&\n        typeof card.ccNumber === 'string' &&\n        typeof card.ccExpiry === 'object' &&\n        typeof card.ccExpiry.month === 'string' &&\n        typeof card.ccExpiry.year === 'string';\n    }\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodFailedError } from '../../errors';\nimport isCreditCardLike from '../../is-credit-card-like';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport Payment, { PaymentInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport BraintreePaymentProcessor from './braintree-payment-processor';\n\nexport default class BraintreeCreditCardPaymentStrategy implements PaymentStrategy {\n    private _is3dsEnabled?: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _braintreePaymentProcessor: BraintreePaymentProcessor\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(options.methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n                if (!paymentMethod || !paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._braintreePaymentProcessor.initialize(paymentMethod.clientToken, options.braintree);\n                this._is3dsEnabled = paymentMethod.config.is3dsEnabled;\n\n                return this._store.getState();\n            })\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(\n            this._orderActionCreator.submitOrder(order, options)\n        )\n            .then(state =>\n                state.payment.isPaymentDataRequired(order.useStoreCredit) && payment ?\n                    this._preparePaymentData(payment) :\n                    Promise.resolve(payment as Payment)\n            )\n            .then(payment =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment(payment))\n            )\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreePaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _handleError(error: Error): never {\n        if (error.name === 'BraintreeError') {\n            throw new PaymentMethodFailedError(error.message);\n        }\n\n        throw error;\n    }\n\n    private _isUsingVaulting(paymentData: PaymentInstrument): boolean {\n        if (isCreditCardLike(paymentData)) {\n            return Boolean(paymentData.shouldSaveInstrument);\n        }\n\n        return isVaultedInstrument(paymentData);\n    }\n\n    private _preparePaymentData(payment: OrderPaymentRequestBody): Promise<Payment> {\n        const { paymentData } = payment;\n        const state = this._store.getState();\n\n        if (paymentData && this._isUsingVaulting(paymentData)) {\n            return Promise.resolve(payment as Payment);\n        }\n\n        const order = state.order.getOrder();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!order) {\n            throw new MissingDataError(MissingDataErrorType.MissingOrder);\n        }\n\n        if (!billingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const tokenizedCard = this._is3dsEnabled ?\n            this._braintreePaymentProcessor.verifyCard(payment, billingAddress, order.orderAmount) :\n            this._braintreePaymentProcessor.tokenizeCard(payment, billingAddress);\n\n        return this._braintreePaymentProcessor.appendSessionId(tokenizedCard)\n            .then(paymentData => ({ ...payment, paymentData }));\n    }\n}\n","export const CardinalSignatureValidationErrors = [100004, 1010, 1011, 1020];\n\nexport interface CardinalSDK {\n    configure(params: CardinalConfiguration): void;\n    on(params: CardinalEventType, callback: CardinalEventMap[CardinalEventType]): void;\n    off(params: CardinalEventType): void;\n    setup<K extends keyof CardinalInitializationDataMap>(initializationType: K, initializationData: CardinalInitializationDataMap[K]): void;\n    trigger(event: CardinalTriggerEvents, data?: string): Promise<CardinalBinProcessResponse | void>;\n    continue(paymentBrand: CardinalPaymentBrand, continueObject: CardinalContinue, order: CardinalPartialOrder): void;\n    start(paymentBrand: CardinalPaymentBrand, order: CardinalPartialOrder, jwt?: string): void;\n}\n\nexport interface CardinalWindow extends Window {\n    Cardinal?: CardinalSDK;\n}\n\nexport interface CardinalEventMap {\n    [CardinalEventType.SetupCompleted](setupCompleteData: CardinalSetupCompletedData): void;\n    [CardinalEventType.Validated](data: CardinalValidatedData, jwt?: string): void;\n}\n\nexport type CardinalConfiguration = Partial<{\n    logging: {\n        level: string;\n    };\n    payment: {\n        view: string;\n        framework: string;\n        displayLoading: boolean;\n    };\n}>;\n\nexport interface CardinalSetupCompletedData {\n    sessionId: string;\n    modules: CardinalModuleState[];\n}\n\nexport interface CardinalModuleState {\n    loaded: boolean;\n    module: string;\n}\n\nexport enum CardinalInitializationType {\n    Init = 'init',\n    Complete = 'complete',\n    Confirm = 'confirm',\n}\n\nexport interface CardinalInitializationDataMap {\n    [CardinalInitializationType.Init]: CardinalInitTypeData;\n    [CardinalInitializationType.Complete]: CardinalCompleteTypeData;\n    [CardinalInitializationType.Confirm]: CardinalConfirmTypeData;\n}\n\nexport interface CardinalInitTypeData {\n    jwt: string;\n}\n\nexport interface CardinalCompleteTypeData {\n    Status: string;\n}\n\nexport interface CardinalConfirmTypeData {\n    jwt: string;\n    cardinalResponseJwt: string;\n}\n\nexport interface CardinalValidatedData {\n    ActionCode?: CardinalValidatedAction;\n    ErrorDescription: string;\n    ErrorNumber: number;\n    Validated: boolean;\n    Payment?: CardinalPayment;\n}\n\nexport interface CardinalPayment {\n    ExtendedData?: CardinalCCAExtendedData;\n    ProcessorTransactionId: string;\n    Type: CardinalPaymentType;\n}\n\nexport interface CardinalBinProcessResponse {\n    Status: boolean;\n}\n\nexport interface CardinalContinue {\n    AcsUrl: string;\n    Payload: string;\n}\n\nexport interface CardinalPartialOrder {\n    OrderDetails: CardinalOrderDetails;\n    Consumer?: CardinalConsumer;\n}\n\nexport interface CardinalConsumer {\n    Email1?: string;\n    Email2?: string;\n    ShippingAddress?: CardinalAddress;\n    BillingAddress?: CardinalAddress;\n    Account?: CardinalAccount;\n}\n\nexport interface CardinalAccount {\n    AccountNumber: number;\n    ExpirationMonth: number;\n    ExpirationYear: number;\n    NameOnAccount: string;\n    CardCode: number;\n}\n\nexport interface CardinalAddress {\n    FullName?: string;\n    FirstName: string;\n    MiddleName?: string;\n    LastName: string;\n    Address1: string;\n    Address2?: string;\n    Address3?: string;\n    City: string;\n    State: string;\n    PostalCode: string;\n    CountryCode: string;\n    Phone1?: string;\n    Phone2?: string;\n}\n\nexport interface CardinalOrderDetails {\n    OrderNumber: string;\n    Amount: number;\n    CurrencyCode: string;\n    OrderDescription?: string;\n    OrderChannel: string;\n    TransactionId?: string;\n}\n\nexport type CardinalCCAExtendedData = Partial<{\n    CAVV: string;\n    ECIFlag: string;\n    PAResStatus: string;\n    SignatureVerification: string;\n    XID: string;\n    UCAFIndicator: string;\n}>;\n\nexport enum CardinalEventType {\n    SetupCompleted = 'payments.setupComplete',\n    Validated = 'payments.validated',\n}\n\nexport enum CardinalValidatedAction {\n    Success = 'SUCCESS',\n    NoAction = 'NOACTION',\n    Failure = 'FAILURE',\n    Error = 'ERROR',\n}\n\nexport enum CardinalPaymentType {\n    CCA = 'CCA',\n    Paypal = 'Paypal',\n    Wallet = 'Wallet',\n    VisaCheckout = 'VisaCheckout',\n    ApplePay = 'ApplePay',\n    DiscoverWallet = 'DiscoverWallet',\n}\n\nexport enum CardinalTriggerEvents {\n    BinProcess = 'bin.process',\n}\n\nexport enum CardinalPaymentBrand {\n    CCA = 'cca',\n}\n\nexport enum CardinalSignatureVerification {\n    Yes = 'Y',\n    No = 'N',\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError, PaymentMethodFailedError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport Payment, { FormattedPayload, PaypalInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { BraintreeError } from './braintree';\nimport BraintreePaymentProcessor from './braintree-payment-processor';\nimport isBraintreeError from './is-braintree-error';\nimport mapToBraintreeShippingAddressOverride from './map-to-braintree-shipping-address-override';\n\nexport default class BraintreePaypalPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _braintreePaymentProcessor: BraintreePaymentProcessor,\n        private _credit: boolean = false\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintree: braintreeOptions, methodId } = options;\n\n        this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(methodId);\n\n        if (this._paymentMethod && this._paymentMethod.nonce) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._braintreePaymentProcessor.initialize(this._paymentMethod.clientToken, braintreeOptions);\n\n                return this._braintreePaymentProcessor.preloadPaypal();\n            })\n            .then(() => this._store.getState())\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return (payment ? this._preparePaymentData(payment, order.useStoreCredit) : Promise.resolve(payment))\n            .then(payment => Promise.all([payment, this._store.dispatch(this._orderActionCreator.submitOrder(order, options))]))\n            .then(([payment]) => this._store.dispatch(this._paymentActionCreator.submitPayment(payment)))\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreePaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _handleError(error: BraintreeError | Error): never {\n        if (!isBraintreeError(error)) {\n            throw error;\n        }\n\n        if (error.code === 'PAYPAL_POPUP_CLOSED') {\n            throw new PaymentMethodCancelledError(error.message);\n        }\n\n        throw new PaymentMethodFailedError(error.message);\n    }\n\n    private _preparePaymentData(payment: OrderPaymentRequestBody, useStoreCredit?: boolean): Promise<Payment> {\n        const state = this._store.getState();\n        const grandTotal = state.checkout.getOutstandingBalance(useStoreCredit);\n        const config = state.config.getStoreConfig();\n\n        if (!grandTotal) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { currency, storeProfile: { storeLanguage } } = config;\n        const { nonce, config: { isVaultingEnabled } } = this._paymentMethod;\n        const { paymentData = {} } = payment;\n\n        if (nonce) {\n            return Promise.resolve({ ...payment, paymentData: this._formattedPayload(nonce) });\n        }\n\n        if (isVaultedInstrument(paymentData)) {\n            if (!isVaultingEnabled) {\n                throw new InvalidArgumentError('Vaulting is disabled but a vaulted instrument was being used for this transaction');\n            }\n\n            return Promise.resolve(payment);\n        }\n\n        if (paymentData.shouldSaveInstrument && !isVaultingEnabled) {\n            throw new InvalidArgumentError('Vaulting is disabled but shouldSaveInstrument is set to true');\n        }\n\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n\n        const shippingAddressOverride = shippingAddress ? mapToBraintreeShippingAddressOverride(shippingAddress) : undefined;\n\n        return Promise.all([\n            this._braintreePaymentProcessor.paypal({\n                amount: grandTotal,\n                locale: storeLanguage,\n                currency: currency.code,\n                offerCredit: this._credit,\n                shippingAddressOverride,\n                shouldSaveInstrument: paymentData.shouldSaveInstrument || false,\n            }),\n            this._braintreePaymentProcessor.getSessionId(),\n        ]).then(([\n            { nonce, details },\n            sessionId,\n        ]) => ({\n            ...payment,\n            paymentData: this._formattedPayload(nonce, details.email, sessionId, paymentData.shouldSaveInstrument),\n        }));\n    }\n\n    private _formattedPayload(token: string, email?: string, sessionId?: string, vaultPaymentInstrument?: boolean): FormattedPayload<PaypalInstrument> {\n        return {\n            formattedPayload: {\n                vault_payment_instrument: vaultPaymentInstrument || null,\n                device_info: sessionId || null,\n                paypal_account: {\n                    token,\n                    email: email || null,\n                },\n            },\n        };\n    }\n}\n","import { BraintreeError } from './braintree';\n\nexport default function isBraintreeError(error: BraintreeError | Error): error is BraintreeError {\n    return error.name === 'BraintreeError';\n}\n","import { Address } from '../../../address';\n\nimport { BraintreeShippingAddressOverride } from './braintree';\n\nexport default function mapToBraintreeShippingAddressOverride(address: Address): BraintreeShippingAddressOverride {\n    return {\n        recipientName: `${address.firstName} ${address.lastName}`,\n        line1: address.address1,\n        line2: address.address2,\n        city: address.city,\n        state: address.stateOrProvinceCode,\n        postalCode: address.postalCode,\n        countryCode: address.countryCode,\n        phone: address.phone,\n    };\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentMethodFailedError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport BraintreeVisaCheckoutPaymentProcessor from './braintree-visacheckout-payment-processor';\nimport { VisaCheckoutPaymentSuccessPayload } from './visacheckout';\nimport VisaCheckoutScriptLoader from './visacheckout-script-loader';\n\nexport default class BraintreeVisaCheckoutPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _braintreeVisaCheckoutPaymentProcessor: BraintreeVisaCheckoutPaymentProcessor,\n        private _visaCheckoutScriptLoader: VisaCheckoutScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintreevisacheckout: visaCheckoutOptions, methodId } = options;\n\n        if (!visaCheckoutOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.braintreevisacheckout\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const checkout = state.checkout.getCheckout();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const {\n                    onError = () => {},\n                    onPaymentSelect = () => {},\n                } = visaCheckoutOptions;\n\n                const initOptions = {\n                    locale: storeConfig.storeProfile.storeLanguage,\n                    collectShipping: false,\n                    subtotal: checkout.subtotal,\n                    currencyCode: storeConfig.currency.code,\n                };\n\n                return Promise.all([\n                    this._visaCheckoutScriptLoader.load(this._paymentMethod.config.testMode),\n                    this._braintreeVisaCheckoutPaymentProcessor.initialize(this._paymentMethod.clientToken, initOptions),\n                ])\n                .then(([visaCheckout, visaInitOptions]) => {\n                    visaCheckout.init(visaInitOptions);\n                    visaCheckout.on('payment.success', (paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) =>\n                        this._paymentInstrumentSelected(paymentSuccessPayload)\n                            .then(() => onPaymentSelect())\n                            .catch(error => onError(error))\n                    );\n                    visaCheckout.on('payment.error', (_, error) => onError(error));\n                });\n            })\n            .then(() => this._store.getState());\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData || !this._paymentMethod.initializationData.nonce) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { nonce } = this._paymentMethod.initializationData;\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData: { nonce } }))\n            )\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreeVisaCheckoutPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _paymentInstrumentSelected(paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) {\n        const state = this._store.getState();\n\n        if (!this._paymentMethod) {\n            throw new Error('Payment method not initialized');\n        }\n\n        const { id: methodId } = this._paymentMethod;\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._braintreeVisaCheckoutPaymentProcessor.handleSuccess(\n                paymentSuccessPayload,\n                state.shippingAddress.getShippingAddress(),\n                state.billingAddress.getBillingAddress()\n            )\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _handleError(error: Error): never {\n        if (error.name === 'BraintreeError') {\n            throw new PaymentMethodFailedError(error.message);\n        }\n\n        throw error;\n    }\n}\n","import { InvalidArgumentError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the selected instrument is not in the list\n * of valid instruments or the type doesn't match the expected type.\n */\nexport default class PaymentInstrumentNotValidError extends InvalidArgumentError {\n    constructor(message?: string) {\n        super(message || 'The selected instrument is either missing or not a valid type.');\n\n        this.name = 'PaymentInstrumentNotValidError';\n    }\n}\n","import { find, some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, RequestError } from '../../../common/error/errors';\nimport { PaymentInstrumentNotValidError } from '../../errors';\nimport isCreditCardLike from '../../is-credit-card-like';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport Payment from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\n\nimport { CardinalClient, CardinalOrderData, CardinalSupportedPaymentInstrument } from './index';\n\nexport default class CardinalThreeDSecureFlow {\n    private _paymentMethod?: PaymentMethod;\n    private _clientToken?: string;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _cardinalClient: CardinalClient\n    ) {}\n\n    prepare(methodId: string): Promise<void> {\n        if (this._clientToken) {\n            return Promise.resolve();\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod || !this._paymentMethod.config) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                return this._cardinalClient.initialize(methodId, this._paymentMethod.config.testMode);\n            })\n            .then(() => {\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._clientToken = this._paymentMethod.clientToken;\n\n                return this._cardinalClient.configure(this._clientToken);\n            });\n    }\n\n    start(payment: Payment): Promise<InternalCheckoutSelectors> {\n        if (!payment.paymentData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        if (!isCreditCardLike(payment.paymentData) && !isVaultedInstrument(payment.paymentData)) {\n            throw new InvalidArgumentError();\n        }\n\n        const paymentData = payment.paymentData;\n\n        return this._cardinalClient.runBinProcess(this._getBinNumber(paymentData))\n            .then(() => {\n                if (!this._clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                payment = {\n                    ...payment,\n                    paymentData: {\n                        ...paymentData,\n                        threeDSecure: { token: this._clientToken },\n                    },\n                };\n\n                return this._store.dispatch(this._paymentActionCreator.submitPayment(payment));\n            })\n            .catch(error => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, {code: 'three_d_secure_required'})) {\n                    return Promise.reject(error);\n                }\n\n                return this._cardinalClient.getThreeDSecureData(\n                    error.body.three_ds_result,\n                    this._getOrderData(paymentData)\n                )\n                .then(threeDSecure =>\n                    this._store.dispatch(this._paymentActionCreator.submitPayment({\n                        ...payment,\n                        paymentData: {\n                            ...paymentData,\n                            threeDSecure,\n                        },\n                    }))\n                );\n            });\n    }\n\n    private _getBinNumber(payment: CardinalSupportedPaymentInstrument): string {\n        if (!isVaultedInstrument(payment)) {\n            return payment.ccNumber;\n        }\n\n        const instruments = this._store.getState().instruments.getInstruments();\n        const { instrumentId: bigpayToken } = payment;\n\n        const entry = find(instruments, { bigpayToken });\n\n        if (!entry) {\n            throw new PaymentInstrumentNotValidError();\n        }\n\n        return entry.iin;\n    }\n\n    private _getOrderData(paymentData: CardinalSupportedPaymentInstrument): CardinalOrderData {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddress();\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n        const checkout = state.checkout.getCheckout();\n        const order = state.order.getOrder();\n\n        if (!billingAddress || !billingAddress.email) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!order) {\n            throw new MissingDataError(MissingDataErrorType.MissingOrder);\n        }\n\n        const payment: CardinalOrderData = {\n            billingAddress,\n            shippingAddress,\n            currencyCode: checkout.cart.currency.code,\n            id: order.orderId.toString(),\n            amount: checkout.cart.cartAmount,\n        };\n\n        if (isCreditCardLike(paymentData)) {\n            payment.paymentData = paymentData;\n        }\n\n        return payment;\n    }\n}\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethodFailedError } from '../../errors';\nimport { CreditCardInstrument, ThreeDSecureToken, VaultedInstrument } from '../../payment';\nimport { ThreeDsResult } from '../../payment-response-body';\n\nimport { CardinalAccount, CardinalAddress, CardinalConsumer, CardinalEventType, CardinalInitializationType, CardinalPartialOrder, CardinalPaymentBrand, CardinalSignatureValidationErrors, CardinalSignatureVerification, CardinalSDK, CardinalTriggerEvents, CardinalValidatedAction, CardinalValidatedData } from './cardinal';\nimport CardinalScriptLoader from './cardinal-script-loader';\n\nexport type CardinalSupportedPaymentInstrument = CreditCardInstrument | VaultedInstrument;\n\nexport interface CardinalOrderData {\n    billingAddress: BillingAddress;\n    shippingAddress?: Address;\n    currencyCode: string;\n    id: string;\n    amount: number;\n    paymentData?: CreditCardInstrument;\n}\n\nexport default class CardinalClient {\n    private _sdk?: Promise<CardinalSDK>;\n\n    constructor(\n        private _scriptLoader: CardinalScriptLoader\n    ) {}\n\n    initialize(provider: string, testMode?: boolean): Promise<void> {\n        if (!this._sdk) {\n            this._sdk = this._scriptLoader.load(provider, testMode);\n        }\n\n        return this._sdk.then(() => {});\n    }\n\n    configure(clientToken: string): Promise<void> {\n        return this._getClientSDK()\n            .then(client => new Promise<void>((resolve, reject) => {\n                client.on(CardinalEventType.SetupCompleted, () => {\n                    client.off(CardinalEventType.SetupCompleted);\n                    client.off(CardinalEventType.Validated);\n\n                    resolve();\n                });\n\n                client.on(CardinalEventType.Validated, (data: CardinalValidatedData) => {\n                    client.off(CardinalEventType.SetupCompleted);\n                    client.off(CardinalEventType.Validated);\n\n                    switch (data.ActionCode) {\n                        case CardinalValidatedAction.Error:\n                            if (includes(CardinalSignatureValidationErrors, data.ErrorNumber)) {\n                                reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n                            }\n                            reject(new PaymentMethodFailedError(data.ErrorDescription));\n                            break;\n                    }\n                });\n\n                client.setup(CardinalInitializationType.Init, {\n                    jwt: clientToken,\n                });\n            }));\n    }\n\n    runBinProcess(binNumber: string): Promise<void> {\n        return this._getClientSDK()\n            .then(client => client.trigger(CardinalTriggerEvents.BinProcess, binNumber).catch(() => {}))\n            .then(result => {\n                if (!result || !result.Status) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n            });\n    }\n\n    getThreeDSecureData(threeDSecureData: ThreeDsResult, orderData: CardinalOrderData): Promise<ThreeDSecureToken> {\n        return this._getClientSDK()\n            .then(client => {\n                return new Promise<ThreeDSecureToken>((resolve, reject) => {\n                    client.on(CardinalEventType.Validated, (data: CardinalValidatedData, jwt?: string) => {\n                        client.off(CardinalEventType.Validated);\n                        if (!jwt) {\n                            return reject(new PaymentMethodFailedError(data.ErrorDescription ? data.ErrorDescription : 'An error was encountered while processing the transaction.'));\n                        }\n\n                        if (!data.ActionCode) {\n                            return resolve({ token: jwt });\n                        }\n\n                        switch (data.ActionCode) {\n                            case CardinalValidatedAction.Success:\n                                return resolve({ token: jwt });\n                            case CardinalValidatedAction.NoAction:\n                                if (data.ErrorNumber > 0) {\n                                    return reject(new PaymentMethodFailedError(data.ErrorDescription));\n                                } else if (!data.Payment || !data.Payment.ExtendedData || data.Payment.ExtendedData.SignatureVerification !== CardinalSignatureVerification.Yes) {\n                                    return reject(new PaymentMethodFailedError('Transaction signature could not be validated.'));\n                                }\n\n                                return resolve({ token: jwt });\n                            case CardinalValidatedAction.Failure:\n                                return reject(new PaymentMethodFailedError('User failed authentication or an error was encountered while processing the transaction.'));\n                            case CardinalValidatedAction.Error:\n                                return reject(new PaymentMethodFailedError(data.ErrorDescription));\n                        }\n                    });\n\n                    const continueObject = {\n                        AcsUrl: threeDSecureData.acs_url,\n                        Payload: threeDSecureData.merchant_data,\n                    };\n\n                    const partialOrder = this._mapToPartialOrder(orderData, threeDSecureData.payer_auth_request);\n\n                    client.continue(CardinalPaymentBrand.CCA, continueObject, partialOrder);\n                });\n            });\n    }\n\n    private _mapToPartialOrder(orderData: CardinalOrderData, transactionId: string): CardinalPartialOrder {\n        const consumer: CardinalConsumer = {\n            BillingAddress: this._mapToCardinalAddress(orderData.billingAddress),\n        };\n\n        if (orderData.paymentData) {\n            consumer.Account = this._mapToCardinalAccount(orderData.paymentData);\n        }\n\n        if (orderData.billingAddress.email) {\n            consumer.Email1 = orderData.billingAddress.email;\n        }\n\n        if (orderData.shippingAddress) {\n            consumer.ShippingAddress = this._mapToCardinalAddress(orderData.shippingAddress);\n        }\n\n        return  {\n            Consumer: consumer,\n            OrderDetails: {\n                OrderNumber: orderData.id,\n                Amount: orderData.amount,\n                CurrencyCode: orderData.currencyCode,\n                OrderChannel: 'S',\n                TransactionId: transactionId,\n            },\n        };\n    }\n\n    private _mapToCardinalAccount(paymentData: CreditCardInstrument): CardinalAccount {\n        return {\n            AccountNumber: Number(paymentData.ccNumber),\n            ExpirationMonth: Number(paymentData.ccExpiry.month),\n            ExpirationYear: Number(paymentData.ccExpiry.year),\n            NameOnAccount: paymentData.ccName,\n            CardCode: Number(paymentData.ccCvv),\n        };\n    }\n\n    private _mapToCardinalAddress(address: Address): CardinalAddress {\n        const cardinalAddress: CardinalAddress = {\n            FirstName: address.firstName,\n            LastName: address.lastName,\n            Address1: address.address1,\n            City: address.city,\n            State: address.stateOrProvince,\n            PostalCode: address.postalCode,\n            CountryCode: address.countryCode,\n        };\n\n        if (address.address2) {\n            cardinalAddress.Address2 = address.address2;\n        }\n\n        if (address.phone) {\n            cardinalAddress.Phone1 = address.phone;\n        }\n\n        return cardinalAddress;\n    }\n\n    private _getClientSDK(): Promise<CardinalSDK> {\n        if (!this._sdk) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._sdk;\n    }\n}\n","export enum ChasePayEventType {\n    StartCheckout = 'startCheckout',\n    CompleteCheckout = 'completeCheckout',\n    CancelCheckout = 'cancelCheckout',\n}\n\nexport interface ChasePayEventMap {\n    [ChasePayEventType.StartCheckout](digitalSessionId: string): void;\n    [ChasePayEventType.CompleteCheckout](payload: ChasePaySuccessPayload): void;\n    [ChasePayEventType.CancelCheckout](): void;\n}\n\nexport interface ChasePayHostWindow extends Window {\n    JPMC?: JPMC;\n}\n\nexport interface JPMC {\n    ChasePay: ChasePay;\n}\n\nexport interface ChasePaySuccessPayload {\n    sessionToken: string;\n}\n\nexport interface ChasePayInsertOptions {\n    color?: string;\n    containers?: string[];\n    height?: number;\n    width?: number;\n}\n\nexport interface ChasePayConfigureOptions {\n    language?: string;\n    zindex?: number;\n    sessionWarningTime?: number;\n    sessionTimeoutTime?: number;\n}\n\nexport interface ChasePay {\n    EventType: {\n        START_CHECKOUT: ChasePayEventType.StartCheckout;\n        COMPLETE_CHECKOUT: ChasePayEventType.CompleteCheckout;\n        CANCEL_CHECKOUT: ChasePayEventType.CancelCheckout;\n    };\n    isChasePayUp(): boolean;\n    insertButtons(options: ChasePayInsertOptions): void;\n    insertBrandings(options: ChasePayInsertOptions): void;\n    startCheckout(digitalSessionId?: string): void;\n    showLoadingAnimation(): void;\n    configure(options: ChasePayConfigureOptions): void;\n    on<ChasePayEventType extends keyof ChasePayEventMap>(eventType: ChasePayEventType, callback: ChasePayEventMap[ChasePayEventType]): {};\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { CardinalSDK, CardinalWindow } from './cardinal';\n\nconst SDK_TEST_URL = 'https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js';\nconst SDK_PROD_URL = 'https://songbird.cardinalcommerce.com/edge/v1/songbird.js';\n\nexport default class CardinalScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: CardinalWindow = window\n    ) {}\n\n    load(provider: string, testMode?: boolean): Promise<CardinalSDK> {\n        const url = testMode ? SDK_TEST_URL : SDK_PROD_URL;\n\n        return this._scriptLoader\n            .loadScript(url + '?v=' + provider)\n            .then(() => {\n                if (!this._window.Cardinal) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Cardinal;\n            });\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentMethodCancelledError } from '../../errors';\nimport Payment from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\nimport { WepayRiskClient } from '../wepay';\n\nimport { ChasePay, ChasePayEventType, ChasePaySuccessPayload } from './chasepay';\nimport ChasePayInitializeOptions from './chasepay-initialize-options';\nimport ChasePayScriptLoader from './chasepay-script-loader';\n\nexport default class ChasePayPaymentStrategy implements PaymentStrategy {\n    private _chasePayClient?: ChasePay;\n    private _methodId!: string;\n    private _walletButton?: HTMLElement;\n    private _walletEvent$: Subject<{ type: ChasePayEventType }>;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _requestSender: RequestSender,\n        private _chasePayScriptLoader: ChasePayScriptLoader,\n        private _wepayRiskClient: WepayRiskClient\n    ) {\n        this._walletEvent$ = new Subject();\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._methodId = options.methodId;\n\n        if (!options.chasepay) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.chasepay\" argument is not provided.');\n        }\n\n        const walletButton = options.chasepay.walletButton && document.getElementById(options.chasepay.walletButton);\n\n        if (walletButton) {\n            this._walletButton = walletButton;\n            this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n        }\n\n        return this._configureWallet(options.chasepay)\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n        this._chasePayClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._getPayment()\n            .catch(error => {\n                if (error.subtype === MissingDataErrorType.MissingPayment) {\n                    return this._displayWallet()\n                        .then(() => this._getPayment());\n                }\n\n                throw error;\n            })\n            .then(payment =>\n                this._createOrder(payment, payload.useStoreCredit, options)\n            );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _configureWallet(options: ChasePayInitializeOptions): Promise<void> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        return this._chasePayScriptLoader.load(paymentMethod.config.testMode)\n            .then(({ ChasePay }) => {\n                this._chasePayClient = ChasePay;\n\n                if (options.logoContainer && document.getElementById(options.logoContainer)) {\n                    this._chasePayClient.insertBrandings({\n                        color: 'white',\n                        containers: [options.logoContainer],\n                    });\n                }\n\n                this._chasePayClient.configure({\n                    language: storeConfig.storeProfile.storeLanguage,\n                });\n\n                this._chasePayClient.on(ChasePayEventType.CancelCheckout, () => {\n                    this._walletEvent$.next({ type: ChasePayEventType.CancelCheckout });\n\n                    if (options.onCancel) {\n                        options.onCancel();\n                    }\n                });\n\n                this._chasePayClient.on(ChasePayEventType.CompleteCheckout, (payload: ChasePaySuccessPayload) => {\n                    this._setSessionToken(payload.sessionToken)\n                        .then(() => {\n                            this._walletEvent$.next({ type: ChasePayEventType.CompleteCheckout });\n\n                            if (options.onPaymentSelect) {\n                                options.onPaymentSelect();\n                            }\n                        });\n                });\n            });\n    }\n\n    private _displayWallet(): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n                .then(state => {\n                    const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n                    if (!this._chasePayClient) {\n                        throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                    }\n\n                    if (!paymentMethod) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    this._chasePayClient.showLoadingAnimation();\n                    this._chasePayClient.startCheckout(paymentMethod.initializationData.digitalSessionId);\n                });\n\n            // Wait for payment selection\n            return new Promise((resolve, reject) => {\n                this._walletEvent$\n                    .pipe(take(1))\n                    .subscribe((event: { type: ChasePayEventType }) => {\n                        if (event.type === ChasePayEventType.CancelCheckout) {\n                            reject(new PaymentMethodCancelledError());\n                        } else if (event.type === ChasePayEventType.CompleteCheckout) {\n                            resolve();\n                        }\n                    });\n            });\n        }, { methodId: this._methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _setSessionToken(sessionToken: string): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n        const merchantRequestId = paymentMethod && paymentMethod.initializationData.merchantRequestId;\n\n        return this._requestSender.post('checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            },\n            body: {\n                action: 'set_external_checkout',\n                provider: this._methodId,\n                sessionToken,\n                merchantRequestId,\n            },\n        })\n            // Re-hydrate checkout data\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId)),\n            ]))\n            .then(() => this._store.getState());\n    }\n\n    private _getPayment(): Promise<Payment> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n            .then(() => {\n                if (this._methodId === 'wepay') {\n                    return this._wepayRiskClient.initialize()\n                        .then(client => client.getRiskToken());\n                }\n\n                return '';\n            })\n            .then(riskToken => {\n                const state = this._store.getState();\n                const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!paymentMethod.initializationData.paymentCryptogram) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPayment);\n                }\n\n                const paymentData = {\n                    method: this._methodId,\n                    cryptogramId: paymentMethod.initializationData.paymentCryptogram,\n                    eci: paymentMethod.initializationData.eci,\n                    transactionId: btoa(paymentMethod.initializationData.reqTokenId),\n                    ccExpiry: {\n                        month: paymentMethod.initializationData.expDate.toString().substr(0, 2),\n                        year: paymentMethod.initializationData.expDate.toString().substr(2, 2),\n                    },\n                    ccNumber: paymentMethod.initializationData.accountNum,\n                    accountMask: paymentMethod.initializationData.accountMask,\n                    extraData: riskToken ? { riskToken } : undefined,\n                };\n\n                return {\n                    methodId: this._methodId,\n                    paymentData,\n                };\n            });\n    }\n\n    private _createOrder(payment: Payment, useStoreCredit?: boolean, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit }, options))\n            .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment(payment)));\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): void {\n        event.preventDefault();\n\n        this._displayWallet();\n    }\n}\n","export default interface SquarePaymentForm {\n    build(): void;\n    requestCardNonce(): void;\n    setPostalCode(postalCode: string): void;\n}\n\nexport type SquarePaymentFormConstructor = new(options: SquareFormOptions) => SquarePaymentForm;\n\nexport interface SquareFormOptions {\n    applicationId: string;\n    env: string;\n    locationId: string;\n    inputClass?: string;\n    inputStyles?: string[];\n    callbacks?: SquareFormCallbacks;\n    cardNumber: SquareFormElement;\n    cvv: SquareFormElement;\n    expirationDate: SquareFormElement;\n    postalCode: SquareFormElement;\n    masterpass: SquareFormElement;\n}\nexport interface LineItem {\n    label: string;\n    amount: string;\n    pending: boolean;\n}\n\nexport interface SquarePaymentRequest {\n    requestShippingAddress: boolean;\n    requestBillingInfo: boolean;\n    shippingContact?: Contact;\n    countryCode: string;\n    currencyCode: string;\n    lineItems?: LineItem[];\n    total: LineItem;\n}\n\nexport interface NonceGenerationError {\n    type: string;\n    message: string;\n    field: string;\n}\n\nexport interface CardData {\n    card_brand: CardBrand;\n    last_4: number;\n    exp_month: number;\n    exp_year: number;\n    billing_postal_code: string;\n    digital_wallet_type: DigitalWalletType;\n}\n\nexport interface Contact {\n    familyName: string;\n    givenName: string;\n    email: string;\n    country: string;\n    countryName: string;\n    region: string;\n    city: string;\n    addressLines: string[];\n    postalCode: string;\n    phone: string;\n}\n\nexport enum CardBrand {\n    americanExpress = 'AMERICAN_EXPRESS',\n    discover = 'DISCOVER',\n    discoverDiners = 'DISCOVER_DINERS',\n    JCB = 'JCB',\n    masterCard = 'MASTERCARD',\n    unionPay = 'CHINA_UNIONPAY',\n    unknown = 'OTHER_BRAND',\n    visa = 'VISA',\n    squareGift = 'SQUARE_GIFT_CARD',\n}\n\nexport enum DigitalWalletType {\n    applePay = 'APPLEPAY',\n    masterpass = 'MASTERPASS',\n    none = 'NONE',\n}\n\n/**\n * Configures any form element provided by Square payment.\n */\nexport interface SquareFormElement {\n    /**\n     * The ID of the container which the form element should insert into.\n     */\n    elementId: string;\n\n    /**\n     * The placeholder text to use for the form element, if provided.\n     */\n    placeholder?: string;\n}\n\nexport interface SquareFormCallbacks {\n    paymentFormLoaded?(form: SquarePaymentForm): void;\n    unsupportedBrowserDetected?(): void;\n    cardNonceResponseReceived?(\n        errors?: NonceGenerationError[],\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact): void;\n    methodsSupported?(methods: { [key: string]: boolean }): void;\n    createPaymentRequest?(): void;\n}\n\nexport type SquareFormFactory = (options: SquareFormOptions) => SquarePaymentForm;\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class ConvergePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _formPoster: FormPoster\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n            )\n            .catch(error => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                    return Promise.reject(error);\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    });\n                });\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class CreditCardPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n            );\n    }\n\n    finalize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(_options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CardinalThreeDSecureFlow } from '../cardinal';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class CyberSourcePaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _threeDSecureFlow: CardinalThreeDSecureFlow\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n        this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!this._paymentMethod.config.is3dsEnabled) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._threeDSecureFlow.prepare(methodId)\n            .then(() => this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => {\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                return this._paymentMethod.config.is3dsEnabled ?\n                    this._threeDSecureFlow.start(payment) :\n                    this._store.dispatch(this._paymentActionCreator.submitPayment(payment));\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { GooglePaymentData, PaymentMethodData } from './googlepay';\nimport GooglePayPaymentInitializeOptions from './googlepay-initialize-options';\nimport GooglePayPaymentProcessor from './googlepay-payment-processor';\n\nexport default class GooglePayPaymentStrategy implements PaymentStrategy {\n    private _googlePayOptions?: GooglePayPaymentInitializeOptions;\n    private _methodId?: string;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._methodId = options.methodId;\n\n        return this._googlePayPaymentProcessor.initialize(this._methodId)\n            .then(() => {\n                this._googlePayOptions = this._getGooglePayOptions(options);\n\n                if (!this._googlePayOptions) {\n                    throw new InvalidArgumentError('Unable to initialize payment because \"options.googlepay\" argument is not provided.');\n                }\n\n                const walletButton = this._googlePayOptions.walletButton && document.getElementById(this._googlePayOptions.walletButton);\n\n                if (walletButton) {\n                    this._walletButton = walletButton;\n                    this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n                }\n\n                return this._store.getState();\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._googlePayOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.googlepay\" argument is not provided.');\n        }\n\n        const {\n            onError = () => {},\n            onPaymentSelect = () => {},\n        } = this._googlePayOptions;\n\n        return Promise.resolve(this._getPayment())\n            .then(payment => {\n                if (!payment.paymentData.nonce || !payment.paymentData.cardInformation) {\n                    // TODO: Find a way to share the code with _handleWalletButtonClick method\n                    return this._googlePayPaymentProcessor.displayWallet()\n                        .then(paymentData => this._paymentInstrumentSelected(paymentData))\n                        .then(() => onPaymentSelect())\n                        .then(() => this._getPayment())\n                        .catch(error => {\n                            if (error.statusCode !== 'CANCELED') {\n                                onError(error);\n                            }\n                        });\n                }\n\n                return payment;\n            })\n            .then(() =>\n                this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit: payload.useStoreCredit }, options))\n                    .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment(this._getPayment())))\n            );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _paymentInstrumentSelected(paymentData: GooglePaymentData) {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const methodId = this._methodId;\n\n        // TODO: Revisit how we deal with GooglePaymentData after receiving it from Google\n        return this._googlePayPaymentProcessor.handleSuccess(paymentData)\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n    }\n\n    private _getGooglePayOptions(options: PaymentInitializeOptions): GooglePayPaymentInitializeOptions {\n        if (options.methodId === 'googlepaybraintree' && options.googlepaybraintree) {\n            return options.googlepaybraintree;\n        }\n\n        if (options.methodId === 'googlepaystripe' && options.googlepaystripe) {\n            return options.googlepaystripe;\n        }\n\n        throw new InvalidArgumentError();\n    }\n\n    private _getPayment(): PaymentMethodData {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!paymentMethod.initializationData.nonce) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        const paymentData = {\n            method: this._methodId,\n            nonce: paymentMethod.initializationData.nonce,\n            cardInformation: paymentMethod.initializationData.card_information,\n        };\n\n        return {\n            methodId: this._methodId,\n            paymentData,\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): Promise<InternalCheckoutSelectors> {\n        event.preventDefault();\n\n        if (!this._methodId || !this._googlePayOptions) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const methodId = this._methodId;\n\n        const {\n            onError = () => {},\n            onPaymentSelect = () => {},\n        } = this._googlePayOptions;\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._googlePayPaymentProcessor.displayWallet()\n                .then(paymentData => this._paymentInstrumentSelected(paymentData))\n                .then(() => onPaymentSelect())\n                .catch(error => {\n                    if (error.statusCode !== 'CANCELED') {\n                        onError(error);\n                    }\n                });\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n}\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport KlarnaCredit, { KlarnaAddress, KlarnaLoadResponse, KlarnaUpdateSessionParams } from './klarna-credit';\nimport KlarnaScriptLoader from './klarna-script-loader';\n\nexport default class KlarnaPaymentStrategy implements PaymentStrategy {\n    private _klarnaCredit?: KlarnaCredit;\n    private _unsubscribe?: (() => void);\n    private _supportedEUCountries = ['AT', 'DE', 'DK', 'FI', 'GB', 'NL', 'NO', 'SE', 'CH'];\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _klarnaScriptLoader: KlarnaScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._klarnaScriptLoader.load()\n            .then(klarnaCredit => { this._klarnaCredit = klarnaCredit; })\n            .then(() => {\n                this._unsubscribe = this._store.subscribe(\n                    state => {\n                        if (state.paymentStrategies.isInitialized(options.methodId)) {\n                            this._loadWidget(options);\n                        }\n                    },\n                    state => {\n                        const checkout = state.checkout.getCheckout();\n\n                        return checkout && checkout.outstandingBalance;\n                    }\n                );\n\n                return this._loadWidget(options);\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment\" argument is not provided.');\n        }\n\n        const { payment: { paymentData, ...paymentPayload } } = payload;\n\n        return this._authorize()\n            .then(({ authorization_token: authorizationToken }) => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializePayment(paymentPayload.methodId, { authorizationToken })\n            ))\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                    // Note: API currently doesn't support using Store Credit with Klarna.\n                    // To prevent deducting customer's store credit, set it as false.\n                    useStoreCredit: false,\n                }, options)\n            ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _loadWidget(options: PaymentInitializeOptions): Promise<KlarnaLoadResponse> {\n        if (!options.klarna) {\n            throw new InvalidArgumentError('Unable to load widget because \"options.klarna\" argument is not provided.');\n        }\n\n        const { methodId, klarna: { container, onLoad } } = options;\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise<KlarnaLoadResponse>(resolve => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!this._klarnaCredit || !paymentMethod.clientToken) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n\n                this._klarnaCredit.init({ client_token: paymentMethod.clientToken });\n\n                this._klarnaCredit.load({ container }, response => {\n                    if (onLoad) {\n                        onLoad(response);\n                    }\n                    resolve(response);\n                });\n            }));\n    }\n\n    private _getUpdateSessionData(billingAddress: BillingAddress, shippingAddress?: Address): KlarnaUpdateSessionParams {\n        if (!includes(this._supportedEUCountries, billingAddress.countryCode)) {\n            return {};\n        }\n\n        const data: KlarnaUpdateSessionParams = {\n            billing_address: this._mapToKlarnaAddress(billingAddress, billingAddress.email),\n        };\n\n        if (shippingAddress) {\n            data.shipping_address = this._mapToKlarnaAddress(shippingAddress, billingAddress.email);\n        }\n\n        return data;\n    }\n\n    private _mapToKlarnaAddress(address: Address, email?: string): KlarnaAddress {\n        const klarnaAddress: KlarnaAddress = {\n            street_address: address.address1,\n            city: address.city,\n            country: address.countryCode,\n            given_name: address.firstName,\n            family_name: address.lastName,\n            postal_code: address.postalCode,\n            region: address.stateOrProvince,\n            email,\n        };\n\n        if (address.address2) {\n            klarnaAddress.street_address2 = address.address2;\n        }\n\n        if (address.phone) {\n            klarnaAddress.phone = address.phone;\n        }\n\n        return klarnaAddress;\n    }\n\n    private _authorize(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n            const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n            if (!billingAddress) {\n                throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n            }\n\n            if (!this._klarnaCredit) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const updateSessionData = this._getUpdateSessionData(billingAddress, shippingAddress);\n\n            this._klarnaCredit.authorize(updateSessionData, res => {\n                if (res.approved) {\n                    return resolve(res);\n                }\n\n                if (res.show_form) {\n                    return reject(new PaymentMethodCancelledError());\n                }\n\n                reject(new PaymentMethodInvalidError());\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport KlarnaCredit from './klarna-credit';\nimport KlarnaWindow from './klarna-window';\n\nconst SDK_URL = '//credit.klarnacdn.net/lib/v1/api.js';\n\nexport default class KlarnaScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<KlarnaCredit> {\n        return this._scriptLoader.loadScript(SDK_URL)\n            .then(() => (window as unknown as KlarnaWindow).Klarna.Credit);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class LegacyPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport getCallbackUrl from './get-callback-url';\nimport { Masterpass, MasterpassCheckoutOptions } from './masterpass';\nimport MasterpassScriptLoader from './masterpass-script-loader';\n\nexport default class MasterpassPaymentStrategy implements PaymentStrategy {\n    private _masterpassClient?: Masterpass;\n    private _paymentMethod?: PaymentMethod;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n\n        this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._masterpassScriptLoader.load(this._paymentMethod.config.testMode)\n            .then(masterpass => {\n                this._masterpassClient = masterpass;\n\n                if (!options.masterpass) {\n                    throw new InvalidArgumentError('Unable to initialize payment because \"options.masterpass\" argument is not provided.');\n                }\n\n                const walletButton  = options.masterpass.walletButton && document.getElementById(options.masterpass.walletButton);\n\n                if (walletButton) {\n                    this._walletButton = walletButton;\n                    this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n                }\n\n                return this._store.getState();\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n        this._masterpassClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = payload;\n        const order = { useStoreCredit: payload.useStoreCredit };\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData || !this._paymentMethod.initializationData.gateway) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        // TODO: Refactor the API endpoint to return nonce in the right place.\n        const paymentData = this._paymentMethod.initializationData.paymentData;\n\n        // TODO: Redirect to Masterpass if nonce has not been generated yet. And then finalise the order when the shopper is redirected back to the checkout page.\n        if (!paymentData) {\n            throw new InvalidArgumentError('Unable to proceed because \"paymentMethod.initializationData.paymentData\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData })));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _createMasterpassPayload(): MasterpassCheckoutOptions {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return {\n            checkoutId: this._paymentMethod.initializationData.checkoutId,\n            allowedCardTypes: this._paymentMethod.initializationData.allowedCardTypes,\n            amount: checkout.subtotal.toFixed(2),\n            currency: storeConfig.currency.code,\n            cartId: checkout.cart.id,\n            suppressShippingAddress: false,\n            callbackUrl: getCallbackUrl('checkout'),\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event) {\n        event.preventDefault();\n\n        if (!this._masterpassClient) {\n            return;\n        }\n\n        const payload = this._createMasterpassPayload();\n        this._masterpassClient.checkout(payload);\n    }\n}\n","import { omit } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class NoPaymentDataRequiredPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._orderActionCreator.submitOrder(omit(orderRequest, 'payment'), options)\n        );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class OfflinePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const action = this._orderActionCreator.submitOrder({\n            ...payload,\n            payment: payload.payment ? { methodId: payload.payment.methodId } : undefined,\n        }, options);\n\n        return this._store.dispatch(action);\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport { HostedInstrument, VaultedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class OffsitePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const orderPayload = this._shouldSubmitFullPayload(payment) ? payload : order;\n        const paymentData = payment && payment.paymentData;\n        const instrumentId = paymentData && (paymentData as VaultedInstrument).instrumentId;\n        const shouldSaveInstrument = paymentData && (paymentData as HostedInstrument).shouldSaveInstrument;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(orderPayload, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.initializeOffsitePayment(\n                    payment.methodId,\n                    payment.gatewayId,\n                    instrumentId,\n                    shouldSaveInstrument))\n            );\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n        const status = state.payment.getPaymentStatus();\n\n        if (order && (status === paymentStatusTypes.ACKNOWLEDGE || status === paymentStatusTypes.FINALIZE)) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _shouldSubmitFullPayload(payment?: OrderPaymentRequestBody): boolean {\n        // FIXME: A temporary workaround to support offsite payment methods\n        // where their return URL needs to be provided by the core app.\n        if (!payment) {\n            return false;\n        }\n\n        return payment.gatewayId === 'adyen' || payment.gatewayId === 'barclaycard' || payment.methodId === 'ccavenuemars';\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport { CardinalThreeDSecureFlow } from '../cardinal';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class PaypalProPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _threeDSecureFlow: CardinalThreeDSecureFlow\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n        this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!this._paymentMethod.config.is3dsEnabled) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._threeDSecureFlow.prepare(methodId)\n            .then(() => this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (this._isPaymentAcknowledged()) {\n            return this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: payload.payment ? { methodId: payload.payment.methodId } : undefined,\n                }, options)\n            );\n        }\n\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => {\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                return this._paymentMethod.config.is3dsEnabled ?\n                    this._threeDSecureFlow.start(payment) :\n                    this._store.dispatch(this._paymentActionCreator.submitPayment(payment));\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _isPaymentAcknowledged(): boolean {\n        const state = this._store.getState();\n\n        return state.payment.getPaymentStatus() === paymentStatusTypes.ACKNOWLEDGE;\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nimport PaypalScriptLoader from './paypal-script-loader';\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalExpressPaymentStrategy implements PaymentStrategy {\n    private _paypalSdk?: PaypalSDK;\n    private _paymentMethod?: PaymentMethod;\n    private _useRedirectFlow: boolean = false;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _scriptLoader: PaypalScriptLoader,\n        private _window: PaypalHostWindow = window\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n        this._useRedirectFlow = (options.paypalexpress && options.paypalexpress.useRedirectFlow) === true;\n\n        if (!this._isInContextEnabled()) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._scriptLoader.loadPaypal()\n            .then(paypal => {\n                this._paypalSdk = paypal;\n\n                if (!this._paymentMethod || !this._paymentMethod.config.merchantId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._paypalSdk.checkout.setup(this._paymentMethod.config.merchantId, {\n                    button: 'paypal-button',\n                    environment: this._paymentMethod.config.testMode ? 'sandbox' : 'production',\n                });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._isInContextEnabled() && this._paypalSdk) {\n            this._paypalSdk.checkout.closeFlow();\n            this._paypalSdk = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const paypal = this._paypalSdk;\n\n        if (this._isAcknowledgedOrFinalized()) {\n            return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options));\n        }\n\n        if (!this._isInContextEnabled() || this._useRedirectFlow) {\n            return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options))\n                .then(state => {\n                    const redirectUrl = state.payment.getPaymentRedirectUrl();\n\n                    if (redirectUrl) {\n                        this._window.top.location.href = redirectUrl;\n                    }\n\n                    // We need to hold execution so the consumer does not redirect us somewhere else\n                    return new Promise<never>(() => {});\n                });\n        }\n\n        if (!paypal) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        paypal.checkout.initXO();\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options))\n            .then(state => {\n                const redirectUrl = state.payment.getPaymentRedirectUrl();\n\n                if (redirectUrl) {\n                    paypal.checkout.startFlow(redirectUrl);\n                }\n\n                // We need to hold execution so the consumer does not redirect us somewhere else\n                return new Promise<never>(() => {});\n            })\n            .catch(error => {\n                paypal.checkout.closeFlow();\n\n                return Promise.reject(error);\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && this._isAcknowledgedOrFinalized()) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _isAcknowledgedOrFinalized(): boolean {\n        const state = this._store.getState();\n\n        return state.payment.getPaymentStatus() === paymentStatusTypes.ACKNOWLEDGE\n            || state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE;\n    }\n\n    private _isInContextEnabled(): boolean {\n        return !!(this._paymentMethod && this._paymentMethod.config.merchantId);\n    }\n}\n","import { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class SagePayPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _formPoster: any\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n            )\n            .catch(error => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                    return Promise.reject(error);\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    });\n                });\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import StandardError from './standard-error';\n\n/**\n * Throw this error if the shopper is using a browser version that is not\n * supported by us or any third party provider we use.\n */\nexport default class UnsupportedBrowserError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unsupported browser error');\n\n        this.name = 'UnsupportedBrowserError';\n        this.type = 'unsupported_browser';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\nimport { omit } from 'lodash';\nimport { noop } from 'rxjs';\n\nimport { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, TimeoutError, UnsupportedBrowserError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { NonceInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport SquarePaymentForm, { CardData, Contact, DigitalWalletType, NonceGenerationError, SquareFormElement, SquareFormOptions, SquarePaymentRequest } from './square-form';\nimport SquarePaymentInitializeOptions from './square-payment-initialize-options';\nimport SquareScriptLoader from './square-script-loader';\n\nexport default class SquarePaymentStrategy implements PaymentStrategy {\n    private _deferredRequestNonce?: DeferredPromise;\n    private _paymentForm?: SquarePaymentForm;\n    private _paymentMethod?: PaymentMethod;\n    private _squareOptions?: SquarePaymentInitializeOptions;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _requestSender: RequestSender,\n        private _scriptLoader: SquareScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n\n        this._syncPaymentMethod(methodId);\n\n        return this._scriptLoader.load()\n            .then(createSquareForm =>\n                new Promise((resolve, reject) => {\n                    this._paymentForm = createSquareForm(\n                        this._getFormOptions(options, { resolve, reject })\n                    );\n                    this._paymentForm.build();\n                }))\n            .then(() => this._store.getState());\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = orderRequest;\n\n        if (!payment || !payment.methodId) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment.methodId\" argument is not provided.');\n        }\n\n        this._syncPaymentMethod(payment.methodId);\n\n        return this._getNonceInstrument(payment.methodId)\n            .then(paymentData =>\n                this._store.dispatch(this._orderActionCreator.submitOrder(omit(orderRequest, 'payment'), options))\n                .then(() =>\n                    this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n                ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _syncPaymentMethod(methodId: string): void {\n        const state = this._store.getState();\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n    }\n\n    private _getCountryCode(countryName: string) {\n        switch (countryName.toUpperCase()) {\n            case 'NEW ZELAND':\n                return 'NZ';\n            case 'AUSTRALIA':\n                return 'AU';\n            default:\n                return 'US';\n        }\n    }\n\n    private _getNonceInstrument(methodId: string): Promise<NonceInstrument> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (paymentMethod) {\n            const { initializationData } = paymentMethod;\n            if (initializationData && initializationData.paymentData.nonce) {\n                return Promise.resolve({ nonce: paymentMethod.initializationData.paymentData.nonce });\n            }\n        }\n\n        return new Promise<NonceInstrument>((resolve, reject) => {\n            if (!this._paymentForm) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            if (this._deferredRequestNonce) {\n                this._deferredRequestNonce.reject(new TimeoutError());\n            }\n\n            this._deferredRequestNonce = { resolve, reject };\n            this._paymentForm.requestCardNonce();\n        });\n    }\n\n    private _getFormOptions(options: PaymentInitializeOptions, deferred: DeferredPromise): SquareFormOptions {\n        const { square: squareOptions } = options;\n\n        if (!squareOptions || !this._paymentMethod) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.square\" argument is not provided.');\n        }\n\n        this._squareOptions = squareOptions;\n\n        return {\n            ...this._squareOptions,\n            ...this._paymentMethod.initializationData,\n            callbacks: {\n                cardNonceResponseReceived: (errors, nonce, cardData, billingContact, shippingContact) => {\n                    if (cardData && cardData.digital_wallet_type !== DigitalWalletType.none) {\n                        this._handleWalletNonceResponse(errors, nonce, cardData, billingContact, shippingContact);\n                    } else {\n                        this._handleCardNonceResponse(errors, nonce);\n                    }\n                },\n                createPaymentRequest: () => this._paymentRequestPayload(),\n                methodsSupported: methods => {\n                    const { masterpass } = squareOptions;\n\n                    if (masterpass) {\n                        this._showPaymentMethods(methods, masterpass);\n                    }\n                },\n                paymentFormLoaded: () => {\n                    deferred.resolve();\n                    this._setPostalCode();\n                },\n                unsupportedBrowserDetected: () => deferred.reject(new UnsupportedBrowserError()),\n            },\n        };\n    }\n\n    private _handleWalletNonceResponse(\n        errors?: NonceGenerationError[],\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact\n    ): void {\n        const onError = this._squareOptions && this._squareOptions.onError || noop;\n        const onPaymentSelect = this._squareOptions && this._squareOptions.onPaymentSelect || noop;\n\n        if (errors) {\n            onError(errors);\n        } else if (nonce && this._paymentMethod) {\n            this._paymentInstrumentSelected(\n                this._paymentMethod.id,\n                nonce,\n                cardData,\n                billingContact,\n                shippingContact\n            )\n                .then(onPaymentSelect)\n                .catch(onError);\n        }\n    }\n\n    private _handleCardNonceResponse(errors?: NonceGenerationError[], nonce?: string): void {\n        if (!this._deferredRequestNonce) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (nonce && !errors) {\n            this._deferredRequestNonce.resolve({ nonce });\n\n            return;\n        }\n\n        const onError = this._squareOptions && this._squareOptions.onError || noop;\n\n        onError(errors);\n\n        this._deferredRequestNonce.reject(errors);\n    }\n\n    private _paymentInstrumentSelected(\n        methodId: string,\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact): Promise<InternalCheckoutSelectors> {\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._setExternalCheckoutData(nonce, cardData, billingContact, shippingContact)\n            .then(() =>\n                Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _paymentRequestPayload(): SquarePaymentRequest {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        return {\n            requestShippingAddress: true,\n            requestBillingInfo: true,\n            currencyCode: storeConfig.currency.code,\n            countryCode: this._getCountryCode(storeConfig.storeProfile.storeCountry),\n            total: {\n                label: storeConfig.storeProfile.storeName,\n                amount: String(checkout.subtotal),\n                pending: false,\n            },\n        };\n    }\n\n    private _setExternalCheckoutData(nonce?: string, cardData?: CardData, billingContact?: Contact, shippingContact?: Contact): Promise<Response<any>> {\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                nonce,\n                provider: 'squarev2',\n                action: 'set_external_checkout',\n                cardData: JSON.stringify(cardData),\n                billingContact: JSON.stringify(billingContact),\n                shippingContact: JSON.stringify(shippingContact),\n            },\n        });\n    }\n\n    private _setPostalCode(): void {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!this._paymentForm) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (billingAddress && billingAddress.postalCode) {\n            this._paymentForm.setPostalCode(billingAddress.postalCode);\n        }\n    }\n\n    private _showPaymentMethods(methods: { [key: string]: boolean }, element: SquareFormElement): void {\n        const masterpassBtn = document.getElementById(element.elementId);\n\n        if (masterpassBtn && methods.masterpass) {\n            masterpassBtn.style.display = 'inline-block';\n        }\n    }\n}\n\nexport interface DeferredPromise {\n    resolve(resolution?: NonceInstrument): void;\n    reject(reason?: any): void;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { SquareFormFactory, SquareFormOptions } from './square-form';\nimport SquareWindow from './square-window';\n\nexport default class SquareScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<SquareFormFactory> {\n        const scriptURI = '//js.squareup.com/v2/paymentform';\n\n        return this._scriptLoader.loadScript(scriptURI)\n            .then(() => (options: SquareFormOptions) =>\n                new (window as unknown as SquareWindow).SqPaymentForm(options)\n            );\n    }\n}\n","import { some } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { Customer } from '../../../customer';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodFailedError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport { HostedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { StripeAddress, StripeBillingDetails, StripeCardElement, StripeHandleCardPaymentOptions, StripePaymentMethodData, StripeShippingDetails, StripeV3Client } from './stripev3';\nimport StripeV3ScriptLoader from './stripev3-script-loader';\n\nexport default class StripeV3PaymentStrategy implements PaymentStrategy {\n    private _stripeV3Client?: StripeV3Client;\n    private _cardElement?: StripeCardElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _stripeScriptLoader: StripeV3ScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const stripeOptions = options.stripev3;\n\n        if (!stripeOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.stripev3\" argument is not provided.');\n        }\n\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._stripeScriptLoader.load(paymentMethod.initializationData.stripePublishableKey)\n            .then(stripeJs => {\n                this._stripeV3Client = stripeJs;\n                const elements = this._stripeV3Client.elements();\n                const cardElement = elements.create('card', {\n                    style: stripeOptions.style,\n                });\n\n                cardElement.mount(`#${stripeOptions.containerId}`);\n\n                this._cardElement = cardElement;\n\n                return Promise.resolve(this._store.getState());\n            });\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n        const shouldSaveInstrument = Boolean(paymentData && (paymentData as HostedInstrument).shouldSaveInstrument);\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => {\n                if (paymentData && isVaultedInstrument(paymentData)) {\n                    return this._store.dispatch(this._paymentActionCreator.submitPayment({...payment, paymentData}))\n                        .catch(error => {\n                            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                                return Promise.reject(error);\n                            }\n\n                            return this._getStripeJs().handleCardPayment(error.body.three_ds_result.token)\n                                .then(stripeResponse => {\n                                    if (stripeResponse.error || !stripeResponse.paymentIntent.id) {\n                                        throw new PaymentMethodFailedError(stripeResponse.error && stripeResponse.error.message);\n                                    }\n\n                                    const paymentPayload = {\n                                        methodId: payment.methodId,\n                                        paymentData: {\n                                            nonce: stripeResponse.paymentIntent.id,\n                                        },\n                                    };\n\n                                    return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n                                });\n                        });\n                }\n\n                return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(payment.methodId))\n                    .then(state => {\n                        const paymentMethod = state.paymentMethods.getPaymentMethod(payment.methodId);\n                        const paymentIntent = paymentMethod && paymentMethod.clientToken;\n\n                        if (!this._cardElement) {\n                            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                        }\n\n                        return this._getStripeJs().createPaymentMethod('card', this._cardElement, this._mapStripePaymentMethodOptions())\n                            .then(stripePaymentMethod => {\n                                if (stripePaymentMethod.error || !stripePaymentMethod.paymentMethod.id) {\n                                    throw new PaymentMethodFailedError(stripePaymentMethod.error && stripePaymentMethod.error.message);\n                                }\n\n                                if (!paymentIntent) {\n                                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                                }\n\n                                const stripeCardPaymentOptions = {\n                                    ...this._mapStripeCardPaymentOptions(shouldSaveInstrument),\n                                    payment_method: stripePaymentMethod.paymentMethod.id,\n                                };\n\n                                return this._getStripeJs().handleCardPayment(paymentIntent, stripeCardPaymentOptions);\n                            })\n                            .then(stripeResponse => {\n                                if (stripeResponse.error || !stripeResponse.paymentIntent.id) {\n                                    throw new PaymentMethodFailedError(stripeResponse.error && stripeResponse.error.message);\n                                }\n\n                                const paymentPayload = {\n                                    methodId: payment.methodId,\n                                    paymentData: {\n                                        nonce: stripeResponse.paymentIntent.id,\n                                        shouldSaveInstrument,\n                                    },\n                                };\n\n                                return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n                            });\n                    });\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._cardElement) {\n            this._cardElement.unmount();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _getStripeJs(): StripeV3Client {\n        if (!this._stripeV3Client) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._stripeV3Client;\n    }\n\n    private _mapStripeBillingAddress(billingAddress: BillingAddress | undefined): StripeAddress | undefined {\n        if (!billingAddress) {\n            return undefined;\n        }\n\n        return {\n            city: billingAddress.city,\n            country: billingAddress.countryCode,\n            line1: billingAddress.address1,\n            line2: billingAddress.address2,\n            postal_code: billingAddress.postalCode,\n            state: billingAddress.stateOrProvinceCode,\n        };\n    }\n\n    private _mapStripeShippingAddress(shippingAddress: Address | undefined): StripeAddress {\n        if (!shippingAddress) {\n            return { };\n        }\n\n        return {\n            city: shippingAddress.city,\n            country: shippingAddress.countryCode,\n            line1: shippingAddress.address1,\n            line2: shippingAddress.address2,\n            postal_code: shippingAddress.postalCode,\n            state: shippingAddress.stateOrProvinceCode,\n        };\n    }\n\n    private _mapStripeBillingDetails({ billingAddress, customer }: { billingAddress?: BillingAddress; customer?: Customer } = {}): StripeBillingDetails {\n        const stripeBillingDetails = {\n            address: this._mapStripeBillingAddress(billingAddress),\n        };\n\n        if (customer) {\n            return {\n                ...stripeBillingDetails,\n                email: customer.email,\n                name: `${customer.firstName} ${customer.lastName}`,\n            };\n        }\n\n        if (billingAddress) {\n            return {\n                ...stripeBillingDetails,\n                email: billingAddress.email,\n                name: `${billingAddress.firstName} ${billingAddress.lastName}`,\n            };\n        }\n\n        return {\n            name: 'Guest',\n        };\n    }\n\n    private _mapStripeShippingDetails({ shippingAddress, customer }: { shippingAddress?: Address ; customer?: Customer } = {}): StripeShippingDetails {\n        const stripeShippingDetails = {\n            address: this._mapStripeShippingAddress(shippingAddress),\n        };\n\n        if (customer) {\n            return {\n                ...stripeShippingDetails,\n                name: `${customer.firstName} ${customer.lastName}`,\n            };\n        }\n\n        if (shippingAddress) {\n            return {\n                ...stripeShippingDetails,\n                name: `${shippingAddress.firstName} ${shippingAddress.lastName}`,\n            };\n        }\n\n        return {\n            ...stripeShippingDetails,\n            name: 'Guest',\n        };\n    }\n\n    private _getCustomer(): Customer | undefined {\n        const customer = this._store.getState().customer.getCustomer();\n\n        if (customer) {\n            if (customer.firstName === '' || customer.lastName === '' || customer.email === '') {\n                return undefined;\n            }\n        }\n\n        return customer;\n    }\n\n    private _mapStripeCardPaymentOptions(shouldSaveInstrument: boolean): StripeHandleCardPaymentOptions {\n        const customer = this._getCustomer();\n        const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n        const shippingDetails = {\n            shipping: this._mapStripeShippingDetails({ shippingAddress, customer }),\n        };\n\n        if (customer) {\n            return {\n                ...shippingDetails,\n                receipt_email: customer.email,\n                save_payment_method: shouldSaveInstrument,\n            };\n        } else {\n            return {\n                ...shippingDetails,\n            };\n        }\n    }\n\n    private _mapStripePaymentMethodOptions(): StripePaymentMethodData {\n        const customer = this._getCustomer();\n        const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n        return {\n            billing_details: this._mapStripeBillingDetails({ billingAddress, customer }),\n        };\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { StripeHostWindow, StripeV3Client } from './stripev3';\n\nexport default class StripeV3ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: StripeHostWindow = window\n    ) {}\n\n    load(publishableKey: string): Promise<StripeV3Client> {\n        return this._scriptLoader\n            .loadScript('https://js.stripe.com/v3/')\n            .then(() => {\n                if (!this._window.Stripe) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Stripe(publishableKey, {\n                    betas: ['payment_intent_beta_3'],\n                });\n            });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport WepayRisk from './wepay-risk';\nimport WepayWindow from './wepay-window';\n\nconst SCRIPT_SRC = '//static.wepay.com/min/js/risk.1.latest.js';\n\nexport default class WepayRiskClient {\n    private _riskClient?: WepayRisk;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    initialize(): Promise<WepayRiskClient> {\n        return this._scriptLoader\n            .loadScript(SCRIPT_SRC)\n            .then(() => this._riskClient = (window as unknown as WepayWindow).WePay.risk)\n            .then(() => this);\n    }\n\n    getRiskToken(): string {\n        if (!this._riskClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._riskClient.generate_risk_token();\n\n        return this._riskClient.get_risk_token();\n    }\n}\n","import { merge } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nimport WepayRiskClient from './wepay-risk-client';\n\nexport default class WepayPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        private _wepayRiskClient: WepayRiskClient\n    ) {\n        super(store, orderActionCreator, paymentActionCreator);\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._wepayRiskClient.initialize();\n\n        return super.initialize(options);\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const token = this._wepayRiskClient.getRiskToken();\n        const payloadWithToken = merge({}, payload, {\n            payment: {\n                paymentData: {\n                    deviceSessionId: token,\n                },\n            },\n        });\n\n        return super.execute(payloadWithToken, options);\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if a payment method explicitly returns a declined error and\n * the shopper has to choose a different payment method if they wish to continue\n * their checkout process.\n */\nexport default class PaymentMethodDeclinedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'The selected payment method was declined. Please select another payment method.');\n\n        this.name = 'PaymentMethodDeclinedError';\n        this.type = 'payment_declined';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { ContentType, INTERNAL_USE_ONLY } from '../../../common/http-request';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentMethodCancelledError, PaymentMethodDeclinedError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { Zip, ZipModalEvent } from './zip';\nimport ZipScriptLoader from './zip-script-loader';\n\nexport default class ZipPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _zipClient?: Zip;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _zipScriptLoader: ZipScriptLoader,\n        private _requestSender: RequestSender\n    ) { }\n\n    async initialize(): Promise<InternalCheckoutSelectors> {\n        const zip = await this._zipScriptLoader.load();\n        this._zipClient = zip;\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n        this._zipClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const { _zipClient: zipClient } = this;\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!zipClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        const { useStoreCredit } = payload;\n\n        if (useStoreCredit !== undefined) {\n            await this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(useStoreCredit));\n        }\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(payment.methodId, options));\n\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(payment.methodId);\n\n        if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const nonce = await new Promise<string | undefined>((resolve, reject) => {\n            zipClient.Checkout.init({\n                onComplete: async ({ checkoutId, state }) => {\n                    if (state === ZipModalEvent.CancelCheckout) {\n                        return reject(new PaymentMethodCancelledError());\n                    }\n\n                    if (state === ZipModalEvent.CheckoutReferred && checkoutId) {\n                        await this._prepareForReferredRegistration(payment.methodId, checkoutId);\n\n                        return resolve();\n                    }\n\n                    if (state === ZipModalEvent.CheckoutApproved && checkoutId) {\n                        return resolve(checkoutId);\n                    }\n\n                    if (state === ZipModalEvent.CheckoutDeclined) {\n                        return reject(new PaymentMethodDeclinedError('Unfortunately your application was declined. Please select another payment method.'));\n                    }\n\n                    reject(new PaymentMethodInvalidError());\n                },\n                onCheckout: openModal => {\n                    if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    openModal(JSON.parse(this._paymentMethod.clientToken));\n                },\n            });\n        });\n\n        if (nonce !== undefined) {\n            return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                methodId: payment.methodId,\n                paymentData: { nonce },\n            }));\n        }\n\n        return this._store.getState();\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _prepareForReferredRegistration(provider: string, externalId: string): Promise<Response> {\n        const url = `/api/storefront/payment/${provider}/save-external-id`;\n        const options = {\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n            body: {\n                externalId,\n                provider,\n            },\n        };\n\n        return this._requestSender.post(url, options);\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport { Zip, ZipHostWindow } from '../zip';\n\nexport default class ZipScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: ZipHostWindow = window\n    ) {}\n\n    load(): Promise<Zip> {\n        return this._scriptLoader\n            .loadScript(`//static.zipmoney.com.au/checkout/checkout-v1.min.js`)\n            .then(() => {\n                if (!this._window.Zip) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Zip;\n            });\n    }\n}\n","import { createAction, createDataStore, Action, DataStore, ReadableDataStore } from '@bigcommerce/data-store';\n\nenum ProjectionActionType {\n    Synchronize = 'SYNCHRONIZE',\n}\n\ninterface SynchronizeAction<TState> extends Action<TState> {\n    type: ProjectionActionType.Synchronize;\n    payload: TState;\n}\n\nexport interface DataStoreProjection<TTransformedState> extends ReadableDataStore<TTransformedState> {\n    notifyState(): void;\n}\n\nexport default function createDataStoreProjection<TState, TTransformedState = TState>(\n    store: DataStore<any, Action, TState>,\n    stateTransformer: (state: TState) => TTransformedState\n): DataStoreProjection<TTransformedState> {\n    const projection = createDataStore<TState | undefined, SynchronizeAction<TState>, TTransformedState>(\n        (state, action) => action.type === ProjectionActionType.Synchronize ?\n            action.payload :\n            state,\n        store.getState(),\n        { stateTransformer }\n    );\n\n    store.subscribe(state => {\n        projection.dispatch(createAction(ProjectionActionType.Synchronize, state) as SynchronizeAction<TState>);\n    }, { initial: false });\n\n    return projection;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { Address } from '../../address';\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../../checkout';\nimport { addMinutes, isFuture } from '../../common/date-time';\nimport { MissingDataError, MissingDataErrorType } from '../../common/error/errors';\n\nimport { SessionContext, VaultAccessToken } from './instrument';\nimport { DeleteInstrumentAction, InstrumentActionType, LoadInstrumentsAction } from './instrument-actions';\nimport InstrumentRequestSender from './instrument-request-sender';\n\nexport default class InstrumentActionCreator {\n    constructor(\n        private _instrumentRequestSender: InstrumentRequestSender\n    ) {}\n\n    loadInstruments(): ThunkAction<LoadInstrumentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadInstrumentsAction>) => {\n            observer.next(createAction(InstrumentActionType.LoadInstrumentsRequested));\n\n            const session = this._getSessionContext(store);\n            const token = this._getCurrentAccessToken(store);\n            const shippingAddress = this._getShippingAddress(store);\n\n            return this._getValidAccessToken(token)\n                .then(currentToken =>\n                    this._instrumentRequestSender.loadInstruments({\n                            ...session,\n                            authToken: currentToken.vaultAccessToken,\n                        },\n                        shippingAddress\n                    )\n                        .then(({ body }) => {\n                            observer.next(createAction(\n                                InstrumentActionType.LoadInstrumentsSucceeded,\n                                body,\n                                currentToken\n                            ));\n                            observer.complete();\n                        })\n                )\n                .catch(response => {\n                    observer.error(createErrorAction(InstrumentActionType.LoadInstrumentsFailed, response));\n                });\n        });\n    }\n\n    deleteInstrument(instrumentId: string): ThunkAction<DeleteInstrumentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteInstrumentAction>) => {\n            observer.next(createAction(InstrumentActionType.DeleteInstrumentRequested, undefined, { instrumentId }));\n\n            const session = this._getSessionContext(store);\n            const token = this._getCurrentAccessToken(store);\n\n            return this._getValidAccessToken(token)\n                .then(currentToken =>\n                    this._instrumentRequestSender.deleteInstrument({\n                        ...session,\n                        authToken: currentToken.vaultAccessToken,\n                    }, instrumentId)\n                        .then(({ body }) => {\n                            observer.next(createAction(InstrumentActionType.DeleteInstrumentSucceeded, body, {\n                                instrumentId,\n                                ...currentToken,\n                            }));\n                            observer.complete();\n                        })\n                )\n                .catch(response => {\n                    observer.error(createErrorAction(InstrumentActionType.DeleteInstrumentFailed, response, { instrumentId }));\n                });\n        });\n    }\n\n    private _isValidVaultAccessToken(token: VaultAccessToken): boolean {\n        if (!token || !token.vaultAccessToken) {\n            return false;\n        }\n\n        const expiryBuffer = 2;\n        const expiry = addMinutes(new Date(token.vaultAccessExpiry), expiryBuffer);\n\n        return isFuture(expiry);\n    }\n\n    private _getCurrentAccessToken(store: ReadableCheckoutStore): VaultAccessToken | undefined {\n        const { instruments } = store.getState();\n        const meta = instruments.getInstrumentsMeta();\n\n        if (!meta) {\n            return;\n        }\n\n        return {\n            vaultAccessToken: meta.vaultAccessToken,\n            vaultAccessExpiry: meta.vaultAccessExpiry,\n        };\n    }\n\n    private _getValidAccessToken(token?: VaultAccessToken): Promise<VaultAccessToken> {\n        return token && this._isValidVaultAccessToken(token) ?\n            Promise.resolve(token) :\n            this._instrumentRequestSender.getVaultAccessToken().then(({ body }) => body);\n    }\n\n    private _getShippingAddress(store: ReadableCheckoutStore): Address | undefined {\n        const state = store.getState();\n\n        return state.shippingAddress.getShippingAddress();\n    }\n\n    private _getSessionContext(store: ReadableCheckoutStore): SessionContext {\n        const state = store.getState();\n        const config = state.config.getStoreConfig();\n        const cart = state.cart.getCart();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        const { customerId } = cart;\n        const { storeId } = config.storeProfile;\n        const { code } = config.shopperCurrency.isTransactional ? config.shopperCurrency : config.currency;\n\n        return {\n            customerId,\n            storeId,\n            currencyCode: code,\n        };\n    }\n}\n","export default function isFuture(date: Date): boolean {\n    return date.valueOf() > Date.now();\n}\n","export default function addMinutes(date: Date, amount: number): Date {\n    const newDate = new Date(date.getTime());\n\n    newDate.setMinutes(date.getMinutes() + amount);\n\n    return newDate;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentResponse from '../payment-response';\n\nimport PaymentInstrument, { VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody, InstrumentErrorResponseBody, InternalInstrument, InternalInstrumentsResponseBody, InternalInstrumentErrorResponseBody, InternalVaultAccessTokenResponseBody } from './instrument-response-body';\nimport { mapToAccountInstrument } from './map-to-account-instrument';\nimport { mapToCardInstrument } from './map-to-card-instrument';\n\nexport default class InstrumentResponseTransformer {\n    transformResponse(\n        response: PaymentResponse<InternalInstrumentsResponseBody>\n    ): Response<InstrumentsResponseBody> {\n        const { body, ...payload } = this._transformResponse(response);\n\n        return {\n            ...payload,\n            body: {\n                vaultedInstruments: this._transformVaultedInstruments(body.vaulted_instruments),\n            },\n        };\n    }\n\n    transformErrorResponse(\n        response: PaymentResponse<InternalInstrumentErrorResponseBody>\n    ): Response<InstrumentErrorResponseBody> {\n        return this._transformResponse(response);\n    }\n\n    transformVaultAccessResponse(\n        response: Response<InternalVaultAccessTokenResponseBody>\n    ): Response<VaultAccessToken> {\n        return {\n            ...response,\n            body: {\n                vaultAccessToken: response.body.data.token,\n                vaultAccessExpiry: response.body.data.expires_at,\n            },\n        };\n    }\n\n    private _transformVaultedInstruments(vaultedInstruments: InternalInstrument[] = []): PaymentInstrument[] {\n        return vaultedInstruments\n            .map(instrument => {\n                switch (instrument.method_type) {\n                    case 'paypal':\n                        return mapToAccountInstrument(instrument);\n                    default:\n                        return mapToCardInstrument(instrument);\n                }\n            });\n    }\n\n    private _transformResponse<T>(response: PaymentResponse<T>): Response<T> {\n        const { data: body, ...payload } = response;\n\n        return {\n            ...payload,\n            body,\n        };\n    }\n}\n","import { AccountInstrument } from './instrument';\nimport { AccountInternalInstrument } from './instrument-response-body';\n\nexport function mapToAccountInstrument(instrument: AccountInternalInstrument): AccountInstrument {\n    return {\n        bigpayToken: instrument.bigpay_token,\n        defaultInstrument: instrument.default_instrument,\n        provider: instrument.provider,\n        externalId: instrument.external_id,\n        trustedShippingAddress: instrument.trusted_shipping_address,\n        method: instrument.method_type,\n        type: 'account',\n    };\n}\n","import { CardInstrument } from './instrument';\nimport { CardInternalInstrument } from './instrument-response-body';\n\nexport function mapToCardInstrument(instrument: CardInternalInstrument): CardInstrument {\n    return {\n        bigpayToken: instrument.bigpay_token,\n        defaultInstrument: instrument.default_instrument,\n        provider: instrument.provider,\n        iin: instrument.iin,\n        last4: instrument.last_4,\n        expiryMonth: instrument.expiry_month,\n        expiryYear: instrument.expiry_year,\n        brand: instrument.brand,\n        trustedShippingAddress: instrument.trusted_shipping_address,\n        method:  instrument.method === 'card' ? 'credit_card' : instrument.method, // This is a temporary change for the rollout of some changes in bigpay. It is meant to be removed when the changes in bigpay are fully rolled out\n        type: 'card',\n    };\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { mapToInternalAddress, Address } from '../../address';\nimport { RequestOptions } from '../../common/http-request';\nimport PaymentResponse from '../payment-response';\n\nimport { InstrumentRequestContext, VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody, InternalInstrumentsResponseBody, InternalInstrumentErrorResponseBody } from './instrument-response-body';\nimport InstrumentResponseTransformer from './instrument-response-transformer';\n\nexport default class InstrumentRequestSender {\n    private _transformer: InstrumentResponseTransformer;\n\n    constructor(\n        private _client: any,\n        private _requestSender: RequestSender\n    ) {\n        this._transformer = new InstrumentResponseTransformer();\n    }\n\n    getVaultAccessToken(\n        { timeout }: RequestOptions = {}\n    ): Promise<Response<VaultAccessToken>> {\n        const url = '/internalapi/v1/checkout/payments/vault-access-token';\n\n        return this._requestSender.get(url, { timeout }).then(response => ({\n            ...response,\n            body: {\n                vaultAccessToken: response.body.data.token,\n                vaultAccessExpiry: response.body.data.expires_at,\n            },\n        }));\n    }\n\n    loadInstruments(\n        requestContext: InstrumentRequestContext,\n        shippingAddress?: Address\n    ): Promise<Response<InstrumentsResponseBody>> {\n        return (shippingAddress) ?\n            this._loadInstrumentsWithAddress(requestContext, shippingAddress) :\n            this._loadInstruments(requestContext);\n    }\n\n    deleteInstrument(\n        requestContext: InstrumentRequestContext,\n        instrumentId: string\n    ): Promise<Response<InstrumentsResponseBody>> {\n        const payload = {\n            ...requestContext,\n            instrumentId,\n        };\n\n        return new Promise((resolve, reject) => {\n            this._client.deleteShopperInstrument(\n                payload, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) =>  errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n\n    private _loadInstruments(\n        requestContext: InstrumentRequestContext\n    ): Promise<Response<InstrumentsResponseBody>> {\n        return new Promise((resolve, reject) => {\n            this._client.loadInstruments(\n                requestContext, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) => errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n\n    private _loadInstrumentsWithAddress(\n        requestContext: InstrumentRequestContext,\n        shippingAddress: Address\n    ): Promise<Response<InstrumentsResponseBody>> {\n        const payload = {\n            ...requestContext,\n            shippingAddress: mapToInternalAddress(shippingAddress),\n        };\n\n        return new Promise((resolve, reject) => {\n            this._client.loadInstrumentsWithAddress(\n                payload, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) => errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadShippingCountriesAction, ShippingCountryActionType } from './shipping-country-actions';\nimport ShippingCountryRequestSender from './shipping-country-request-sender';\n\nexport default class ShippingCountryActionCreator {\n    constructor(\n        private _shippingCountryRequestSender: ShippingCountryRequestSender\n    ) {}\n\n    loadCountries(options?: RequestOptions): Observable<LoadShippingCountriesAction> {\n        return Observable.create((observer: Observer<LoadShippingCountriesAction>) => {\n            observer.next(createAction(ShippingCountryActionType.LoadShippingCountriesRequested));\n\n            this._shippingCountryRequestSender.loadCountries(options)\n                .then(response => {\n                    observer.next(createAction(ShippingCountryActionType.LoadShippingCountriesSucceeded, response.body.data));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ShippingCountryActionType.LoadShippingCountriesFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\nimport { CountryResponseBody } from '../geography';\n\nexport default class ShippingCountryRequestSender {\n    constructor(\n        private _requestSender: RequestSender,\n        private _config: { locale?: string }\n    ) {}\n\n    loadCountries({ timeout }: RequestOptions = {}): Promise<Response<CountryResponseBody>> {\n        const url = '/internalapi/v1/shipping/countries';\n        const headers = {\n            'Accept-Language': this._config.locale,\n        };\n\n        return this._requestSender.get(url, { headers, timeout });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport { ShippingInitializeOptions, ShippingRequestOptions } from './shipping-request-options';\nimport { ShippingStrategyActionType, ShippingStrategyDeinitializeAction, ShippingStrategyInitializeAction, ShippingStrategySelectOptionAction, ShippingStrategyUpdateAddressAction } from './shipping-strategy-actions';\nimport { ShippingStrategy } from './strategies';\n\nexport default class ShippingStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<ShippingStrategy>\n    ) {}\n\n    updateAddress(address: Partial<AddressRequestBody>, options?: ShippingRequestOptions): ThunkAction<ShippingStrategyUpdateAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyUpdateAddressAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .updateAddress(address, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId }));\n                });\n        });\n    }\n\n    selectOption(shippingOptionId: string, options?: ShippingRequestOptions): ThunkAction<ShippingStrategySelectOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategySelectOptionAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.SelectOptionRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .selectOption(shippingOptionId, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.SelectOptionSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.SelectOptionFailed, error, { methodId }));\n                });\n        });\n    }\n\n    initialize(options?: ShippingInitializeOptions): ThunkAction<ShippingStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyInitializeAction>) => {\n            const state = store.getState();\n            const payment = state.payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n            const mergedOptions = { ...options, methodId };\n\n            if (methodId && state.shippingStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ShippingStrategyActionType.InitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(mergedOptions)\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.InitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.InitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    deinitialize(options?: ShippingRequestOptions): ThunkAction<ShippingStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyDeinitializeAction>) => {\n            const state = store.getState();\n            const payment = state.payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            if (methodId && !state.shippingStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ShippingStrategyActionType.DeinitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize({ ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.DeinitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.DeinitializeFailed, error, { methodId }));\n                });\n        });\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\n\nimport { isInternalAddressEqual, mapFromInternalAddress } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayAddressBook, AmazonPayOrderReference, AmazonPayScriptLoader, AmazonPayWindow } from '../../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport ConsignmentActionCreator from '../../consignment-action-creator';\nimport { ShippingInitializeOptions, ShippingRequestOptions } from '../../shipping-request-options';\nimport { ShippingStrategyActionType } from '../../shipping-strategy-actions';\nimport ShippingStrategy from '../shipping-strategy';\n\nimport AmazonPayShippingInitializeOptions from './amazon-pay-shipping-initialize-options';\n\nexport default class AmazonPayShippingStrategy implements ShippingStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    initialize(options: ShippingInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const onReady = () => {\n                    this._createAddressBook(amazonOptions)\n                        .then(resolve)\n                        .catch(reject);\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    updateAddress(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    private _createAddressBook(options: AmazonPayShippingInitializeOptions): Promise<AmazonPayAddressBook> {\n        return new Promise((resolve, reject) => {\n            const { container, onAddressSelect = () => {}, onError = () => {}, onReady = () => {} } = options;\n            const merchantId = this._paymentMethod && this._paymentMethod.config.merchantId;\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay AddressBook widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.AddressBook({\n                design: {\n                    designMode: 'responsive',\n                },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onAddressSelect: orderReference => {\n                    this._synchronizeShippingAddress()\n                        .then(() => onAddressSelect(orderReference))\n                        .catch(onError);\n                },\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onReady: orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                },\n            });\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeShippingAddress(): Promise<InternalCheckoutSelectors> {\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n        const amazon = this._store.getState().remoteCheckout.getCheckout('amazon');\n        const referenceId = amazon ? amazon.referenceId : undefined;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId })\n        )\n            .then(() => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializeShipping(methodId, { referenceId })\n            ))\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.shipping && amazon.shipping.address;\n                const address = state.shippingAddress.getShippingAddress();\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, address || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._consignmentActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            })\n            .then(() => this._store.dispatch(\n                createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId })\n            ))\n            .catch(error => this._store.dispatch(\n                createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId })\n            ));\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n}\n","import { AddressRequestBody } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport ConsignmentActionCreator from '../../consignment-action-creator';\nimport { ShippingRequestOptions } from '../../shipping-request-options';\nimport ShippingStrategy from '../shipping-strategy';\n\nexport default class DefaultShippingStrategy implements ShippingStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator\n    ) {}\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(address, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","export interface MutationObeserverCreator {\n    prototype: MutationObserver;\n    new(callback: MutationCallback): MutationObserver;\n}\n\nexport interface MutationObserverWindow extends Window {\n    MutationObserver: MutationObeserverCreator;\n}\n\nexport class MutationObserverFactory {\n    constructor(\n        private _window: MutationObserverWindow = window as MutationObserverWindow\n    ) {}\n\n    create(callback: MutationCallback): MutationObserver {\n        return new this._window.MutationObserver(callback);\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if spam protection is not loaded when trying to\n * complete the required spam protection verification.\n */\nexport default class SpamProtectionNotLoadedError extends StandardError {\n    constructor() {\n        super('Spam protection is not loaded. Please try again.');\n\n        this.name = 'SpamProtectionNotLoadedError';\n        this.type = 'spam_protection_failed';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if the shopper chooses not to complete the spam protection\n * challenge (i.e.: they close the reCaptcha window).\n */\nexport default class SpamProtectionChallengeNotCompletedError extends StandardError {\n    constructor() {\n        super('You haven\\'t complete our spam protection challenge. Please try again.');\n\n        this.name = 'SpamProtectionChallengeNotCompletedError';\n        this.type = 'spam_protection_challenge_not_completed';\n    }\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { defer, of, throwError, Observable, Subject } from 'rxjs';\nimport { catchError, delay, retryWhen, switchMap } from 'rxjs/operators';\n\nimport { MutationObserverFactory } from '../common/dom';\nimport { NotInitializedError, NotInitializedErrorType } from '../common/error/errors';\n\nimport { SpamProtectionChallengeNotCompletedError, SpamProtectionFailedError, SpamProtectionNotLoadedError } from './errors';\nimport GoogleRecaptchaScriptLoader from './google-recaptcha-script-loader';\n\nexport interface RecaptchaResult {\n    error?: Error;\n    token?: string;\n}\n\nexport default class GoogleRecaptcha {\n    private _event$?: Subject<RecaptchaResult>;\n    private _recaptcha?: ReCaptchaV2.ReCaptcha;\n    private _memoized: (recaptcha: ReCaptchaV2.ReCaptcha, sitekey: string, container: HTMLElement | null) => Subject<RecaptchaResult>;\n\n    constructor(\n        private googleRecaptchaScriptLoader: GoogleRecaptchaScriptLoader,\n        private mutationObserverFactory: MutationObserverFactory\n    ) {\n        this._memoized = memoize((recaptcha: ReCaptchaV2.ReCaptcha, sitekey: string, container: HTMLElement | null) => {\n            const event$ = new Subject<RecaptchaResult>();\n\n            if (!container) {\n                throw new Error();\n            }\n\n            recaptcha.render(container.id, {\n                sitekey,\n                size: 'invisible',\n                callback: () => {\n                    event$.next({\n                        token: recaptcha.getResponse(),\n                    });\n                    recaptcha.reset();\n                },\n                'error-callback': () => {\n                    event$.next({\n                        error: new SpamProtectionFailedError(),\n                    });\n                },\n            });\n\n            return event$;\n        }, { isEqual: (a, b) => a === b });\n    }\n\n    load(containerId: string, sitekey: string): Promise<void> {\n        return this.googleRecaptchaScriptLoader.load()\n            .then(recaptcha => {\n                this._event$ = this._memoized(recaptcha, sitekey, document.getElementById(containerId));\n\n                this._recaptcha = recaptcha;\n            });\n    }\n\n    execute(): Observable<RecaptchaResult> {\n        const event$ = this._event$;\n        const recaptcha = this._recaptcha;\n\n        if (!event$ || !recaptcha) {\n            throw new NotInitializedError(NotInitializedErrorType.SpamProtectionNotInitialized);\n        }\n\n        const timeout = 7000;\n        const retryInterval = 250;\n        const maxRetries = timeout / retryInterval;\n\n        return defer(() => {\n            const element = document.querySelector('iframe[src*=\"bframe\"]');\n\n            return element ?\n                of(element) :\n                throwError(new SpamProtectionNotLoadedError());\n        })\n            .pipe(\n                retryWhen(errors => errors.pipe(\n                    delay(retryInterval),\n                    switchMap((error, index) =>\n                        index < maxRetries ? of(error) : throwError(error)\n                    )\n                )),\n                switchMap(element => {\n                    this._watchRecaptchaChallengeWindow(event$, element);\n                    recaptcha.execute();\n\n                    return event$;\n                }),\n                catchError(error => of({ error }))\n            );\n    }\n\n    private _watchRecaptchaChallengeWindow(event: Subject<RecaptchaResult>, element: Element) {\n        const iframeContainer = element.parentElement;\n\n        if (!iframeContainer) {\n            throw new SpamProtectionNotLoadedError();\n        }\n\n        const container = iframeContainer.parentElement;\n\n        if (!container) {\n            throw new SpamProtectionNotLoadedError();\n        }\n\n        this.mutationObserverFactory.create(() => {\n            // When customer closes the Google ReCaptcha challenge window, throw SpamProtectionNotCompletedError\n            if (container.style.visibility === 'hidden') {\n                event.next({\n                    error: new SpamProtectionChallengeNotCompletedError(),\n                });\n            }\n        }).observe(container, { attributes: true, attributeFilter: ['style'] });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nexport default class GoogleRecaptchaScriptLoader {\n    private _loadPromise?: Promise<ReCaptchaV2.ReCaptcha>;\n\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GoogleRecaptchaWindow = window\n    ) {}\n\n    load(): Promise<ReCaptchaV2.ReCaptcha> {\n        if (!this._loadPromise) {\n            this._loadPromise = this._loadScript();\n        }\n\n        return this._loadPromise;\n    }\n\n    private _loadScript(): Promise<ReCaptchaV2.ReCaptcha> {\n        const callbackName = 'initRecaptcha';\n        const params = [\n            `onload=${callbackName}`,\n            'render=explicit',\n        ].join('&');\n\n        return new Promise((resolve, reject) => {\n            this._window[callbackName] = () => resolve(this._window.grecaptcha);\n\n            this._scriptLoader.loadScript(`//www.google.com/recaptcha/api.js?${params}`)\n                .catch(error => {\n                    this._loadPromise = undefined;\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport interface GoogleRecaptchaWindow extends Window {\n    grecaptcha?: ReCaptchaV2.ReCaptcha;\n    initRecaptcha?(): void;\n}\n","import { memoize } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\n\nconst cloneDeep = memoize(<T>(input: T): T => {\n    if (Array.isArray(input)) {\n        return input.map((value: T[keyof T]) => (\n            cloneDeepSafe(value)\n        )) as any;\n    }\n\n    if (isPlainObject(input)) {\n        return (Object.keys(input) as Array<keyof T>)\n            .reduce((result, key) => ({\n                ...result,\n                [key]: cloneDeepSafe(input[key]),\n            }), {}) as T;\n    }\n\n    return input;\n});\n\n// Use WeakMap as the MapCache, this allows for better garbage collection\n// There's a deprecated `clear` method in the lodash implementation\n// of MapCache, hence the `any`\ncloneDeep.cache = new WeakMap() as any;\n\n/**\n * This is a wrapper function for `cloneDeep`. We need it because `cloneDeep` is\n * a memoized function using an instance of `WeakMap` as its cache. Without this\n * wrapper, the memoized function will throw an error if it is called with a\n * non-object argument.\n */\nconst cloneDeepSafe = <T>(input: T): T => {\n    return typeof input === 'object' && input !== null ?\n        cloneDeep(input) :\n        input;\n};\n\n/**\n * Clone the return value of a function. If the result is the same as previous\n * calls, return the previous clone instead of cloning it again.\n */\nexport default function cloneResult<T extends Func>(fn: T): T {\n    return ((...args: any[]) => cloneDeepSafe(fn(...args))) as T;\n}\n\nexport type Func = (...args: any[]) => any;\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport * as shallowEqual from 'shallowequal';\n\nimport withMemoizedCombiner from './with-memoized-combiner';\n\nconst createShallowEqualSelector = createSelectorCreator(\n    defaultMemoize,\n    (a: any, b: any) => shallowEqual(a, b)\n);\n\nexport default withMemoizedCombiner(createShallowEqualSelector);\n","import { createCheckoutStoreErrorSelectorFactory, createCheckoutStoreSelectorFactory, createCheckoutStoreStatusSelectorFactory, CheckoutSelectors, InternalCheckoutSelectors } from '../checkout';\n\nexport type CheckoutSelectorsFactory = (selectors: InternalCheckoutSelectors) => CheckoutSelectors;\n\nexport function createCheckoutSelectorsFactory(): CheckoutSelectorsFactory {\n    const createCheckoutStoreSelector = createCheckoutStoreSelectorFactory();\n    const createCheckoutStoreErrorSelector = createCheckoutStoreErrorSelectorFactory();\n    const createCheckoutStoreStatusSelector = createCheckoutStoreStatusSelectorFactory();\n\n    return (selectors: InternalCheckoutSelectors) => {\n        const data = createCheckoutStoreSelector(selectors);\n        const errors = createCheckoutStoreErrorSelector(selectors);\n        const statuses = createCheckoutStoreStatusSelector(selectors);\n\n        return {\n            data,\n            errors,\n            statuses,\n        };\n    };\n}\n\nexport default function createCheckoutSelectors(selectors: InternalCheckoutSelectors): CheckoutSelectors {\n    return createCheckoutSelectorsFactory()(selectors);\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { omit, values } from 'lodash';\n\nimport { Address } from '../address';\nimport { BillingAddress } from '../billing';\nimport { Cart } from '../cart';\nimport { createSelector } from '../common/selector';\nimport { cloneResult as clone } from '../common/utility';\nimport { StoreConfig } from '../config';\nimport { Coupon, GiftCertificate } from '../coupon';\nimport { Customer } from '../customer';\nimport { FormField } from '../form';\nimport { Country } from '../geography';\nimport { Order } from '../order';\nimport { PaymentMethod } from '../payment';\nimport { CardInstrument, PaymentInstrument } from '../payment/instrument';\nimport { Consignment, ShippingOption } from '../shipping';\n\nimport Checkout from './checkout';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport type Instrument = CardInstrument;\n\n/**\n * Responsible for getting the state of the current checkout.\n *\n * This object has a set of methods that allow you to get a specific piece of\n * checkout information, such as shipping and billing details.\n */\nexport default interface CheckoutStoreSelector {\n    /**\n     * Gets the current checkout.\n     *\n     * @returns The current checkout if it is loaded, otherwise undefined.\n     */\n    getCheckout(): Checkout | undefined;\n\n    /**\n     * Gets the current order.\n     *\n     * @returns The current order if it is loaded, otherwise undefined.\n     */\n    getOrder(): Order | undefined;\n\n    /**\n     * Gets the checkout configuration of a store.\n     *\n     * @returns The configuration object if it is loaded, otherwise undefined.\n     */\n    getConfig(): StoreConfig | undefined;\n\n    /**\n     * Gets the shipping address of the current checkout.\n     *\n     * If the address is partially complete, it may not have shipping options\n     * associated with it.\n     *\n     * @returns The shipping address object if it is loaded, otherwise\n     * undefined.\n     */\n    getShippingAddress(): Address | undefined;\n\n    /**\n     * Gets a list of shipping options available for the shipping address.\n     *\n     * If there is no shipping address assigned to the current checkout, the\n     * list of shipping options will be empty.\n     *\n     * @returns The list of shipping options if any, otherwise undefined.\n     */\n    getShippingOptions(): ShippingOption[] | undefined;\n\n    /**\n     * Gets a list of consignments.\n     *\n     * If there are no consignments created for to the current checkout, the\n     * list will be empty.\n     *\n     * @returns The list of consignments if any, otherwise undefined.\n     */\n    getConsignments(): Consignment[] | undefined;\n\n    /**\n     * Gets the selected shipping option for the current checkout.\n     *\n     * @returns The shipping option object if there is a selected option,\n     * otherwise undefined.\n     */\n    getSelectedShippingOption(): ShippingOption | undefined;\n\n    /**\n     * Gets a list of countries available for shipping.\n     *\n     * @returns The list of countries if it is loaded, otherwise undefined.\n     */\n    getShippingCountries(): Country[] | undefined;\n\n    /**\n     * Gets the billing address of an order.\n     *\n     * @returns The billing address object if it is loaded, otherwise undefined.\n     */\n    getBillingAddress(): BillingAddress | undefined;\n\n    /**\n     * Gets a list of countries available for billing.\n     *\n     * @returns The list of countries if it is loaded, otherwise undefined.\n     */\n    getBillingCountries(): Country[] | undefined;\n\n    /**\n     * Gets a list of payment methods available for checkout.\n     *\n     * @returns The list of payment methods if it is loaded, otherwise undefined.\n     */\n    getPaymentMethods(): PaymentMethod[] | undefined;\n\n    /**\n     * Gets a payment method by an id.\n     *\n     * The method returns undefined if unable to find a payment method with the\n     * specified id, either because it is not available for the customer, or it\n     * is not loaded.\n     *\n     * @param methodId - The identifier of the payment method.\n     * @param gatewayId - The identifier of a payment provider providing the\n     * payment method.\n     * @returns The payment method object if loaded and available, otherwise,\n     * undefined.\n     */\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined;\n\n    /**\n     * Gets the payment method that is selected for checkout.\n     *\n     * @returns The payment method object if there is a selected method;\n     * undefined if otherwise.\n     */\n    getSelectedPaymentMethod(): PaymentMethod | undefined;\n\n    /**\n     * Gets the current cart.\n     *\n     * @returns The current cart object if it is loaded, otherwise undefined.\n     */\n    getCart(): Cart | undefined;\n\n    /**\n     * Gets a list of coupons that are applied to the current checkout.\n     *\n     * @returns The list of applied coupons if there is any, otherwise undefined.\n     */\n    getCoupons(): Coupon[] | undefined;\n\n    /**\n     * Gets a list of gift certificates that are applied to the current checkout.\n     *\n     * @returns The list of applied gift certificates if there is any, otherwise undefined.\n     */\n    getGiftCertificates(): GiftCertificate[] | undefined;\n\n    /**\n     * Gets the current customer.\n     *\n     * @returns The current customer object if it is loaded, otherwise\n     * undefined.\n     */\n    getCustomer(): Customer | undefined;\n\n    /**\n     * Checks if payment data is required or not.\n     *\n     * If payment data is required, customers should be prompted to enter their\n     * payment details.\n     *\n     * ```js\n     * if (state.checkout.isPaymentDataRequired()) {\n     *     // Render payment form\n     * } else {\n     *     // Render \"Payment is not required for this order\" message\n     * }\n     * ```\n     *\n     * @param useStoreCredit - If true, check whether payment data is required\n     * with store credit applied; otherwise, check without store credit.\n     * @returns True if payment data is required, otherwise false.\n     */\n    isPaymentDataRequired(useStoreCredit?: boolean): boolean;\n\n    /**\n     * Checks if payment data is submitted or not.\n     *\n     * If payment data is already submitted using a payment method, customers\n     * should not be prompted to enter their payment details again.\n     *\n     * @param methodId - The identifier of the payment method.\n     * @param gatewayId - The identifier of a payment provider providing the\n     * payment method.\n     * @returns True if payment data is submitted, otherwise false.\n     */\n    isPaymentDataSubmitted(methodId: string, gatewayId?: string): boolean;\n\n    /**\n     * Gets a list of payment instruments associated with the current customer.\n     *\n     * @returns The list of payment instruments if it is loaded, otherwise undefined.\n     */\n    getInstruments(): Instrument[] | undefined;\n    getInstruments(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n\n    /**\n     * Gets a set of form fields that should be presented to customers in order\n     * to capture their billing address for a specific country.\n     *\n     * @param countryCode - A 2-letter country code (ISO 3166-1 alpha-2).\n     * @returns The set of billing address form fields if it is loaded,\n     * otherwise undefined.\n     */\n    getBillingAddressFields(countryCode: string): FormField[];\n\n    /**\n     * Gets a set of form fields that should be presented to customers in order\n     * to capture their shipping address for a specific country.\n     *\n     * @param countryCode - A 2-letter country code (ISO 3166-1 alpha-2).\n     * @returns The set of shipping address form fields if it is loaded,\n     * otherwise undefined.\n     */\n    getShippingAddressFields(countryCode: string): FormField[];\n}\n\nexport type CheckoutStoreSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreSelector;\n\nexport function createCheckoutStoreSelectorFactory(): CheckoutStoreSelectorFactory {\n    const getCheckout = createSelector(\n        ({ checkout }: InternalCheckoutSelectors) => checkout.getCheckout,\n        getCheckout => clone(getCheckout)\n    );\n\n    const getOrder = createSelector(\n        ({ order }: InternalCheckoutSelectors) => order.getOrder,\n        getOrder => clone(getOrder)\n    );\n\n    const getConfig = createSelector(\n        ({ config }: InternalCheckoutSelectors) => config.getStoreConfig,\n        getStoreConfig => clone(getStoreConfig)\n    );\n\n    const getShippingAddress = createSelector(\n        ({ shippingAddress }: InternalCheckoutSelectors) => shippingAddress.getShippingAddress,\n        ({ config }: InternalCheckoutSelectors) => config.getContextConfig,\n        (getShippingAddress, getContextConfig) => clone(() => {\n            const shippingAddress = getShippingAddress();\n            const context = getContextConfig();\n\n            if (!shippingAddress) {\n                if (!context || !context.geoCountryCode) {\n                    return;\n                }\n\n                return {\n                    firstName: '',\n                    lastName: '',\n                    company: '',\n                    address1: '',\n                    address2: '',\n                    city: '',\n                    stateOrProvince: '',\n                    stateOrProvinceCode: '',\n                    postalCode: '',\n                    country: '',\n                    phone: '',\n                    customFields: [],\n                    countryCode: context.geoCountryCode,\n                };\n            }\n\n            return shippingAddress;\n        })\n    );\n\n    const getShippingOptions = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(() => {\n            const consignments = getConsignments();\n\n            if (consignments && consignments.length) {\n                return consignments[0].availableShippingOptions;\n            }\n        })\n    );\n\n    const getConsignments = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(getConsignments)\n    );\n\n    const getSelectedShippingOption = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(() => {\n            const consignments = getConsignments();\n\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return consignments[0].selectedShippingOption;\n        })\n    );\n\n    const getShippingCountries = createSelector(\n        ({ shippingCountries }: InternalCheckoutSelectors) => shippingCountries.getShippingCountries,\n        getShippingCountries => clone(getShippingCountries)\n    );\n\n    const getBillingAddress = createSelector(\n        ({ billingAddress }: InternalCheckoutSelectors) => billingAddress.getBillingAddress,\n        ({ config }: InternalCheckoutSelectors) => config.getContextConfig,\n        (getBillingAddress, getContextConfig) => clone(() => {\n            const billingAddress = getBillingAddress();\n            const context = getContextConfig();\n            const isEmptyBillingAddress = !billingAddress ||\n                values(omit(billingAddress, 'email', 'id')).every(val => !val || !val.length);\n\n            if (isEmptyBillingAddress) {\n                if (!context || !context.geoCountryCode) {\n                    return billingAddress;\n                }\n\n                return {\n                    id: billingAddress ? billingAddress.id : '',\n                    firstName: '',\n                    lastName: '',\n                    company: '',\n                    address1: '',\n                    address2: '',\n                    city: '',\n                    email: billingAddress ? billingAddress.email : '',\n                    stateOrProvince: '',\n                    stateOrProvinceCode: '',\n                    postalCode: '',\n                    country: '',\n                    phone: '',\n                    customFields: [],\n                    countryCode: context.geoCountryCode,\n                };\n            }\n\n            return billingAddress;\n        })\n    );\n\n    const getBillingCountries = createSelector(\n        ({ countries }: InternalCheckoutSelectors) => countries.getCountries,\n        getCountries => clone(getCountries)\n    );\n\n    const getPaymentMethods = createSelector(\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethods,\n        getPaymentMethods => clone(getPaymentMethods)\n    );\n\n    const getPaymentMethod = createSelector(\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        getPaymentMethod => clone(getPaymentMethod)\n    );\n\n    const getSelectedPaymentMethod = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.getPaymentId,\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        (getPaymentId, getPaymentMethod) => clone(() => {\n            const payment = getPaymentId();\n\n            return payment && getPaymentMethod(payment.providerId, payment.gatewayId);\n        })\n    );\n\n    const getCart = createSelector(\n        ({ cart }: InternalCheckoutSelectors) => cart.getCart,\n        getCart => clone(getCart)\n    );\n\n    const getCoupons = createSelector(\n        ({ coupons }: InternalCheckoutSelectors) => coupons.getCoupons,\n        getCoupons => clone(getCoupons)\n    );\n\n    const getGiftCertificates = createSelector(\n        ({ giftCertificates }: InternalCheckoutSelectors) => giftCertificates.getGiftCertificates,\n        getGiftCertificates => clone(getGiftCertificates)\n    );\n\n    const getCustomer = createSelector(\n        ({ customer }: InternalCheckoutSelectors) => customer.getCustomer,\n        getCustomer => clone(getCustomer)\n    );\n\n    const isPaymentDataRequired = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.isPaymentDataRequired,\n        isPaymentDataRequired => clone(isPaymentDataRequired)\n    );\n\n    const isPaymentDataSubmitted = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.isPaymentDataSubmitted,\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        (isPaymentDataSubmitted, getPaymentMethod) => clone((methodId: string, gatewayId?: string) => {\n            return isPaymentDataSubmitted(getPaymentMethod(methodId, gatewayId));\n        })\n    );\n\n    const getInstruments = createSelector(\n        ({ instruments }: InternalCheckoutSelectors) => instruments.getInstruments,\n        ({ instruments }: InternalCheckoutSelectors) => instruments.getInstrumentsByPaymentMethod,\n        (getInstruments, getInstrumentsByPaymentMethod) => {\n            function getInstrumentsSelector(): Instrument[] | undefined;\n            function getInstrumentsSelector(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n            function getInstrumentsSelector(paymentMethod?: PaymentMethod): PaymentInstrument[] | undefined {\n                return paymentMethod ? getInstrumentsByPaymentMethod(paymentMethod) : getInstruments();\n            }\n\n            return clone(getInstrumentsSelector);\n        }\n    );\n\n    const getBillingAddressFields = createSelector(\n        ({ form }: InternalCheckoutSelectors) => form.getBillingAddressFields,\n        ({ countries }: InternalCheckoutSelectors) => countries.getCountries,\n        (getBillingAddressFields, getCountries) => clone((countryCode: string) => {\n            return getBillingAddressFields(getCountries(), countryCode);\n        })\n    );\n\n    const getShippingAddressFields = createSelector(\n        ({ form }: InternalCheckoutSelectors) => form.getShippingAddressFields,\n        ({ shippingCountries }: InternalCheckoutSelectors) => shippingCountries.getShippingCountries,\n        (getShippingAddressFields, getShippingCountries) => clone((countryCode: string) => {\n            return getShippingAddressFields(getShippingCountries(), countryCode);\n        })\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreSelector => {\n        return {\n            getCheckout: getCheckout(state),\n            getOrder: getOrder(state),\n            getConfig: getConfig(state),\n            getShippingAddress: getShippingAddress(state),\n            getShippingOptions: getShippingOptions(state),\n            getConsignments: getConsignments(state),\n            getSelectedShippingOption: getSelectedShippingOption(state),\n            getShippingCountries: getShippingCountries(state),\n            getBillingAddress: getBillingAddress(state),\n            getBillingCountries: getBillingCountries(state),\n            getPaymentMethods: getPaymentMethods(state),\n            getPaymentMethod: getPaymentMethod(state),\n            getSelectedPaymentMethod: getSelectedPaymentMethod(state),\n            getCart: getCart(state),\n            getCoupons: getCoupons(state),\n            getGiftCertificates: getGiftCertificates(state),\n            getCustomer: getCustomer(state),\n            isPaymentDataRequired: isPaymentDataRequired(state),\n            isPaymentDataSubmitted: isPaymentDataSubmitted(state),\n            getInstruments: getInstruments(state),\n            getBillingAddressFields: getBillingAddressFields(state),\n            getShippingAddressFields: getShippingAddressFields(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector, createShallowEqualSelector } from '../common/selector';\nimport { Omit } from '../common/types';\n\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\n/**\n * Responsible for getting the error of any asynchronous checkout action, if\n * there is any.\n *\n * This object has a set of getters that would return an error if an action is\n * not executed successfully. For example, if you are unable to submit an order,\n * you can use this object to retrieve the reason for the failure.\n */\nexport default interface CheckoutStoreErrorSelector {\n    getError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current checkout.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadCheckoutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update the current checkout.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateCheckoutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to submit the current order.\n     *\n     * @returns The error object if unable to submit, otherwise undefined.\n     */\n    getSubmitOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to finalize the current order.\n     *\n     * @returns The error object if unable to finalize, otherwise undefined.\n     */\n    getFinalizeOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current order.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current cart.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadCartError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load billing countries.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadBillingCountriesError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load shipping countries.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadShippingCountriesError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load payment methods.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadPaymentMethodsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load a specific payment method.\n     *\n     * @param methodId - The identifier of the payment method to load.\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadPaymentMethodError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize a specific payment method.\n     *\n     * @param methodId - The identifier of the payment method to initialize.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializePaymentError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to sign in.\n     *\n     * @returns The error object if unable to sign in, otherwise undefined.\n     */\n    getSignInError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to sign out.\n     *\n     * @returns The error object if unable to sign out, otherwise undefined.\n     */\n    getSignOutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize the customer step of a checkout\n     * process.\n     *\n     * @param methodId - The identifer of the initialization method to execute.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializeCustomerError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to load shipping options.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadShippingOptionsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to select a shipping option.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to select, otherwise undefined.\n     */\n    getSelectShippingOptionError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to continue as guest.\n     *\n     * @returns The error object if unable to continue, otherwise undefined.\n     */\n    getContinueAsGuestError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update billing address.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateBillingAddressError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update shipping address.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateShippingAddressError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to delete a consignment.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to delete, otherwise undefined.\n     */\n    getDeleteConsignmentError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to update a consignment.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateConsignmentError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to create consignments.\n     *\n     * @returns The error object if unable to create, otherwise undefined.\n     */\n    getCreateConsignmentsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize the shipping step of a checkout\n     * process.\n     *\n     * @param methodId - The identifer of the initialization method to execute.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializeShippingError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to apply store credit.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyStoreCreditError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to apply a coupon code.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyCouponError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to remove a coupon code.\n     *\n     * @returns The error object if unable to remove, otherwise undefined.\n     */\n    getRemoveCouponError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to apply a gift certificate.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyGiftCertificateError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to remove a gift certificate.\n     *\n     * @returns The error object if unable to remove, otherwise undefined.\n     */\n    getRemoveGiftCertificateError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to load payment instruments.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadInstrumentsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to delete a payment instrument.\n     *\n     * @param instrumentId - The identifier of the payment instrument to delete.\n     * @returns The error object if unable to delete, otherwise undefined.\n     */\n    getDeleteInstrumentError(instrumentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the checkout configuration of a store.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadConfigError(): Error | undefined;\n}\n\nexport type CheckoutStoreErrorSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreErrorSelector;\n\nexport function createCheckoutStoreErrorSelectorFactory(): CheckoutStoreErrorSelectorFactory {\n    const getError = createShallowEqualSelector(\n        (selector: Omit<CheckoutStoreErrorSelector, 'getError'>) => selector,\n        selector => () => {\n            for (const key of Object.keys(selector) as Array<keyof Omit<CheckoutStoreErrorSelector, 'getError'>>) {\n                const error = selector[key]();\n\n                if (error) {\n                    return error;\n                }\n            }\n        }\n    );\n\n    const getSelectShippingOptionError = createSelector(\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.getSelectOptionError,\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getUpdateShippingOptionError,\n        (getSelectOptionError, getUpdateShippingOptionError) => (consignmentId?: string) => {\n            return (\n                getSelectOptionError() ||\n                getUpdateShippingOptionError(consignmentId)\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreErrorSelector => {\n        const selector = {\n            getLoadCheckoutError: state.checkout.getLoadError,\n            getUpdateCheckoutError: state.checkout.getUpdateError,\n            getSubmitOrderError: state.paymentStrategies.getExecuteError,\n            getFinalizeOrderError: state.paymentStrategies.getFinalizeError,\n            getLoadOrderError: state.order.getLoadError,\n            getLoadCartError: state.cart.getLoadError,\n            getLoadBillingCountriesError: state.countries.getLoadError,\n            getLoadShippingCountriesError: state.shippingCountries.getLoadError,\n            getLoadPaymentMethodsError: state.paymentMethods.getLoadError,\n            getLoadPaymentMethodError: state.paymentMethods.getLoadMethodError,\n            getInitializePaymentError: state.paymentStrategies.getInitializeError,\n            getSignInError: state.customerStrategies.getSignInError,\n            getSignOutError: state.customerStrategies.getSignOutError,\n            getInitializeCustomerError: state.customerStrategies.getInitializeError,\n            getLoadShippingOptionsError: state.consignments.getLoadShippingOptionsError,\n            getSelectShippingOptionError: getSelectShippingOptionError(state),\n            getContinueAsGuestError: state.billingAddress.getContinueAsGuestError,\n            getUpdateBillingAddressError: state.billingAddress.getUpdateError,\n            getUpdateShippingAddressError: state.shippingStrategies.getUpdateAddressError,\n            getDeleteConsignmentError: state.consignments.getDeleteError,\n            getUpdateConsignmentError: state.consignments.getUpdateError,\n            getCreateConsignmentsError: state.consignments.getCreateError,\n            getInitializeShippingError: state.shippingStrategies.getInitializeError,\n            getApplyStoreCreditError: state.storeCredit.getApplyError,\n            getApplyCouponError: state.coupons.getApplyError,\n            getRemoveCouponError: state.coupons.getRemoveError,\n            getApplyGiftCertificateError: state.giftCertificates.getApplyError,\n            getRemoveGiftCertificateError: state.giftCertificates.getRemoveError,\n            getLoadInstrumentsError: state.instruments.getLoadError,\n            getDeleteInstrumentError: state.instruments.getDeleteError,\n            getLoadConfigError: state.config.getLoadError,\n        };\n\n        return {\n            getError: getError(selector),\n            ...selector,\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector, createShallowEqualSelector } from '../common/selector';\nimport { Omit } from '../common/types';\n\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\n/**\n * Responsible for checking the statuses of various asynchronous actions related\n * to checkout.\n *\n * This object has a set of getters that return true if an action is in\n * progress. For example, you can check whether a customer is submitting an\n * order and waiting for the request to complete.\n */\nexport default interface CheckoutStoreStatusSelector {\n    /**\n     * Checks whether any checkout action is pending.\n     *\n     * @returns True if there is a pending action, otherwise false.\n     */\n    isPending(): boolean;\n\n    /**\n     * Checks whether the current checkout is loading.\n     *\n     * @returns True if the current checkout is loading, otherwise false.\n     */\n    isLoadingCheckout(): boolean;\n\n    /**\n     * Checks whether the current checkout is being updated.\n     *\n     * @returns True if the current checkout is being updated, otherwise false.\n     */\n    isUpdatingCheckout(): boolean;\n\n    /**\n     * Checks whether spam check is executing.\n     *\n     * @returns True if the current checkout is being updated, otherwise false.\n     */\n    isExecutingSpamCheck(): boolean;\n\n    /**\n     * Checks whether the current order is submitting.\n     *\n     * @returns True if the current order is submitting, otherwise false.\n     */\n    isSubmittingOrder(): boolean;\n\n    /**\n     * Checks whether the current order is finalizing.\n     *\n     * @returns True if the current order is finalizing, otherwise false.\n     */\n    isFinalizingOrder(): boolean;\n\n    /**\n     * Checks whether the current order is loading.\n     *\n     * @returns True if the current order is loading, otherwise false.\n     */\n    isLoadingOrder(): boolean;\n\n    /**\n     * Checks whether the current cart is loading.\n     *\n     * @returns True if the current cart is loading, otherwise false.\n     */\n    isLoadingCart(): boolean;\n\n    /**\n     * Checks whether billing countries are loading.\n     *\n     * @returns True if billing countries are loading, otherwise false.\n     */\n    isLoadingBillingCountries(): boolean;\n\n    /**\n     * Checks whether shipping countries are loading.\n     *\n     * @returns True if shipping countries are loading, otherwise false.\n     */\n    isLoadingShippingCountries(): boolean;\n\n    /**\n     * Checks whether payment methods are loading.\n     *\n     * @returns True if payment methods are loading, otherwise false.\n     */\n    isLoadingPaymentMethods(): boolean;\n\n    /**\n     * Checks whether a specific or any payment method is loading.\n     *\n     * The method returns true if no ID is provided and at least one payment\n     * method is loading.\n     *\n     * @param methodId - The identifier of the payment method to check.\n     * @returns True if the payment method is loading, otherwise false.\n     */\n    isLoadingPaymentMethod(methodId?: string): boolean;\n\n    /**\n     * Checks whether a specific or any payment method is initializing.\n     *\n     * The method returns true if no ID is provided and at least one payment\n     * method is initializing.\n     *\n     * @param methodId - The identifier of the payment method to check.\n     * @returns True if the payment method is initializing, otherwise false.\n     */\n    isInitializingPayment(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is signing in.\n     *\n     * If an ID is provided, the method also checks whether the customer is\n     * signing in using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for signing in the\n     * current customer.\n     * @returns True if the customer is signing in, otherwise false.\n     */\n    isSigningIn(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is signing out.\n     *\n     * If an ID is provided, the method also checks whether the customer is\n     * signing out using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for signing out the\n     * current customer.\n     * @returns True if the customer is signing out, otherwise false.\n     */\n    isSigningOut(methodId?: string): boolean;\n\n    /**\n     * Checks whether the customer step is initializing.\n     *\n     * If an ID is provided, the method also checks whether the customer step is\n     * initializing using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for initializing the\n     * customer step of checkout.\n     * @returns True if the customer step is initializing, otherwise false.\n     */\n    isInitializingCustomer(methodId?: string): boolean;\n\n    /**\n     * Checks whether shipping options are loading.\n     *\n     * @returns True if shipping options are loading, otherwise false.\n     */\n    isLoadingShippingOptions(): boolean;\n\n    /**\n     * Checks whether a shipping option is being selected.\n     *\n     * A consignment ID should be provided when checking if a shipping option\n     * is being selected for a specific consignment, otherwise it will check\n     * for all consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if selecting a shipping option, otherwise false.\n     */\n    isSelectingShippingOption(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether the billing address is being updated.\n     *\n     * @returns True if updating their billing address, otherwise false.\n     */\n    isUpdatingBillingAddress(): boolean;\n\n    /**\n     * Checks whether the shopper is continuing out as a guest.\n     *\n     * @returns True if continuing as guest, otherwise false.\n     */\n    isContinuingAsGuest(): boolean;\n\n    /**\n     * Checks the shipping address is being updated.\n     *\n     * @returns True if updating their shipping address, otherwise false.\n     */\n    isUpdatingShippingAddress(): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being updated.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if updating consignment(s), otherwise false.\n     */\n    isUpdatingConsignment(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being deleted.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if deleting consignment(s), otherwise false.\n     */\n    isDeletingConsignment(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being updated.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @returns True if creating consignments, otherwise false.\n     */\n    isCreatingConsignments(): boolean;\n\n    /**\n     * Checks whether the shipping step of a checkout process is initializing.\n     *\n     * If an identifier is provided, the method also checks whether the shipping\n     * step is initializing using a specific shipping method with the same\n     * identifier.\n     *\n     * @param methodId - The identifer of the initialization method to check.\n     * @returns True if the shipping step is initializing, otherwise false.\n     */\n    isInitializingShipping(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is applying a coupon code.\n     *\n     * @returns True if applying a coupon code, otherwise false.\n     */\n    isApplyingCoupon(): boolean;\n\n    /**\n     * Checks whether the current customer is applying store credit.\n     *\n     * @returns True if applying store credit, otherwise false.\n     */\n    isApplyingStoreCredit(): boolean;\n\n    /**\n     * Checks whether the current customer is removing a coupon code.\n     *\n     * @returns True if removing a coupon code, otherwise false.\n     */\n    isRemovingCoupon(): boolean;\n\n    /**\n     * Checks whether the current customer is applying a gift certificate.\n     *\n     * @returns True if applying a gift certificate, otherwise false.\n     */\n    isApplyingGiftCertificate(): boolean;\n\n    /**\n     * Checks whether the current customer is removing a gift certificate.\n     *\n     * @returns True if removing a gift certificate, otherwise false.\n     */\n    isRemovingGiftCertificate(): boolean;\n\n    /**\n     * Checks whether the current customer's payment instruments are loading.\n     *\n     * @returns True if payment instruments are loading, otherwise false.\n     */\n    isLoadingInstruments(): boolean;\n\n    /**\n     * Checks whether the current customer is deleting a payment instrument.\n     *\n     * @returns True if deleting a payment instrument, otherwise false.\n     */\n    isDeletingInstrument(instrumentId?: string): boolean;\n\n    /**\n     * Checks whether the checkout configuration of a store is loading.\n     *\n     * @returns True if the configuration is loading, otherwise false.\n     */\n    isLoadingConfig(): boolean;\n\n    /**\n     * Checks whether the customer step of a checkout is in a pending state.\n     *\n     * The customer step is considered to be pending if it is in the process of\n     * initializing, signing in, signing out, and/or interacting with a customer\n     * widget.\n     *\n     * @returns True if the customer step is pending, otherwise false.\n     */\n    isCustomerStepPending(): boolean;\n\n    /**\n     * Checks whether the payment step of a checkout is in a pending state.\n     *\n     * The payment step is considered to be pending if it is in the process of\n     * initializing, submitting an order, finalizing an order, and/or\n     * interacting with a payment widget.\n     *\n     * @returns True if the payment step is pending, otherwise false.\n     */\n    isPaymentStepPending(): boolean;\n}\n\nexport type CheckoutStoreStatusSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreStatusSelector;\n\nexport function createCheckoutStoreStatusSelectorFactory(): CheckoutStoreStatusSelectorFactory {\n    const isPending = createShallowEqualSelector(\n        (selector: Omit<CheckoutStoreStatusSelector, 'isPending'>) => selector,\n        selector => () => {\n            return (Object.keys(selector) as Array<keyof Omit<CheckoutStoreStatusSelector, 'isPending'>>)\n                .some(key => selector[key]());\n        }\n    );\n\n    const isSelectingShippingOption = createSelector(\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.isSelectingOption,\n        ({ consignments }: InternalCheckoutSelectors) => consignments.isUpdatingShippingOption,\n        (isSelectingOption, isUpdatingShippingOption) => (consignmentId?: string) => {\n            return (\n                isSelectingOption() ||\n                isUpdatingShippingOption(consignmentId)\n            );\n        }\n    );\n\n    const isCustomerStepPending = createSelector(\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isInitializing,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isSigningIn,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isSigningOut,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isWidgetInteracting,\n        (isInitializing, isSigningIn, isSigningOut, isWidgetInteracting) => (methodId?: string) => {\n            return (\n                isInitializing(methodId) ||\n                isSigningIn(methodId) ||\n                isSigningOut(methodId) ||\n                isWidgetInteracting(methodId)\n            );\n        }\n    );\n\n    const isPaymentStepPending = createSelector(\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isInitializing,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isExecuting,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isFinalizing,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isWidgetInteracting,\n        (isInitializing, isExecuting, isFinalizing, isWidgetInteracting) => (methodId?: string) => {\n            return (\n                isInitializing(methodId) ||\n                isExecuting(methodId) ||\n                isFinalizing(methodId) ||\n                isWidgetInteracting(methodId)\n            );\n        }\n    );\n\n    const isSubmittingOrder = createSelector(\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isExecuting,\n        ({ checkout }: InternalCheckoutSelectors) => checkout.isExecutingSpamCheck, // Remove this when CheckoutService#initializeSpamProtection is deprecated\n        (isExecuting, isExecutingSpamCheck) => (methodId?: string) => {\n            return (\n                isExecuting(methodId) ||\n                isExecutingSpamCheck()\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreStatusSelector => {\n        const selector = {\n            isLoadingCheckout: state.checkout.isLoading,\n            isUpdatingCheckout: state.checkout.isUpdating,\n            isExecutingSpamCheck: state.checkout.isExecutingSpamCheck,\n            isSubmittingOrder: isSubmittingOrder(state),\n            isFinalizingOrder: state.paymentStrategies.isFinalizing,\n            isLoadingOrder: state.order.isLoading,\n            isLoadingCart: state.cart.isLoading,\n            isLoadingBillingCountries: state.countries.isLoading,\n            isLoadingShippingCountries: state.shippingCountries.isLoading,\n            isLoadingPaymentMethods: state.paymentMethods.isLoading,\n            isLoadingPaymentMethod: state.paymentMethods.isLoadingMethod,\n            isInitializingPayment: state.paymentStrategies.isInitializing,\n            isSigningIn: state.customerStrategies.isSigningIn,\n            isSigningOut: state.customerStrategies.isSigningOut,\n            isInitializingCustomer: state.customerStrategies.isInitializing,\n            isLoadingShippingOptions: state.consignments.isLoadingShippingOptions,\n            isSelectingShippingOption: isSelectingShippingOption(state),\n            isUpdatingBillingAddress: state.billingAddress.isUpdating,\n            isContinuingAsGuest: state.billingAddress.isContinuingAsGuest,\n            isUpdatingShippingAddress: state.shippingStrategies.isUpdatingAddress,\n            isUpdatingConsignment: state.consignments.isUpdating,\n            isDeletingConsignment: state.consignments.isDeleting,\n            isCreatingConsignments: state.consignments.isCreating,\n            isInitializingShipping: state.shippingStrategies.isInitializing,\n            isApplyingStoreCredit: state.storeCredit.isApplying,\n            isApplyingCoupon: state.coupons.isApplying,\n            isRemovingCoupon: state.coupons.isRemoving,\n            isApplyingGiftCertificate: state.giftCertificates.isApplying,\n            isRemovingGiftCertificate: state.giftCertificates.isRemoving,\n            isLoadingInstruments: state.instruments.isLoading,\n            isDeletingInstrument: state.instruments.isDeleting,\n            isLoadingConfig: state.config.isLoading,\n            isCustomerStepPending: isCustomerStepPending(state),\n            isPaymentStepPending: isPaymentStepPending(state),\n        };\n\n        return {\n            isPending: isPending(selector),\n            ...selector,\n        };\n    });\n}\n","import { toSingleLine } from '../utility';\n\nexport default class ErrorMessageTransformer<TError extends Error = Error> {\n    constructor(\n        private _messageCustomizer: (type: TError) => string\n    ) {}\n\n    transform(error: TError): TError {\n        error.message = toSingleLine(this._messageCustomizer(error));\n\n        return error;\n    }\n}\n","export default function toSingleLine(input?: string) {\n    if (!input) {\n        return '';\n    }\n\n    return input.split(/(?:\\r\\n|\\n|\\r)/)\n        .map(line => line.replace(/^\\s+/gm, ''))\n        .join(' ')\n        .trim();\n}\n","import { Action, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { BillingAddressActionCreator, BillingAddressRequestBody } from '../billing';\nimport { createDataStoreProjection, DataStoreProjection } from '../common/data-store';\nimport { ErrorActionCreator, ErrorMessageTransformer } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\nimport { bindDecorator as bind } from '../common/utility';\nimport { ConfigActionCreator } from '../config';\nimport { CouponActionCreator, GiftCertificateActionCreator } from '../coupon';\nimport { CustomerCredentials, CustomerInitializeOptions, CustomerRequestOptions, CustomerStrategyActionCreator, GuestCredentials } from '../customer';\nimport { CountryActionCreator } from '../geography';\nimport { OrderActionCreator, OrderRequestBody } from '../order';\nimport { PaymentInitializeOptions, PaymentMethodActionCreator, PaymentRequestOptions, PaymentStrategyActionCreator } from '../payment';\nimport { InstrumentActionCreator } from '../payment/instrument';\nimport { ConsignmentsRequestBody, ConsignmentActionCreator, ConsignmentAssignmentRequestBody, ConsignmentUpdateRequestBody, ShippingCountryActionCreator, ShippingInitializeOptions, ShippingRequestOptions, ShippingStrategyActionCreator } from '../shipping';\nimport { SpamProtectionActionCreator, SpamProtectionOptions } from '../spam-protection';\nimport { StoreCreditActionCreator } from '../store-credit';\n\nimport { CheckoutRequestBody } from './checkout';\nimport CheckoutActionCreator from './checkout-action-creator';\nimport CheckoutParams from './checkout-params';\nimport CheckoutSelectors from './checkout-selectors';\nimport CheckoutStore from './checkout-store';\nimport { createCheckoutSelectorsFactory, CheckoutSelectorsFactory } from './create-checkout-selectors';\nimport createCheckoutServiceErrorTransformer from './create-checkout-service-error-transformer';\n\n/**\n * Responsible for completing the checkout process for the current customer.\n *\n * This object can be used to collect all information that is required for\n * checkout, such as shipping and billing information. It can also be used to\n * retrieve the current checkout state and subscribe to its changes.\n */\n@bind\nexport default class CheckoutService {\n    private _storeProjection: DataStoreProjection<CheckoutSelectors>;\n    private _errorTransformer: ErrorMessageTransformer;\n    private _selectorsFactory: CheckoutSelectorsFactory;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _configActionCreator: ConfigActionCreator,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _countryActionCreator: CountryActionCreator,\n        private _couponActionCreator: CouponActionCreator,\n        private _customerStrategyActionCreator: CustomerStrategyActionCreator,\n        private _errorActionCreator: ErrorActionCreator,\n        private _giftCertificateActionCreator: GiftCertificateActionCreator,\n        private _instrumentActionCreator: InstrumentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _shippingCountryActionCreator: ShippingCountryActionCreator,\n        private _shippingStrategyActionCreator: ShippingStrategyActionCreator,\n        private _spamProtectionActionCreator: SpamProtectionActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator\n    ) {\n        this._errorTransformer = createCheckoutServiceErrorTransformer();\n        this._selectorsFactory = createCheckoutSelectorsFactory();\n        this._storeProjection = createDataStoreProjection(this._store, this._selectorsFactory);\n    }\n\n    /**\n     * Returns a snapshot of the current checkout state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * checkout state. You can query the state by calling any of its getter\n     * methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.data.getOrder());\n     * console.log(state.errors.getSubmitOrderError());\n     * console.log(state.statuses.isSubmittingOrder());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutSelectors {\n        return this._storeProjection.getState();\n    }\n\n    /**\n     * Notifies all subscribers with the current state.\n     *\n     * When this method gets called, the subscribers get called regardless if\n     * they have any filters applied.\n     */\n    notifyState(): void {\n        this._storeProjection.notifyState();\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the checkout state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.data.getCart());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.data.getCart();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.data.getCart())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutSelectors) => void,\n        ...filters: Array<(state: CheckoutSelectors) => any>\n    ): () => void {\n        return this._storeProjection.subscribe(subscriber, ...filters);\n    }\n\n    /**\n     * Loads the current checkout.\n     *\n     * This method can only be called if there is an active checkout. Also, it\n     * can only retrieve data that belongs to the current customer. When it is\n     * successfully executed, you can retrieve the data by calling\n     * `CheckoutStoreSelector#getCheckout`.\n     *\n     * ```js\n     * const state = await service.loadCheckout('0cfd6c06-57c3-4e29-8d7a-de55cc8a9052');\n     *\n     * console.log(state.data.getCheckout());\n     * ```\n     *\n     * @param id - The identifier of the checkout to load, or the default checkout if not provided.\n     * @param options - Options for loading the current checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    loadCheckout(id?: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors> {\n        return this._dispatch(id ?\n            this._checkoutActionCreator.loadCheckout(id, options) :\n            this._checkoutActionCreator.loadDefaultCheckout(options)\n        );\n    }\n\n    /**\n     * Updates specific properties of the current checkout.\n     *\n     * ```js\n     * const state = await service.updateCheckout(checkout);\n     *\n     * console.log(state.data.getCheckout());\n     * ```\n     *\n     * @param payload - The checkout properties to be updated.\n     * @param options - Options for loading the current checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    updateCheckout(payload: CheckoutRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._checkoutActionCreator.updateCheckout(payload, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Loads an order by an id.\n     *\n     * The method can only retrieve an order if the order belongs to the current\n     * customer. If it is successfully executed, the data can be retrieved by\n     * calling `CheckoutStoreSelector#getOrder`.\n     *\n     * ```js\n     * const state = await service.loadOrder(123);\n     *\n     * console.log(state.data.getOrder());\n     * ```\n     *\n     * @param orderId - The identifier of the order to load.\n     * @param options - Options for loading the order.\n     * @returns A promise that resolves to the current state.\n     */\n    loadOrder(orderId: number, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const loadCheckoutAction = this._orderActionCreator.loadOrder(orderId, options);\n        const loadConfigAction = this._configActionCreator.loadConfig(options);\n\n        return Promise.all([\n            this._dispatch(loadCheckoutAction),\n            this._dispatch(loadConfigAction, { queueId: 'config' }),\n        ])\n            .then(() => this.getState());\n    }\n\n    /**\n     * Submits an order, thereby completing a checkout process.\n     *\n     * Before you can submit an order, you must initialize the payment method\n     * chosen by the customer by calling `CheckoutService#initializePayment`.\n     *\n     * ```js\n     * await service.initializePayment({ methodId: 'braintree' });\n     * await service.submitOrder({\n     *     payment: {\n     *         methodId: 'braintree',\n     *         paymentData: {\n     *             ccExpiry: { month: 10, year: 20 },\n     *             ccName: 'BigCommerce',\n     *             ccNumber: '4111111111111111',\n     *             ccCvv: 123,\n     *         },\n     *     },\n     * });\n     * ```\n     *\n     * You are not required to include `paymentData` if the order does not\n     * require additional payment details. For example, the customer has already\n     * entered their payment details on the cart page using one of the hosted\n     * payment methods, such as PayPal. Or the customer has applied a gift\n     * certificate that exceeds the grand total amount.\n     *\n     * If the order is submitted successfully, you can retrieve the newly\n     * created order by calling `CheckoutStoreSelector#getOrder`.\n     *\n     * ```js\n     * const state = await service.submitOrder(payload);\n     *\n     * console.log(state.data.getOrder());\n     * ```\n     *\n     * @param payload - The request payload to submit for the current order.\n     * @param options - Options for submitting the current order.\n     * @returns A promise that resolves to the current state.\n     */\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.execute(payload, options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Finalizes the submission process for an order.\n     *\n     * This method is only required for certain hosted payment methods that\n     * require a customer to enter their credit card details on their website.\n     * You need to call this method once the customer has redirected back to\n     * checkout in order to complete the checkout process.\n     *\n     * If the method is called before order finalization is required or for a\n     * payment method that does not require order finalization, an error will be\n     * thrown. Conversely, if the method is called successfully, you should\n     * immediately redirect the customer to the order confirmation page.\n     *\n     * ```js\n     * try {\n     *     await service.finalizeOrderIfNeeded();\n     *\n     *     window.location.assign('/order-confirmation');\n     * } catch (error) {\n     *     if (error.type !== 'order_finalization_not_required') {\n     *         throw error;\n     *     }\n     * }\n     * ```\n     *\n     * @param options - Options for finalizing the current order.\n     * @returns A promise that resolves to the current state.\n     * @throws `OrderFinalizationNotRequiredError` error if order finalization\n     * is not required for the current order at the time of execution.\n     */\n    finalizeOrderIfNeeded(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.finalize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Loads a list of payment methods available for checkout.\n     *\n     * If a customer enters their payment details before navigating to the\n     * checkout page (i.e.: using PayPal checkout button on the cart page), only\n     * one payment method will be available for the customer - the selected\n     * payment method. Otherwise, by default, all payment methods configured by\n     * the merchant will be available for the customer.\n     *\n     * Once the method is executed successfully, you can call\n     * `CheckoutStoreSelector#getPaymentMethods` to retrieve the list of payment\n     * methods.\n     *\n     * ```js\n     * const state = service.loadPaymentMethods();\n     *\n     * console.log(state.data.getPaymentMethods());\n     * ```\n     *\n     * @param options - Options for loading the payment methods that are\n     * available to the current customer.\n     * @returns A promise that resolves to the current state.\n     */\n    loadPaymentMethods(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentMethodActionCreator.loadPaymentMethods(options);\n\n        return this._dispatch(action, { queueId: 'paymentMethods' });\n    }\n\n    /**\n     * Loads a payment method by an id.\n     *\n     * This method does not work with multi-option payment providers. Due to its\n     * limitation, it is deprecated and will be removed in the future.\n     *\n     * @deprecated\n     * @internal\n     * @param methodId - The identifier for the payment method to load.\n     * @param options - Options for loading the payment method.\n     * @returns A promise that resolves to the current state.\n     */\n    loadPaymentMethod(methodId: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentMethodActionCreator.loadPaymentMethod(methodId, options);\n\n        return this._dispatch(action, { queueId: 'paymentMethods' });\n    }\n\n    /**\n     * Initializes the payment step of a checkout process.\n     *\n     * Before a payment method can accept payment details, it must first be\n     * initialized. Some payment methods require you to provide additional\n     * initialization options. For example, Amazon requires a container ID in\n     * order to initialize their payment widget.\n     *\n     * ```js\n     * await service.initializePayment({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'walletWidget',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the payment step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializePayment(options: PaymentInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * De-initializes the payment step of a checkout process.\n     *\n     * The method should be called once you no longer require a payment method\n     * to be initialized. It can perform any necessary clean-up behind the\n     * scene, i.e.: remove DOM nodes or event handlers that are attached as a\n     * result of payment initialization.\n     *\n     * ```js\n     * await service.deinitializePayment({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the payment step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializePayment(options: PaymentRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Loads a list of countries available for billing.\n     *\n     * Once you make a successful request, you will be able to retrieve the list\n     * of countries by calling `CheckoutStoreSelector#getBillingCountries`.\n     *\n     * ```js\n     * const state = await service.loadBillingCountries();\n     *\n     * console.log(state.data.getBillingCountries());\n     * ```\n     *\n     * @param options - Options for loading the available billing countries.\n     * @returns A promise that resolves to the current state.\n     */\n    loadBillingCountries(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._countryActionCreator.loadCountries(options);\n\n        return this._dispatch(action, { queueId: 'billingCountries' });\n    }\n\n    /**\n     * Loads a list of countries available for shipping.\n     *\n     * The list is determined based on the shipping zones configured by a\n     * merchant. Once you make a successful call, you will be able to retrieve\n     * the list of available shipping countries by calling\n     * `CheckoutStoreSelector#getShippingCountries`.\n     *\n     * ```js\n     * const state = await service.loadShippingCountries();\n     *\n     * console.log(state.data.getShippingCountries());\n     * ```\n     *\n     * @param options - Options for loading the available shipping countries.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingCountries(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingCountryActionCreator.loadCountries(options);\n\n        return this._dispatch(action, { queueId: 'shippingCountries' });\n    }\n\n    /**\n     * Loads a set of form fields that should be presented to customers in order\n     * to capture their billing address.\n     *\n     * Once the method has been executed successfully, you can call\n     * `CheckoutStoreSelector#getBillingAddressFields` to retrieve the set of\n     * form fields.\n     *\n     * ```js\n     * const state = service.loadBillingAddressFields();\n     *\n     * console.log(state.data.getBillingAddressFields('US'));\n     * ```\n     *\n     * @param options - Options for loading the billing address form fields.\n     * @returns A promise that resolves to the current state.\n     */\n    loadBillingAddressFields(options?: RequestOptions): Promise<CheckoutSelectors> {\n        return this.loadBillingCountries(options);\n    }\n\n    /**\n     * Loads a set of form fields that should be presented to customers in order\n     * to capture their shipping address.\n     *\n     * Once the method has been executed successfully, you can call\n     * `CheckoutStoreSelector#getShippingAddressFields` to retrieve the set of\n     * form fields.\n     *\n     * ```js\n     * const state = service.loadShippingAddressFields();\n     *\n     * console.log(state.data.getShippingAddressFields('US'));\n     * ```\n     *\n     * @param options - Options for loading the shipping address form fields.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingAddressFields(options?: RequestOptions): Promise<CheckoutSelectors> {\n        return this.loadShippingCountries(options);\n    }\n\n    /**\n     * Initializes the sign-in step of a checkout process.\n     *\n     * Some payment methods, such as Amazon, have their own sign-in flow. In\n     * order to support them, this method must be called.\n     *\n     * ```js\n     * await service.initializeCustomer({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'signInButton',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the customer step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeCustomer(options?: CustomerInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * De-initializes the sign-in step of a checkout process.\n     *\n     * It should be called once you no longer want to prompt customers to sign\n     * in. It can perform any necessary clean-up behind the scene, i.e.: remove\n     * DOM nodes or event handlers that are attached as a result of customer\n     * initialization.\n     *\n     * ```js\n     * await service.deinitializeCustomer({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the customer step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeCustomer(options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Continues to check out as a guest.\n     *\n     * The customer is required to provide their email address in order to\n     * continue. Once they provide their email address, it will be stored as a\n     * part of their billing address.\n     *\n     * @param credentials - The guest credentials to use.\n     * @param options - Options for continuing as a guest.\n     * @returns A promise that resolves to the current state.\n     */\n    continueAsGuest(credentials: GuestCredentials, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._billingAddressActionCreator.continueAsGuest(credentials, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Signs into a customer's registered account.\n     *\n     * Once the customer is signed in successfully, the checkout state will be\n     * populated with information associated with the customer, such as their\n     * saved addresses. You can call `CheckoutStoreSelector#getCustomer` to\n     * retrieve the data.\n     *\n     * ```js\n     * const state = await service.signInCustomer({\n     *     email: 'foo@bar.com',\n     *     password: 'password123',\n     * });\n     *\n     * console.log(state.data.getCustomer());\n     * ```\n     *\n     * @param credentials - The credentials to be used for signing in the customer.\n     * @param options - Options for signing in the customer.\n     * @returns A promise that resolves to the current state.\n     */\n    signInCustomer(credentials: CustomerCredentials, options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.signIn(credentials, options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Signs out the current customer if they are previously signed in.\n     *\n     * Once the customer is successfully signed out, the checkout state will be\n     * reset automatically.\n     *\n     * ```js\n     * const state = await service.signOutCustomer();\n     *\n     * // The returned object should not contain information about the previously signed-in customer.\n     * console.log(state.data.getCustomer());\n     * ```\n     *\n     * @param options - Options for signing out the customer.\n     * @returns A promise that resolves to the current state.\n     */\n    signOutCustomer(options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.signOut(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Loads a list of shipping options available for checkout.\n     *\n     * Available shipping options can only be determined once a customer\n     * provides their shipping address. If the method is executed successfully,\n     * `CheckoutStoreSelector#getShippingOptions` can be called to retrieve the\n     * list of shipping options.\n     *\n     * ```js\n     * const state = await service.loadShippingOptions();\n     *\n     * console.log(state.data.getShippingOptions());\n     * ```\n     *\n     * @param options - Options for loading the available shipping options.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingOptions(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.loadShippingOptions(options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Initializes the shipping step of a checkout process.\n     *\n     * Some payment methods, such as Amazon, can provide shipping information to\n     * be used for checkout. In order to support them, this method must be\n     * called.\n     *\n     * ```js\n     * await service.initializeShipping({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'addressBook',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the shipping step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeShipping(options?: ShippingInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * De-initializes the shipping step of a checkout process.\n     *\n     * It should be called once you no longer need to collect shipping details.\n     * It can perform any necessary clean-up behind the scene, i.e.: remove DOM\n     * nodes or event handlers that are attached as a result of shipping\n     * initialization.\n     *\n     * ```js\n     * await service.deinitializeShipping({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the shipping step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeShipping(options?: ShippingRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Selects a shipping option for the current address.\n     *\n     * If a shipping option has an additional cost, the quote for the current\n     * order will be adjusted once the option is selected.\n     *\n     * ```js\n     * const state = await service.selectShippingOption('address-id', 'shipping-option-id');\n     *\n     * console.log(state.data.getSelectedShippingOption());\n     * ```\n     *\n     * @param shippingOptionId - The identifier of the shipping option to\n     * select.\n     * @param options - Options for selecting the shipping option.\n     * @returns A promise that resolves to the current state.\n     */\n    selectShippingOption(shippingOptionId: string, options?: ShippingRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.selectOption(shippingOptionId, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates the shipping address for the current checkout.\n     *\n     * When a customer updates their shipping address for an order, they will\n     * see an updated list of shipping options and the cost for each option,\n     * unless no options are available. If the update is successful, you can\n     * call `CheckoutStoreSelector#getShippingAddress` to retrieve the address.\n     *\n     * If the shipping address changes and the selected shipping option becomes\n     * unavailable for the updated address, the shipping option will be\n     * deselected.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateShippingAddress(address);\n     *\n     * console.log(state.data.getShippingAddress());\n     * ```\n     *\n     * @param address - The address to be used for shipping.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateShippingAddress(\n        address: Partial<AddressRequestBody>,\n        options?: ShippingRequestOptions<CheckoutParams>\n    ): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.updateAddress(address, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Creates consignments given a list.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#updateShippingAddress`.\n     *\n     * When consignments are created, an updated list of shipping options will\n     * become available for each consignment, unless no options are available.\n     * If the update is successful, you can call\n     * `CheckoutStoreSelector#getConsignments` to retrieve the updated list of\n     * consignments.'\n     *\n     * Beware that if a consignment includes all line items from another\n     * consignment, that consignment will be deleted as a valid consignment must\n     * include at least one valid line item.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.createConsignments(consignments);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignments - The list of consignments to be created.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.createConsignments(consignments, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Deletes a consignment\n     *\n     * ```js\n     * const state = await service.deleteConsignment('55c96cda6f04c');\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignmentId - The ID of the consignment to be deleted\n     * @param options - Options for the consignment delete request\n     * @returns A promise that resolves to the current state.\n     */\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.deleteConsignment(consignmentId, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates a specific consignment.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#selectShippingOption`.\n     *\n     * When a shipping address for a consignment is updated, an updated list of\n     * shipping options will become available for the consignment, unless no\n     * options are available. If the update is successful, you can call\n     * `CheckoutStoreSelector#getConsignments` to retrieve updated list of\n     * consignments.\n     *\n     * Beware that if the updated consignment includes all line items from another\n     * consignment, that consignment will be deleted as a valid consignment must\n     * include at least one valid line item.\n     *\n     * If the shipping address changes and the selected shipping option becomes\n     * unavailable for the updated address, the shipping option will be\n     * deselected.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateConsignment(consignment);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.updateConsignment(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Convenience method that assigns items to be shipped to a specific address.\n     *\n     * Note: this method finds an existing consignment that matches the provided address\n     * and assigns the provided items. If no consignment matches the address, a new one\n     * will be created.\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for the request\n     * @returns A promise that resolves to the current state.\n     */\n    assignItemsToAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.assignItemsByAddress(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Convenience method that unassigns items from a specific shipping address.\n     *\n     * Note: this method finds an existing consignment that matches the provided address\n     * and unassigns the specified items. If the consignment ends up with no line items\n     * after the unassignment, it will be deleted.\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for the request\n     * @returns A promise that resolves to the current state.\n     */\n    unassignItemsToAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.unassignItemsByAddress(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Selects a shipping option for a given consignment.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#updateShippingAddress`.\n     *\n     * If a shipping option has an additional cost, the quote for the current\n     * order will be adjusted once the option is selected.\n     *\n     * ```js\n     * const state = await service.selectConsignmentShippingOption(consignmentId, optionId);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignmentId - The identified of the consignment to be updated.\n     * @param shippingOptionId - The identifier of the shipping option to\n     * select.\n     * @param options - Options for selecting the shipping option.\n     * @returns A promise that resolves to the current state.\n     */\n    selectConsignmentShippingOption(\n        consignmentId: string,\n        shippingOptionId: string,\n        options?: ShippingRequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.updateShippingOption({\n            id: consignmentId,\n            shippingOptionId,\n        }, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates the billing address for the current checkout.\n     *\n     * A customer must provide their billing address before they can proceed to\n     * pay for their order.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateBillingAddress(address);\n     *\n     * console.log(state.data.getBillingAddress());\n     * ```\n     *\n     * @param address - The address to be used for billing.\n     * @param options - Options for updating the billing address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateBillingAddress(address: Partial<BillingAddressRequestBody>, options: RequestOptions = {}): Promise<CheckoutSelectors> {\n        const action = this._billingAddressActionCreator.updateAddress(address, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies or removes customer's store credit code to the current checkout.\n     *\n     * Once the store credit gets applied, the outstanding balance will be adjusted accordingly.\n     *\n     * ```js\n     * const state = await service.applyStoreCredit(true);\n     *\n     * console.log(state.data.getCheckout().outstandingBalance);\n     * ```\n     *\n     * @param options - Options for applying store credit.\n     * @returns A promise that resolves to the current state.\n     */\n    applyStoreCredit(useStoreCredit: boolean, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._storeCreditActionCreator.applyStoreCredit(useStoreCredit, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies a coupon code to the current checkout.\n     *\n     * Once the coupon code gets applied, the quote for the current checkout will\n     * be adjusted accordingly. The same coupon code cannot be applied more than\n     * once.\n     *\n     * ```js\n     * await service.applyCoupon('COUPON');\n     * ```\n     *\n     * @param code - The coupon code to apply to the current checkout.\n     * @param options - Options for applying the coupon code.\n     * @returns A promise that resolves to the current state.\n     */\n    applyCoupon(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._couponActionCreator.applyCoupon(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Removes a coupon code from the current checkout.\n     *\n     * Once the coupon code gets removed, the quote for the current checkout will\n     * be adjusted accordingly.\n     *\n     * ```js\n     * await service.removeCoupon('COUPON');\n     * ```\n     *\n     * @param code - The coupon code to remove from the current checkout.\n     * @param options - Options for removing the coupon code.\n     * @returns A promise that resolves to the current state.\n     */\n    removeCoupon(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._couponActionCreator.removeCoupon(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies a gift certificate to the current checkout.\n     *\n     * Once the gift certificate gets applied, the quote for the current\n     * checkout will be adjusted accordingly.\n     *\n     * ```js\n     * await service.applyGiftCertificate('GIFT_CERTIFICATE');\n     * ```\n     *\n     * @param code - The gift certificate to apply to the current checkout.\n     * @param options - Options for applying the gift certificate.\n     * @returns A promise that resolves to the current state.\n     */\n    applyGiftCertificate(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._giftCertificateActionCreator.applyGiftCertificate(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Removes a gift certificate from an order.\n     *\n     * Once the gift certificate gets removed, the quote for the current\n     * checkout will be adjusted accordingly.\n     *\n     * ```js\n     * await service.removeGiftCertificate('GIFT_CERTIFICATE');\n     * ```\n     *\n     * @param code - The gift certificate to remove from the current checkout.\n     * @param options - Options for removing the gift certificate.\n     * @returns A promise that resolves to the current state.\n     */\n    removeGiftCertificate(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._giftCertificateActionCreator.removeGiftCertificate(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Loads a list of payment instruments associated with a customer.\n     *\n     * Once the method has been called successfully, you can retrieve the list\n     * of payment instruments by calling `CheckoutStoreSelector#getInstruments`.\n     * If the customer does not have any payment instruments on record, i.e.:\n     * credit card, you will get an empty list instead.\n     *\n     * ```js\n     * const state = service.loadInstruments();\n     *\n     * console.log(state.data.getInstruments());\n     * ```\n     *\n     * @returns A promise that resolves to the current state.\n     */\n    loadInstruments(): Promise<CheckoutSelectors> {\n        const action = this._instrumentActionCreator.loadInstruments();\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Deletes a payment instrument by an id.\n     *\n     * Once an instrument gets removed, it can no longer be retrieved using\n     * `CheckoutStoreSelector#getInstruments`.\n     *\n     * ```js\n     * const state = service.deleteInstrument('123');\n     *\n     * console.log(state.data.getInstruments());\n     * ```\n     *\n     * @param instrumentId - The identifier of the payment instrument to delete.\n     * @returns A promise that resolves to the current state.\n     */\n    deleteInstrument(instrumentId: string): Promise<CheckoutSelectors> {\n        const action = this._instrumentActionCreator.deleteInstrument(instrumentId);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Clear errors that have been collected from previous calls.\n     *\n     * ```js\n     * const state = await service.clearError(error);\n     *\n     * console.log(state.errors.getError());\n     * ```\n     *\n     * @param error - Specific error object to clear\n     * @returns A promise that resolves to the current state.\n     */\n    clearError(error: Error): Promise<CheckoutSelectors> {\n        const action = this._errorActionCreator.clearError(error);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Initializes the spam protection for order creation.\n     *\n     * Note: Use `CheckoutService#executeSpamCheck` instead.\n     * You do not need to call this method before calling\n     * `CheckoutService#executeSpamCheck`.\n     *\n     * With spam protection enabled, the customer has to be verified as\n     * a human. The order creation will fail if spam protection\n     * is enabled but verification fails.\n     *\n     * ```js\n     * await service.initializeSpamProtection();\n     * ```\n     *\n     * @param options - Options for initializing spam protection.\n     * @returns A promise that resolves to the current state.\n     * @deprecated - Use CheckoutService#executeSpamCheck instead.\n     */\n    initializeSpamProtection(options: SpamProtectionOptions): Promise<CheckoutSelectors> {\n        const action = this._spamProtectionActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'spamProtection' });\n    }\n\n    /**\n     * Verifies whether the current checkout is created by a human.\n     *\n     * Note: this method will do the initialization, therefore you do not\n     * need to call `CheckoutService#initializeSpamProtection`\n     * before calling this method.\n     *\n     * With spam protection enabled, the customer has to be verified as\n     * a human. The order creation will fail if spam protection\n     * is enabled but verification fails.\n     *\n     * ```js\n     * await service.executeSpamCheck();\n     * ```\n     *\n     * @returns A promise that resolves to the current state.\n     */\n    executeSpamCheck(): Promise<CheckoutSelectors> {\n        const action = this._spamProtectionActionCreator.initialize();\n\n        return this._dispatch(action, { queueId: 'spamProtection' })\n            .then(() => {\n                const action = this._spamProtectionActionCreator.execute();\n\n                return this._dispatch(action, { queueId: 'spamProtection' });\n            });\n    }\n\n    /**\n     * Dispatches an action through the data store and returns the current state\n     * once the action is dispatched.\n     *\n     * @param action - The action to dispatch.\n     * @returns A promise that resolves to the current state.\n     */\n    private _dispatch(action: Action | Observable<Action> | ThunkAction<Action>, options?: { queueId?: string }): Promise<CheckoutSelectors> {\n        return this._store.dispatch(action, options)\n            .then(() => this.getState())\n            .catch(error => {\n                throw this._errorTransformer.transform(error);\n            });\n    }\n}\n","import { ErrorMessageTransformer } from '../common/error';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../common/error/errors';\nimport { getEnvironment } from '../common/utility';\n\nexport type CheckoutServiceErrorType = MissingDataError | NotInitializedError;\nexport type CheckoutServiceErrorTransformer = ErrorMessageTransformer<CheckoutServiceErrorType | Error>;\n\nexport default function createCheckoutServiceErrorTransformer(\n    isDevelopment: boolean = getEnvironment() === 'development'\n): CheckoutServiceErrorTransformer {\n    return new ErrorMessageTransformer(error => {\n        if (!isDevelopment || !isCheckoutServiceError(error)) {\n            return error.message;\n        }\n\n        switch (error.subtype || error.type) {\n        case MissingDataErrorType.MissingConsignments:\n            return `\n                ${error.message}\n                The data could be unavailable because no shipping address has been provided.\n                To fix this, create a consignment or update the shipping address before performing\n                the same action again.\n            `;\n\n        case MissingDataErrorType.MissingCart:\n        case MissingDataErrorType.MissingCheckout:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling \\`CheckoutService#loadCheckout\\`\n                before performing the same action again.\n            `;\n\n        case MissingDataErrorType.MissingCheckoutConfig:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you need to make sure \\`CheckoutService\\` is initialized\n                properly by calling \\`CheckoutService#loadCheckout\\` before performing any\n                other actions.\n            `;\n\n        case MissingDataErrorType.MissingOrder:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling \\`CheckoutService#loadOrder\\`\n                before performing the same action again.\n            `;\n\n        case MissingDataErrorType.MissingOrderId:\n            return `\n                ${error.message}\n                The data could be unavailable because no order has been created yet. You have\n                to first create the order before you can perform the action.\n            `;\n\n        case MissingDataErrorType.MissingPaymentMethod:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server, or\n                configured by the merchant yet. To fix the former issue, you can try calling\n                \\`CheckoutService#loadPaymentMethods\\` before performing the same action again.\n            `;\n\n        case NotInitializedErrorType.CustomerNotInitialized:\n            return `\n                In order to initialize the customer step of checkout, you need to call\n                \\`CheckoutService#initializeCustomer\\`. Afterwards, you should be able to\n                submit customer details.\n            `;\n\n        case NotInitializedErrorType.PaymentNotInitialized:\n            return `\n                ${error.message}\n                In order to initialize the payment step of checkout, you need to call\n                \\`CheckoutService#initializePayment\\`. Afterwards, you should be able to\n                submit payment details.\n            `;\n\n        case NotInitializedErrorType.ShippingNotInitialized:\n            return `\n                ${error.message}\n                In order to initialize the shipping step of checkout, you need to call\n                \\`CheckoutService#initializeShipping\\`. Afterwards, you should be able to\n                submit shipping details.\n            `;\n\n        default:\n            return error.message;\n        }\n    });\n}\n\nfunction isCheckoutServiceError(error: any): error is CheckoutServiceErrorType {\n    return !!(error.subtype || error.type);\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\nimport { createScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { ErrorActionCreator } from '../common/error';\nimport { getDefaultLogger } from '../common/log';\nimport { getEnvironment } from '../common/utility';\nimport { ConfigActionCreator, ConfigRequestSender, ConfigState } from '../config';\nimport { CouponActionCreator, CouponRequestSender, GiftCertificateActionCreator, GiftCertificateRequestSender } from '../coupon';\nimport { createCustomerStrategyRegistry, CustomerStrategyActionCreator } from '../customer';\nimport { CountryActionCreator, CountryRequestSender } from '../geography';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { createPaymentClient, createPaymentStrategyRegistry, PaymentMethodActionCreator, PaymentMethodRequestSender, PaymentStrategyActionCreator } from '../payment';\nimport { InstrumentActionCreator, InstrumentRequestSender } from '../payment/instrument';\nimport { createShippingStrategyRegistry, ConsignmentActionCreator, ConsignmentRequestSender, ShippingCountryActionCreator, ShippingCountryRequestSender, ShippingStrategyActionCreator } from '../shipping';\nimport { createSpamProtection, SpamProtectionActionCreator, SpamProtectionRequestSender } from '../spam-protection';\nimport { StoreCreditActionCreator, StoreCreditRequestSender } from '../store-credit';\n\nimport CheckoutActionCreator from './checkout-action-creator';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport CheckoutService from './checkout-service';\nimport CheckoutValidator from './checkout-validator';\nimport createCheckoutStore from './create-checkout-store';\n\n/**\n * Creates an instance of `CheckoutService`.\n *\n * @remarks\n * ```js\n * const service = createCheckoutService();\n *\n * service.subscribe(state => {\n *     console.log(state);\n * });\n *\n * service.loadCheckout();\n * ```\n *\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutService`.\n */\nexport default function createCheckoutService(options?: CheckoutServiceOptions): CheckoutService {\n    if (document.location.protocol !== 'https:') {\n        getDefaultLogger().warn('The BigCommerce Checkout SDK should not be used on a non-HTTPS page');\n    }\n\n    if (getEnvironment() !== 'production') {\n        getDefaultLogger().warn('Note that the development build is not optimized. To create a production build, set process.env.NODE_ENV to `production`.');\n    }\n\n    const config: ConfigState = {\n        meta: {\n            externalSource: options && options.externalSource,\n        },\n        errors: {},\n        statuses: {},\n    };\n    const { locale = '', shouldWarnMutation = true } = options || {};\n    const requestSender = createRequestSender({ host: options && options.host });\n    const store = createCheckoutStore({ config }, { shouldWarnMutation });\n    const paymentClient = createPaymentClient(store);\n    const orderRequestSender = new OrderRequestSender(requestSender);\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const configActionCreator = new ConfigActionCreator(new ConfigRequestSender(requestSender));\n    const spamProtection = createSpamProtection(createScriptLoader());\n    const spamProtectionRequestSender = new SpamProtectionRequestSender(requestSender);\n    const spamProtectionActionCreator = new SpamProtectionActionCreator(spamProtection, spamProtectionRequestSender);\n    const orderActionCreator = new OrderActionCreator(\n        orderRequestSender,\n        new CheckoutValidator(checkoutRequestSender)\n    );\n\n    return new CheckoutService(\n        store,\n        new BillingAddressActionCreator(new BillingAddressRequestSender(requestSender)),\n        new CheckoutActionCreator(checkoutRequestSender, configActionCreator),\n        configActionCreator,\n        new ConsignmentActionCreator(new ConsignmentRequestSender(requestSender), checkoutRequestSender),\n        new CountryActionCreator(new CountryRequestSender(requestSender, { locale })),\n        new CouponActionCreator(new CouponRequestSender(requestSender)),\n        new CustomerStrategyActionCreator(createCustomerStrategyRegistry(store, requestSender)),\n        new ErrorActionCreator(),\n        new GiftCertificateActionCreator(new GiftCertificateRequestSender(requestSender)),\n        new InstrumentActionCreator(new InstrumentRequestSender(paymentClient, requestSender)),\n        orderActionCreator,\n        new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n        new PaymentStrategyActionCreator(\n            createPaymentStrategyRegistry(store, paymentClient, requestSender, spamProtection, locale),\n            orderActionCreator,\n            spamProtectionActionCreator\n        ),\n        new ShippingCountryActionCreator(new ShippingCountryRequestSender(requestSender, { locale })),\n        new ShippingStrategyActionCreator(createShippingStrategyRegistry(store, requestSender)),\n        spamProtectionActionCreator,\n        new StoreCreditActionCreator(new StoreCreditRequestSender(requestSender))\n    );\n}\n\nexport interface CheckoutServiceOptions {\n    locale?: string;\n    host?: string;\n    shouldWarnMutation?: boolean;\n    externalSource?: string;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { MutationObserverFactory } from '../common/dom';\n\nimport GoogleRecaptcha from './google-recaptcha';\nimport GoogleRecaptchaScriptLoader from './google-recaptcha-script-loader';\n\nexport default function createSpamProtection(scriptLoader: ScriptLoader) {\n    return new GoogleRecaptcha(\n        new GoogleRecaptchaScriptLoader(scriptLoader),\n        new MutationObserverFactory()\n    );\n}\n","// tslint:disable-next-line:no-reference\n/// <reference path=\"../payment/bigpay-client.d.ts\" />\nimport { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { CheckoutStore } from '../checkout';\n\nexport default function createPaymentClient(store: CheckoutStore) {\n    const paymentClient = createBigpayClient();\n\n    store.subscribe(\n        state => {\n            const config = state.config.getStoreConfig();\n\n            if (config) {\n                paymentClient.setHost(config.paymentSettings.bigpayBaseUrl);\n            }\n        },\n        state => state.config.getStoreConfig()\n    );\n\n    return paymentClient;\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { createBraintreeVisaCheckoutPaymentProcessor, BraintreeScriptLoader, BraintreeSDKCreator, VisaCheckoutScriptLoader } from '../payment/strategies/braintree';\nimport { ChasePayScriptLoader } from '../payment/strategies/chasepay';\nimport { createGooglePayPaymentProcessor, GooglePayBraintreeInitializer, GooglePayStripeInitializer } from '../payment/strategies/googlepay';\nimport { MasterpassScriptLoader } from '../payment/strategies/masterpass';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\n\nimport CustomerActionCreator from './customer-action-creator';\nimport CustomerRequestSender from './customer-request-sender';\nimport CustomerStrategyActionCreator from './customer-strategy-action-creator';\nimport { CustomerStrategy } from './strategies';\nimport { AmazonPayCustomerStrategy } from './strategies/amazon';\nimport { BraintreeVisaCheckoutCustomerStrategy } from './strategies/braintree';\nimport { ChasePayCustomerStrategy } from './strategies/chasepay';\nimport { DefaultCustomerStrategy } from './strategies/default';\nimport { GooglePayCustomerStrategy } from './strategies/googlepay';\nimport { MasterpassCustomerStrategy } from './strategies/masterpass';\nimport { SquareCustomerStrategy } from './strategies/square';\n\nexport default function createCustomerStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<CustomerStrategy> {\n    const registry = new Registry<CustomerStrategy>();\n    const scriptLoader = getScriptLoader();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const checkoutActionCreator = new CheckoutActionCreator(\n        checkoutRequestSender,\n        new ConfigActionCreator(new ConfigRequestSender(requestSender))\n    );\n    const formPoster = createFormPoster();\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n    const remoteCheckoutRequestSender = new RemoteCheckoutRequestSender(requestSender);\n    const remoteCheckoutActionCreator = new RemoteCheckoutActionCreator(remoteCheckoutRequestSender);\n\n    registry.register('amazon', () =>\n        new AmazonPayCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            remoteCheckoutRequestSender,\n            new AmazonPayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('braintreevisacheckout', () =>\n        new BraintreeVisaCheckoutCustomerStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            new CustomerStrategyActionCreator(registry),\n            remoteCheckoutActionCreator,\n            createBraintreeVisaCheckoutPaymentProcessor(scriptLoader, requestSender),\n            new VisaCheckoutScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('chasepay', () =>\n        new ChasePayCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new ChasePayScriptLoader(scriptLoader),\n            requestSender,\n            formPoster\n        )\n    );\n\n    registry.register('squarev2', () =>\n        new SquareCustomerStrategy(\n            store,\n            new RemoteCheckoutActionCreator(remoteCheckoutRequestSender)\n        )\n    );\n\n    registry.register('masterpass', () =>\n        new MasterpassCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('googlepaybraintree', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('googlepaystripe', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            ),\n            formPoster\n    )\n);\n\n    registry.register('default', () =>\n        new DefaultCustomerStrategy(\n            store,\n            new CustomerActionCreator(\n                new CustomerRequestSender(requestSender),\n                checkoutActionCreator\n            )\n        )\n    );\n\n    return registry;\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader, getStylesheetLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore, CheckoutValidator } from '../checkout';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\nimport { GoogleRecaptcha, SpamProtectionActionCreator, SpamProtectionRequestSender } from '../spam-protection';\nimport { StoreCreditActionCreator, StoreCreditRequestSender } from '../store-credit';\n\nimport PaymentActionCreator from './payment-action-creator';\nimport PaymentMethodActionCreator from './payment-method-action-creator';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\nimport PaymentRequestSender from './payment-request-sender';\nimport PaymentRequestTransformer from './payment-request-transformer';\nimport PaymentStrategyActionCreator from './payment-strategy-action-creator';\nimport PaymentStrategyRegistry from './payment-strategy-registry';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { AdyenV2PaymentStrategy, AdyenV2ScriptLoader } from './strategies/adyenv2';\nimport { AffirmPaymentStrategy, AffirmScriptLoader } from './strategies/affirm';\nimport { AfterpayPaymentStrategy, AfterpayScriptLoader } from './strategies/afterpay';\nimport { AmazonPayPaymentStrategy, AmazonPayScriptLoader } from './strategies/amazon-pay';\nimport { createBraintreePaymentProcessor, createBraintreeVisaCheckoutPaymentProcessor, BraintreeCreditCardPaymentStrategy, BraintreePaypalPaymentStrategy, BraintreeScriptLoader, BraintreeSDKCreator, BraintreeVisaCheckoutPaymentStrategy, VisaCheckoutScriptLoader } from './strategies/braintree';\nimport { CardinalClient, CardinalScriptLoader, CardinalThreeDSecureFlow } from './strategies/cardinal';\nimport { ChasePayPaymentStrategy, ChasePayScriptLoader } from './strategies/chasepay';\nimport { ConvergePaymentStrategy } from './strategies/converge';\nimport { CreditCardPaymentStrategy } from './strategies/credit-card';\nimport { CyberSourcePaymentStrategy } from './strategies/cybersource/index';\nimport { createGooglePayPaymentProcessor, GooglePayBraintreeInitializer, GooglePayPaymentStrategy, GooglePayStripeInitializer } from './strategies/googlepay';\nimport { KlarnaPaymentStrategy, KlarnaScriptLoader } from './strategies/klarna';\nimport { LegacyPaymentStrategy } from './strategies/legacy';\nimport { MasterpassPaymentStrategy, MasterpassScriptLoader } from './strategies/masterpass';\nimport { NoPaymentDataRequiredPaymentStrategy } from './strategies/no-payment';\nimport { OfflinePaymentStrategy } from './strategies/offline';\nimport { OffsitePaymentStrategy } from './strategies/offsite';\nimport { PaypalExpressPaymentStrategy, PaypalProPaymentStrategy, PaypalScriptLoader } from './strategies/paypal';\nimport { SagePayPaymentStrategy } from './strategies/sage-pay';\nimport { SquarePaymentStrategy, SquareScriptLoader } from './strategies/square';\nimport { StripeScriptLoader, StripeV3PaymentStrategy } from './strategies/stripev3';\nimport { WepayPaymentStrategy, WepayRiskClient } from './strategies/wepay';\nimport { ZipPaymentStrategy, ZipScriptLoader } from './strategies/zip';\n\nexport default function createPaymentStrategyRegistry(\n    store: CheckoutStore,\n    paymentClient: any,\n    requestSender: RequestSender,\n    spamProtection: GoogleRecaptcha,\n    locale: string\n) {\n    const registry = new PaymentStrategyRegistry(store, { defaultToken: PaymentStrategyType.CREDIT_CARD });\n    const scriptLoader = getScriptLoader();\n    const paymentRequestTransformer = new PaymentRequestTransformer();\n    const paymentRequestSender = new PaymentRequestSender(paymentClient);\n    const billingAddressActionCreator = new BillingAddressActionCreator(new BillingAddressRequestSender(requestSender));\n    const braintreePaymentProcessor = createBraintreePaymentProcessor(scriptLoader);\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const checkoutValidator = new CheckoutValidator(checkoutRequestSender);\n    const spamProtectionActionCreator = new SpamProtectionActionCreator(spamProtection, new SpamProtectionRequestSender(requestSender));\n    const orderActionCreator = new OrderActionCreator(new OrderRequestSender(requestSender), checkoutValidator);\n    const storeCreditActionCreator = new StoreCreditActionCreator(new StoreCreditRequestSender(requestSender));\n    const paymentActionCreator = new PaymentActionCreator(paymentRequestSender, orderActionCreator, paymentRequestTransformer);\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n    const remoteCheckoutActionCreator = new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender));\n    const configActionCreator = new ConfigActionCreator(new ConfigRequestSender(requestSender));\n    const checkoutActionCreator = new CheckoutActionCreator(checkoutRequestSender, configActionCreator);\n    const paymentStrategyActionCreator = new PaymentStrategyActionCreator(registry, orderActionCreator, spamProtectionActionCreator);\n    const formPoster = createFormPoster();\n\n    registry.register(PaymentStrategyType.ADYENV2, () =>\n        new AdyenV2PaymentStrategy(\n            store,\n            paymentActionCreator,\n            orderActionCreator,\n            new AdyenV2ScriptLoader(scriptLoader, getStylesheetLoader()),\n            formPoster,\n            locale\n        )\n    );\n\n    registry.register(PaymentStrategyType.AFFIRM, () =>\n        new AffirmPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            new AffirmScriptLoader()\n        )\n    );\n\n    registry.register(PaymentStrategyType.AFTERPAY, () =>\n        new AfterpayPaymentStrategy(\n            store,\n            checkoutValidator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            new AfterpayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.AMAZON, () =>\n        new AmazonPayPaymentStrategy(\n            store,\n            orderActionCreator,\n            billingAddressActionCreator,\n            remoteCheckoutActionCreator,\n            new AmazonPayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.CREDIT_CARD, () =>\n        new CreditCardPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.CYBERSOURCE, () =>\n        new CyberSourcePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            new CardinalThreeDSecureFlow(\n                store,\n                paymentActionCreator,\n                paymentMethodActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.KLARNA, () =>\n        new KlarnaPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new KlarnaScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.LEGACY, () =>\n        new LegacyPaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.OFFLINE, () =>\n        new OfflinePaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.OFFSITE, () =>\n        new OffsitePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL, () =>\n        new PaypalProPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            new CardinalThreeDSecureFlow(\n                store,\n                paymentActionCreator,\n                paymentMethodActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_EXPRESS, () =>\n        new PaypalExpressPaymentStrategy(\n            store,\n            orderActionCreator,\n            new PaypalScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_EXPRESS_CREDIT, () =>\n        new PaypalExpressPaymentStrategy(\n            store,\n            orderActionCreator,\n            new PaypalScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.SAGE_PAY, () =>\n        new SagePayPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.SQUARE, () =>\n        new SquarePaymentStrategy(\n            store,\n            checkoutActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            requestSender,\n            new SquareScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.NO_PAYMENT_DATA_REQUIRED, () =>\n        new NoPaymentDataRequiredPaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE, () =>\n        new BraintreeCreditCardPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_PAYPAL, () =>\n        new BraintreePaypalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_PAYPAL_CREDIT, () =>\n        new BraintreePaypalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor,\n            true\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_VISA_CHECKOUT, () =>\n        new BraintreeVisaCheckoutPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createBraintreeVisaCheckoutPaymentProcessor(scriptLoader, requestSender),\n            new VisaCheckoutScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHASE_PAY, () =>\n        new ChasePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            requestSender,\n            new ChasePayScriptLoader(scriptLoader),\n            new WepayRiskClient(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.WE_PAY, () =>\n        new WepayPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            new WepayRiskClient(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.MASTERPASS, () =>\n        new MasterpassPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.STRIPE_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.ZIP, () =>\n        new ZipPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            new ZipScriptLoader(scriptLoader),\n            requestSender\n        )\n    );\n\n    registry.register(PaymentStrategyType.CONVERGE, () =>\n        new ConvergePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.STRIPEV3, () =>\n        new StripeV3PaymentStrategy(\n            store,\n            paymentMethodActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            new StripeScriptLoader(scriptLoader)\n        )\n    );\n\n    return registry;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { Overlay } from '../../../common/overlay';\n\nimport BraintreePaymentProcessor from './braintree-payment-processor';\nimport BraintreeScriptLoader from './braintree-script-loader';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\n\nexport default function createBraintreePaymentProcessor(scriptLoader: ScriptLoader) {\n    const braintreeScriptLoader = new BraintreeScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(braintreeScriptLoader);\n    const overlay = new Overlay();\n\n    return new BraintreePaymentProcessor(braintreeSDKCreator, overlay);\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\n\nimport ConsignmentActionCreator from './consignment-action-creator';\nimport ConsignmentRequestSender from './consignment-request-sender';\nimport { ShippingStrategy } from './strategies';\nimport { AmazonPayShippingStrategy } from './strategies/amazon';\nimport { DefaultShippingStrategy } from './strategies/default';\n\nexport default function createShippingStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<ShippingStrategy> {\n    const registry = new Registry<ShippingStrategy>();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const consignmentRequestSender = new ConsignmentRequestSender(requestSender);\n    const consignmentActionCreator = new ConsignmentActionCreator(consignmentRequestSender, checkoutRequestSender);\n\n    registry.register('amazon', () =>\n        new AmazonPayShippingStrategy(\n            store,\n            consignmentActionCreator,\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n            new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender)),\n            new AmazonPayScriptLoader(getScriptLoader())\n        )\n    );\n\n    registry.register('default', () =>\n        new DefaultShippingStrategy(\n            store,\n            consignmentActionCreator\n        )\n    );\n\n    return registry;\n}\n","import { EmbeddedCheckoutFrameLoadedEvent } from '../embedded-checkout-events';\n\nexport default function handleFrameLoadedEvent(message: EmbeddedCheckoutFrameLoadedEvent): void {\n    if (!message.payload || !message.payload.contentId) {\n        return;\n    }\n\n    const body = document.getElementById(message.payload.contentId);\n\n    if (!body || body.hasAttribute('data-iframe-height')) {\n        return;\n    }\n\n    body.setAttribute('data-iframe-height', '');\n}\n","export default interface CustomError extends Error {\n    message: string;\n    type: string;\n    subtype?: string;\n}\n\nexport function isCustomError(error: any): error is CustomError {\n    return (\n        typeof error.message === 'string' &&\n        typeof error.type === 'string' &&\n        (typeof error.subtype === 'string' || !error.subtype) &&\n        error instanceof Error\n    );\n}\n","import { isCustomError, CustomError } from '../../common/error/errors';\nimport { bindDecorator as bind } from '../../common/utility';\nimport EmbeddedCheckoutError from '../embedded-checkout-error';\nimport { EmbeddedCheckoutCompleteEvent, EmbeddedCheckoutErrorEvent, EmbeddedCheckoutEvent, EmbeddedCheckoutEventMap, EmbeddedCheckoutEventType, EmbeddedCheckoutFrameErrorEvent, EmbeddedCheckoutFrameLoadedEvent, EmbeddedCheckoutLoadedEvent, EmbeddedCheckoutSignedOutEvent } from '../embedded-checkout-events';\nimport EmbeddedCheckoutStyles from '../embedded-checkout-styles';\nimport IframeEventListener from '../iframe-event-listener';\nimport IframeEventPoster from '../iframe-event-poster';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\nimport { EmbeddedContentEventMap, EmbeddedContentEventType } from './embedded-content-events';\nimport EmbeddedContentOptions from './embedded-content-options';\n\n@bind\nexport default class IframeEmbeddedCheckoutMessenger implements EmbeddedCheckoutMessenger {\n    /**\n     * @internal\n     */\n    constructor(\n        private _messageListener: IframeEventListener<EmbeddedContentEventMap>,\n        private _messagePoster: IframeEventPoster<EmbeddedCheckoutEvent>,\n        private _untargetedMessagePoster: IframeEventPoster<EmbeddedCheckoutEvent>,\n        private _messageHandlers: EventCallbacks<EmbeddedCheckoutEventMap> = {}\n    ) {\n        this._messageListener.listen();\n    }\n\n    postComplete(): void {\n        const message: EmbeddedCheckoutCompleteEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutComplete,\n        };\n\n        this._postMessage(message);\n    }\n\n    postError(payload: Error | CustomError): void {\n        const message: EmbeddedCheckoutErrorEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutError,\n            payload: this._transformError(payload),\n        };\n\n        this._postMessage(message);\n    }\n\n    postFrameError(payload: Error | CustomError): void {\n        const message: EmbeddedCheckoutFrameErrorEvent = {\n            type: EmbeddedCheckoutEventType.FrameError,\n            payload: this._transformError(payload),\n        };\n\n        // Ideally, all messages should be targeted at a specific origin.\n        // However, for `FrameError` message, we have to post it in an\n        // untargeted fashion. This is because the error could be caused by a\n        // missing cart. That makes it not possible to determine of site origin\n        // of the parent window. Nevertheless, we still want to notify the\n        // parent window about the error.\n        this._postMessage(message, { untargeted: true });\n    }\n\n    postFrameLoaded(payload?: EmbeddedContentOptions): void {\n        const message: EmbeddedCheckoutFrameLoadedEvent = {\n            type: EmbeddedCheckoutEventType.FrameLoaded,\n            payload,\n        };\n\n        this._postMessage(message);\n    }\n\n    postLoaded(): void {\n        const message: EmbeddedCheckoutLoadedEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutLoaded,\n        };\n\n        this._postMessage(message);\n    }\n\n    postSignedOut(): void {\n        const message: EmbeddedCheckoutSignedOutEvent = {\n            type: EmbeddedCheckoutEventType.SignedOut,\n        };\n\n        this._postMessage(message);\n    }\n\n    receiveStyles(handler: (styles: EmbeddedCheckoutStyles) => void): void {\n        this._messageListener.addListener(EmbeddedContentEventType.StyleConfigured, ({ payload }) => {\n            handler(payload);\n        });\n    }\n\n    private _postMessage(message: EmbeddedCheckoutEvent, options?: { untargeted?: boolean }): void {\n        this._notifyMessageHandlers(message);\n\n        if (options && options.untargeted) {\n            return this._untargetedMessagePoster.post(message);\n        }\n\n        this._messagePoster.post(message);\n    }\n\n    private _notifyMessageHandlers(message: EmbeddedCheckoutEvent): void {\n        Object.keys(this._messageHandlers)\n            .forEach(key => {\n                if (message.type !== key) {\n                    return;\n                }\n\n                const handler = this._messageHandlers[key];\n\n                if (handler) {\n                    (handler as (event: EmbeddedCheckoutEvent) => void).call(null, message);\n                }\n            });\n    }\n\n    private _transformError(error: Error | CustomError): EmbeddedCheckoutError {\n        return {\n            message: error.message,\n            type: isCustomError(error) ? error.type : undefined,\n            subtype: isCustomError(error) ? error.subtype : undefined,\n        };\n    }\n}\n\nexport type EventCallbacks<TEventMap> = {\n    [key in keyof TEventMap]?: (event: TEventMap[key]) => void;\n};\n","import { bindDecorator as bind } from '../../common/utility';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\n\n@bind\nexport default class NoopEmbeddedCheckoutMessenger implements EmbeddedCheckoutMessenger {\n    postComplete(): void {}\n\n    postError(): void {}\n\n    postFrameError(): void {}\n\n    postFrameLoaded(): void {}\n\n    postLoaded(): void {}\n\n    postSignedOut(): void {}\n\n    receiveStyles(): void {}\n}\n","import { setupContentWindowForIframeResizer } from '../../common/iframe';\nimport { EmbeddedCheckoutEvent, EmbeddedCheckoutEventType } from '../embedded-checkout-events';\nimport IframeEventListener from '../iframe-event-listener';\nimport IframeEventPoster from '../iframe-event-poster';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\nimport EmbeddedCheckoutMessengerOptions from './embedded-checkout-messenger-options';\nimport { EmbeddedContentEventMap } from './embedded-content-events';\nimport handleFrameLoadedEvent from './handle-frame-loaded-event';\nimport IframeEmbeddedCheckoutMessenger from './iframe-embedded-checkout-messenger';\nimport NoopEmbeddedCheckoutMessenger from './noop-embedded-checkout-messenger';\n\n/**\n * Create an instance of `EmbeddedCheckoutMessenger`.\n *\n * @remarks\n * The object is responsible for posting messages to the parent window from the\n * iframe when certain events have occurred. For example, when the checkout\n * form is first loaded, you should notify the parent window about it.\n *\n * The iframe can only be embedded in domains that are allowed by the store.\n *\n * ```ts\n * const messenger = createEmbeddedCheckoutMessenger({\n *     parentOrigin: 'https://some/website',\n * });\n *\n * messenger.postFrameLoaded();\n * ```\n *\n * @alpha\n * Please note that this feature is currently in an early stage of development.\n * Therefore the API is unstable and not ready for public consumption.\n *\n * @param options - Options for creating `EmbeddedCheckoutMessenger`\n * @returns - An instance of `EmbeddedCheckoutMessenger`\n */\nexport default function createEmbeddedCheckoutMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger {\n    setupContentWindowForIframeResizer();\n\n    const parentWindow = options.parentWindow || window.parent;\n\n    // Return a No-op messenger if it is not called inside an iframe\n    if (window === parentWindow) {\n        return new NoopEmbeddedCheckoutMessenger();\n    }\n\n    return new IframeEmbeddedCheckoutMessenger(\n        new IframeEventListener<EmbeddedContentEventMap>(options.parentOrigin),\n        new IframeEventPoster<EmbeddedCheckoutEvent>(options.parentOrigin, parentWindow),\n        new IframeEventPoster<EmbeddedCheckoutEvent>('*', parentWindow),\n        { [EmbeddedCheckoutEventType.FrameLoaded]: handleFrameLoadedEvent }\n    );\n}\n","import { isObject, union } from 'lodash';\nimport * as MessageFormat from 'messageformat';\n\nimport { Logger } from '../common/log';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport LanguageConfig, { Locales, Translations } from './language-config';\n\nconst DEFAULT_LOCALE = 'en';\nconst KEY_PREFIX = 'optimized_checkout';\n\n/**\n * Responsible for getting language strings.\n *\n * This object can be used to retrieve language strings that are most\n * appropriate for a given locale.\n *\n * The language strings provided to the object should follow [ICU\n * MessageFormat](http://userguide.icu-project.org/formatparse/messages) syntax.\n */\n@bind\nexport default class LanguageService {\n    private _locale: string;\n    private _locales: Locales;\n    private _translations: Translations;\n    private _formatters: { [key: string]: any };\n\n    /**\n     * @internal\n     */\n    constructor(\n        config: Partial<LanguageConfig>,\n        private _logger: Logger\n    ) {\n        const { locale, locales, translations } = this._transformConfig(config);\n\n        this._locale = locale;\n        this._locales = locales;\n        this._translations = translations;\n        this._formatters = {};\n    }\n\n    /**\n     * Remaps a set of language strings with a different set of keys.\n     *\n     * ```js\n     * service.mapKeys({\n     *     'new_key': 'existing_key',\n     * });\n     *\n     * console.log(service.translate('new_key'));\n     * ```\n     *\n     * @param maps - The set of language strings.\n     */\n    mapKeys(maps: { [key: string]: string }): void {\n        Object.keys(maps).forEach(key => {\n            const translationKey = `${KEY_PREFIX}.${maps[key]}`;\n\n            this._translations[`${KEY_PREFIX}.${key}`] = this._translations[translationKey];\n        });\n    }\n\n    /**\n     * Gets the preferred locale of the current customer.\n     *\n     * @returns The preferred locale code.\n     */\n    getLocale(): string {\n        return this._hasTranslations() ? this._locale : DEFAULT_LOCALE;\n    }\n\n    /**\n     * Gets a language string by a key.\n     *\n     * ```js\n     * service.translate('language_key');\n     * ```\n     *\n     * If the language string contains a placeholder, you can replace it by\n     * providing a second argument.\n     *\n     * ```js\n     * service.translate('language_key', { placeholder: 'Hello' });\n     * ```\n     *\n     * @param key - The language key.\n     * @param data - Data for replacing placeholders in the language string.\n     * @returns The translated language string.\n     */\n    translate(key: string, data: TranslationData = {}): string {\n        const prefixedKey = `${KEY_PREFIX}.${key}`;\n\n        if (typeof this._translations[prefixedKey] !== 'string') {\n            this._logger.warn(`Translation key \"${prefixedKey}\" is missing`);\n\n            return prefixedKey;\n        }\n\n        if (!this._formatters[prefixedKey]) {\n            const messageFormat = new MessageFormat(this._locales[prefixedKey]);\n\n            this._formatters[prefixedKey] = messageFormat.compile(this._translations[prefixedKey] || '');\n        }\n\n        return this._formatters[prefixedKey](this._transformData(data));\n    }\n\n    private _transformConfig(config: Partial<LanguageConfig> = {}): LanguageConfig {\n        const output: LanguageConfig = {\n            defaultTranslations: {},\n            translations: {},\n            locales: {},\n            locale: config.locale || DEFAULT_LOCALE,\n        };\n\n        const locales = config.locales || {};\n        const translations = this._flattenObject(config.translations || {});\n        const defaultTranslations = this._flattenObject(config.defaultTranslations || {});\n        const translationKeys = union(Object.keys(defaultTranslations), Object.keys(translations));\n\n        translationKeys.forEach(key => {\n            if (translations && translations[key]) {\n                output.translations[key] = translations[key];\n                output.locales[key] = locales[key] || output.locale;\n            } else {\n                output.translations[key] = defaultTranslations[key];\n                output.locales[key] = DEFAULT_LOCALE;\n            }\n        });\n\n        return output;\n    }\n\n    private _flattenObject(object: Translations, result: Translations = {}, parentKey: string = ''): Translations {\n        try {\n            Object.keys(object).forEach(key => {\n                const value = object[key];\n                const resultKey = parentKey ? `${parentKey}.${key}` : key;\n\n                if (isObject(value)) {\n                    return this._flattenObject(value, result, resultKey);\n                }\n\n                result[resultKey] = value;\n            });\n        } catch (err) {\n            this._logger.warn(`Unable to parse object: ${err}`);\n        }\n\n        return result;\n    }\n\n    private _transformData(data: TranslationData): TranslationData {\n        return Object.keys(data).reduce((result, key) => {\n            const value = data[key];\n\n            result[key] = value === null || value === undefined ? '' : value;\n\n            return result;\n        }, {} as TranslationData);\n    }\n\n    private _hasTranslations(): boolean {\n        return Object.keys(this._locales).map(key => this._locales[key])\n            .filter(code => code.split('-')[0] === this._locale.split('-')[0])\n            .length > 0;\n    }\n}\n\nexport interface TranslationData {\n    [key: string]: string | number;\n}\n","import { getDefaultLogger } from '../common/log';\n\nimport LanguageConfig from './language-config';\nimport LanguageService from './language-service';\n\n/**\n * Creates an instance of `LanguageService`.\n *\n * @remarks\n * ```js\n * const language = {{{langJson 'optimized_checkout'}}}; // `langJson` is a Handlebars helper provided by BigCommerce's Stencil template engine.\n * const service = createLanguageService(language);\n *\n * console.log(service.translate('address.city_label'));\n * ```\n *\n * @param config - A configuration object.\n * @returns An instance of `LanguageService`.\n */\nexport default function createLanguageService(config: Partial<LanguageConfig> = {}): LanguageService {\n    return new LanguageService(\n        config,\n        getDefaultLogger()\n    );\n}\n","import { InvalidArgumentError } from '../common/error/errors';\n\nimport { CurrencyConfig } from './currency';\n\nexport default class CurrencyFormatter {\n    private _decimalPlaces: number;\n    private _symbolLocation: string;\n    private _symbol: string;\n    private _thousandsSeparator: string;\n    private _decimalSeparator: string;\n\n    constructor(\n        currencySettings: CurrencyConfig\n    ) {\n        if (!currencySettings) {\n            throw new Error('Currency settings missing');\n        }\n\n        const {\n            decimalPlaces,\n            symbolLocation,\n            symbol,\n            thousandsSeparator,\n            decimalSeparator,\n        } = currencySettings;\n\n        if (\n            typeof symbolLocation !== 'string' ||\n            typeof symbol !== 'string' ||\n            typeof thousandsSeparator !== 'string' ||\n            typeof decimalSeparator !== 'string' ||\n            typeof decimalPlaces !== 'string'\n        ) {\n            throw new InvalidArgumentError('Invalid currency settings provided');\n        }\n\n        this._decimalPlaces = parseInt(decimalPlaces, 10);\n        this._symbolLocation = symbolLocation;\n        this._symbol = symbol;\n        this._thousandsSeparator = thousandsSeparator;\n        this._decimalSeparator = decimalSeparator;\n    }\n\n    format(amount?: number): string {\n        if (typeof amount !== 'number') {\n            throw new InvalidArgumentError('Invalid amount provided');\n        }\n\n        const formattedNumber = this._formatNumber(amount);\n\n        const formattedCurrency = this._formatCurrency(formattedNumber);\n\n        return amount < 0 ?\n            `-${formattedCurrency}` :\n            formattedCurrency;\n    }\n\n    private _formatNumber(amount: number): string {\n        const positiveAmount = Math.abs(amount);\n        const [ integerAmount, decimalAmount = '' ] = (this._toFixed(positiveAmount, this._decimalPlaces)).split('.');\n        const parsedIntegerAmount = integerAmount.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this._thousandsSeparator);\n\n        if (this._decimalPlaces < 1) {\n            return parsedIntegerAmount;\n        }\n\n        return [\n            parsedIntegerAmount,\n            decimalAmount,\n        ].join(this._decimalSeparator);\n    }\n\n    private _formatCurrency(formattedNumber: string): string {\n        return (this._symbolLocation.toLowerCase() === 'left') ?\n            `${this._symbol}${formattedNumber}` :\n            `${formattedNumber}${this._symbol}`;\n    }\n\n    private _toFixed(value: number, precision: number): string {\n        return (+(Math.round(+(value + 'e' + precision)) + 'e' + -precision)).toFixed(precision);\n    }\n}\n","import { bindDecorator as bind } from '../common/utility';\nimport { StoreConfig } from '../config';\n\nimport CurrencyFormatter from './currency-formatter';\n\n/**\n * Responsible for formatting and converting currencies.\n */\n@bind\nexport default class CurrencyService {\n    private _customerFormatter: CurrencyFormatter;\n    private _storeFormatter: CurrencyFormatter;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _storeConfig: StoreConfig\n    ) {\n        this._customerFormatter = new CurrencyFormatter(this._storeConfig.shopperCurrency);\n        this._storeFormatter = new CurrencyFormatter(this._storeConfig.currency);\n    }\n\n    toCustomerCurrency(amount: number): string {\n        const exchangeRate = this._storeConfig.shopperCurrency.exchangeRate;\n\n        return this._customerFormatter.format(amount * exchangeRate);\n    }\n\n    toStoreCurrency(amount: number): string {\n        return this._storeFormatter.format(amount);\n    }\n}\n","import { StoreConfig } from '../config';\n\nimport CurrencyService from './currency-service';\n\n/**\n * Creates an instance of `CurrencyService`.\n *\n * @remarks\n * ```js\n * const { data } = checkoutService.getState();\n * const config = data.getConfig();\n * const checkout = data.getCheckout();\n * const currencyService = createCurrencyService(config);\n *\n * currencyService.toStoreCurrency(checkout.grandTotal);\n * currencyService.toCustomerCurrency(checkout.grandTotal);\n * ```\n *\n * @alpha\n * Please note that `CurrencyService` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @param config - The config object containing the currency configuration\n * @returns an instance of `CurrencyService`.\n */\nexport default function createCurrencyService(\n    config: StoreConfig\n): CurrencyService {\n    return new CurrencyService(config);\n}\n","import { keys } from 'lodash';\n\nimport { LineItemMap } from '../cart';\nimport { Checkout, CheckoutService } from '../checkout';\nimport { InvalidArgumentError } from '../common/error/errors';\nimport { ShopperCurrency, StoreProfile } from '../config';\nimport { Coupon } from '../coupon';\nimport { Order } from '../order';\nimport { ShippingOption } from '../shipping';\n\nimport { AnalyticsTracker } from './analytics-tracker-window';\nimport StepTracker from './step-tracker';\n\nexport interface StepTrackerConfig {\n    checkoutSteps?: AnalyticStepType[];\n}\n\nexport type AnalyticStepType = 'customer' | 'shipping' | 'billing' | 'payment';\n\nconst ORDER_ITEMS_STORAGE_KEY = 'ORDER_ITEMS';\n\nexport enum AnalyticStepId {\n    CUSTOMER = 1,\n    SHIPPING,\n    BILLING,\n    PAYMENT,\n}\n\nconst ANALYTIC_STEPS: { [key: string]: AnalyticStepId } = {\n    customer: AnalyticStepId.CUSTOMER,\n    shipping: AnalyticStepId.SHIPPING,\n    billing: AnalyticStepId.BILLING,\n    payment: AnalyticStepId.PAYMENT,\n};\n\nexport default class AnalyticsStepTracker implements StepTracker {\n    private _checkoutStarted: boolean = false;\n    private _completedSteps: { [key: string]: boolean } = {};\n    private _viewedSteps: { [key in AnalyticStepId]?: boolean; } = {};\n    private _analyticStepOrder: AnalyticStepType[] = [\n        'customer',\n        'shipping',\n        'billing',\n        'payment',\n    ];\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private storage: StorageFallback,\n        private analytics: AnalyticsTracker,\n        { checkoutSteps }: StepTrackerConfig = {}\n    ) {\n        if (checkoutSteps !== undefined) {\n            if (checkoutSteps.some(value => !(value in ANALYTIC_STEPS))) {\n                throw new InvalidArgumentError(\n                    `Invalid checkout steps provided. Valid values are: ${keys(ANALYTIC_STEPS).join(', ')}.`\n                );\n            }\n            this._analyticStepOrder = checkoutSteps;\n\n        }\n    }\n\n    trackCheckoutStarted(): void {\n        if (this._checkoutStarted) {\n            return;\n        }\n\n        const checkout = this.getCheckout();\n\n        if (!checkout) {\n            return;\n        }\n\n        const {\n            coupons,\n            grandTotal,\n            shippingCostTotal,\n            taxTotal,\n            cart: {\n                lineItems,\n                discountAmount,\n                id,\n            },\n        } = checkout;\n\n        const extraItemsData = this.saveExtraItemsData(id, lineItems);\n\n        this.analytics.track('Checkout Started', this.getTrackingPayload({\n            revenue: grandTotal,\n            shipping: shippingCostTotal,\n            tax: taxTotal,\n            discount: discountAmount,\n            coupons,\n            lineItems,\n            extraItemsData,\n        }));\n\n        this._checkoutStarted = true;\n    }\n\n    trackOrderComplete(): void {\n        const order = this.getOrder();\n\n        if (!order) {\n            return;\n        }\n\n        const {\n            isComplete,\n            orderId,\n            orderAmount,\n            shippingCostTotal,\n            taxTotal,\n            discountAmount,\n            coupons,\n            lineItems,\n            cartId,\n        } = order;\n\n        if (!isComplete) {\n            return;\n        }\n\n        const extraItemsData = this.readExtraItemsData(cartId);\n\n        if (extraItemsData === null) {\n            return;\n        }\n\n        this.analytics.track('Order Completed', this.getTrackingPayload({\n            orderId,\n            revenue: orderAmount,\n            shipping: shippingCostTotal,\n            tax: taxTotal,\n            discount: discountAmount,\n            coupons,\n            extraItemsData,\n            lineItems,\n        }));\n\n        this.clearExtraItemData(cartId);\n    }\n\n    trackStepViewed(step: AnalyticStepType): void {\n        const stepId = this.getIdFromStep(step);\n\n        if (!stepId || this.hasStepViewed(stepId)) {\n            return;\n        }\n\n        this.trackViewed(stepId);\n        this.backfill(stepId);\n    }\n\n    trackStepCompleted(step: AnalyticStepType): void {\n        const stepId = this.getIdFromStep(step);\n\n        if (!stepId || this.hasStepCompleted(stepId)) {\n            return;\n        }\n\n        this.backfill(stepId);\n        this.trackCompleted(stepId);\n    }\n\n    private backfill(stepId: AnalyticStepId): void {\n        for (const i of this._analyticStepOrder) {\n            const id = this.getIdFromStep(i);\n\n            if (!id) {\n                break;\n            }\n\n            if (!this.hasStepViewed(id)) {\n                this.trackViewed(id);\n            }\n\n            if (id === stepId) {\n                break;\n            }\n\n            if (!this.hasStepCompleted(id)) {\n                this.trackCompleted(id);\n            }\n        }\n    }\n\n    private trackCompleted(stepId: AnalyticStepId): void {\n        const shippingMethod = this.getSelectedShippingOption();\n        const { code: currency = '' } = this.getShopperCurrency() || {};\n        const paymentMethod = this.getPaymentMethodName();\n\n        const payload: {\n            step: number;\n            currency: string;\n            shippingMethod?: string;\n            paymentMethod?: string;\n        } = {\n            step: stepId,\n            currency,\n        };\n\n        if (shippingMethod) {\n            payload.shippingMethod = shippingMethod.description;\n        }\n\n        if (paymentMethod) {\n            payload.paymentMethod = paymentMethod;\n        }\n\n        // due to an issue with the way the segment library works, we must send at least one of the two\n        // options--otherwise it rejects the track call with no diagnostic messages. however, if we blindly\n        // include both options, it sends a single comma for the value, which is undesireable. by only adding\n        // one of the two (shippingMethod here being arbitrarily chosen), we always have at least one value, but\n        // never send two empty values.\n        if (!payload.shippingMethod && !payload.paymentMethod) {\n            payload.shippingMethod = ' ';\n        }\n\n        this.analytics.track('Checkout Step Completed', payload);\n\n        const shippingMethodId = shippingMethod ? shippingMethod.id : '';\n        const completedStepId = stepId === AnalyticStepId.SHIPPING ?\n            `${stepId}-${shippingMethodId}` :\n            stepId;\n\n        this._completedSteps[completedStepId] = true;\n    }\n\n    private getTrackingPayload({\n        orderId,\n        revenue,\n        shipping,\n        tax,\n        discount,\n        coupons,\n        extraItemsData,\n        lineItems,\n    }: {\n        orderId?: number;\n        revenue: number;\n        shipping: number;\n        tax: number;\n        discount: number;\n        coupons: Coupon[];\n        extraItemsData: ExtraItemsData;\n        lineItems: LineItemMap;\n    }) {\n        const { code = '' } = this.getShopperCurrency() || {};\n        const { storeName = '' } = this.getStoreProfile() || {};\n\n        return {\n            orderId,\n            affiliation: storeName,\n            revenue: this.toShopperCurrency(revenue),\n            shipping: this.toShopperCurrency(shipping),\n            tax: this.toShopperCurrency(tax),\n            discount: this.toShopperCurrency(discount),\n            coupon: (coupons || []).map(coupon => coupon.code).join(','),\n            currency: code,\n            products: this.getProducts(extraItemsData, lineItems),\n        };\n    }\n\n    private hasStepCompleted(stepId: AnalyticStepId): boolean {\n        const shippingOption = this.getSelectedShippingOption();\n        const shippingMethodId = shippingOption ? shippingOption.id : '';\n\n        return this._completedSteps.hasOwnProperty(stepId) ||\n            (\n                stepId === AnalyticStepId.SHIPPING &&\n                this._completedSteps.hasOwnProperty(`${stepId}-${shippingMethodId}`)\n            );\n    }\n\n    private hasStepViewed(stepId: AnalyticStepId): boolean {\n        return !!this._viewedSteps[stepId];\n    }\n\n    private getIdFromStep(step: string): AnalyticStepId | null {\n        const name = step.split('.');\n\n        return ANALYTIC_STEPS[name[0]] || null;\n    }\n\n    private trackViewed(stepId: AnalyticStepId): void {\n        const currency = this.getShopperCurrency();\n\n        this.analytics.track('Checkout Step Viewed', {\n            step: stepId,\n            currency: currency ? currency.code : '',\n        });\n\n        this._viewedSteps[stepId] = true;\n    }\n\n    private getOrder(): Order | undefined {\n        const { data: { getOrder } } = this.checkoutService.getState();\n\n        return getOrder();\n    }\n\n    private getCheckout(): Checkout | undefined {\n        const { data: { getCheckout } } = this.checkoutService.getState();\n\n        return getCheckout();\n    }\n\n    private getShopperCurrency(): ShopperCurrency | undefined {\n        const { data: { getConfig } } = this.checkoutService.getState();\n        const config = getConfig();\n\n        return config && config.shopperCurrency;\n    }\n\n    private getStoreProfile(): StoreProfile | undefined {\n        const { data: { getConfig } } = this.checkoutService.getState();\n        const config = getConfig();\n\n        return config && config.storeProfile;\n    }\n\n    private toShopperCurrency(amount: number): number {\n        const { exchangeRate = 1 } = this.getShopperCurrency() || {};\n\n        return Math.round(amount * exchangeRate * 100) / 100;\n    }\n\n    private saveExtraItemsData(id: string, lineItems: LineItemMap): ExtraItemsData {\n        const data = [\n            ...lineItems.physicalItems,\n            ...lineItems.digitalItems,\n        ].reduce((result, item) => {\n            result[item.productId] = {\n                brand: item.brand ? item.brand : '',\n                category: item.categoryNames ? item.categoryNames.join(', ') : '',\n            };\n\n            return result;\n        }, {} as ExtraItemsData);\n\n        try {\n            this.storage.setItem(this.getStorageKey(id), JSON.stringify(data));\n\n            return data;\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private getStorageKey(id: string): string {\n        return id ? `${ORDER_ITEMS_STORAGE_KEY}_${id}` : '';\n    }\n\n    private readExtraItemsData(id: string): ExtraItemsData | null {\n        try {\n            const item = this.storage.getItem(this.getStorageKey(id));\n\n            return item ? JSON.parse(item) : null;\n        } catch (err) {\n            return null;\n        }\n    }\n\n    private clearExtraItemData(id: string): void {\n        try {\n            this.storage.removeItem(this.getStorageKey(id));\n        } catch (err) {\n            // silently ignore the failure\n        }\n    }\n\n    private getSelectedShippingOption(): ShippingOption | null {\n        const { data } = this.checkoutService.getState();\n        const shippingOption = data.getSelectedShippingOption();\n\n        return (shippingOption && shippingOption.id && shippingOption.description) ?\n            shippingOption :\n            null;\n    }\n\n    private getPaymentMethodName(): string {\n        const { data } = this.checkoutService.getState();\n        const paymentMethod = data.getSelectedPaymentMethod();\n\n        return (paymentMethod && paymentMethod.config) ?\n            paymentMethod.config.displayName || '' :\n            '';\n    }\n\n    private getProducts(itemsData: ExtraItemsData, lineItems: LineItemMap): AnalyticsProduct[] {\n        const customItems: AnalyticsProduct[] = (lineItems.customItems || []).map(item => ({\n            product_id: item.id,\n            sku: item.sku,\n            price: item.listPrice,\n            quantity: item.quantity,\n            name: item.name,\n        }));\n\n        const giftCertificateItems: AnalyticsProduct[] = lineItems.giftCertificates.map(item => {\n            return {\n                product_id: item.id,\n                price: this.toShopperCurrency(item.amount),\n                name: item.name,\n                quantity: 1,\n            };\n        });\n\n        const physicalAndDigitalItems: AnalyticsProduct[] = [\n            ...lineItems.physicalItems,\n            ...lineItems.digitalItems,\n        ].map(item => {\n            let itemAttributes;\n\n            if (item.options && item.options.length) {\n                itemAttributes = item.options.map(option => `${option.name}:${option.value}`);\n                itemAttributes.sort();\n            }\n\n            return {\n                product_id: item.productId,\n                sku: item.sku,\n                price: item.listPrice,\n                image_url: item.imageUrl,\n                name: item.name,\n                quantity: item.quantity,\n                brand: itemsData[item.productId] ? itemsData[item.productId].brand : '',\n                category: itemsData[item.productId] ? itemsData[item.productId].category : '',\n                variant: (itemAttributes || []).join(', '),\n            };\n        });\n\n        return [\n            ...customItems,\n            ...physicalAndDigitalItems,\n            ...giftCertificateItems,\n        ];\n    }\n}\n\nexport interface AnalyticsProduct {\n    product_id: string | number;\n    price: number;\n    quantity: number;\n    name: string;\n    sku?: string;\n    image_url?: string;\n    category?: string;\n    variant?: string;\n    brand?: string;\n}\n\nexport interface ExtraItemsData {\n    [productId: string]: {\n        brand: string;\n        category: string;\n    };\n}\n","import StepTracker from './step-tracker';\n\nexport default class NoopStepTracker implements StepTracker {\n    trackCheckoutStarted(): void {\n        return;\n    }\n\n    trackOrderComplete(): void {\n        return;\n    }\n\n    trackStepViewed(): void {\n        return;\n    }\n\n    trackStepCompleted(): void {\n        return;\n    }\n}\n","import localStorageFallback from 'local-storage-fallback';\n\nimport { CheckoutService } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\n\nimport AnalyticsStepTracker, { StepTrackerConfig } from './analytics-step-tracker';\nimport { isAnalyticsTrackerWindow } from './is-analytics-step-tracker-window';\nimport NoopStepTracker from './noop-step-tracker';\nimport StepTracker from './step-tracker';\n\n/**\n * Creates an instance of `StepTracker`.\n *\n * @remarks\n * ```js\n * const checkoutService = createCheckoutService();\n * await checkoutService.loadCheckout();\n * const stepTracker = createStepTracker(checkoutService);\n *\n * stepTracker.trackCheckoutStarted();\n * ```\n *\n * @alpha\n * Please note that `StepTracker` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @param CheckoutService - An instance of CheckoutService\n * @param StepTrackerConfig - A step tracker config object\n * @returns an instance of `StepTracker`.\n */\nexport default function createStepTracker(\n    checkoutService: CheckoutService,\n    stepTrackerConfig?: StepTrackerConfig\n): StepTracker {\n    const { data } = checkoutService.getState();\n    const config = data.getConfig();\n\n    if (!config) {\n        throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n    }\n\n    const { isAnalyticsEnabled } = config.checkoutSettings;\n\n    if (isAnalyticsEnabled && isAnalyticsTrackerWindow(window)) {\n        return new AnalyticsStepTracker(\n            checkoutService,\n            localStorageFallback,\n            window.analytics,\n            stepTrackerConfig\n        );\n    }\n\n    return new NoopStepTracker();\n}\n","import AnalyticsTrackerWindow from './analytics-tracker-window';\n\nexport function isAnalyticsTrackerWindow(window: Window): window is AnalyticsTrackerWindow {\n    return Boolean((window as AnalyticsTrackerWindow).analytics);\n}\n","export { createTimeout } from '@bigcommerce/request-sender';\n\nexport { createCheckoutService } from './checkout';\nexport { createCheckoutButtonInitializer } from './checkout-buttons';\nexport { embedCheckout } from './embedded-checkout';\nexport { createEmbeddedCheckoutMessenger } from './embedded-checkout/iframe-content';\nexport { createLanguageService } from './locale';\nexport { createCurrencyService } from './currency';\nexport { createStepTracker } from './analytics';\n","import { Checkout } from '../../../checkout';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeModuleCreator, GooglePayBraintreeSDK } from '../braintree';\n\nexport type EnvironmentType = 'PRODUCTION' | 'TEST';\ntype TokenizeType = 'AndroidPayCard' | 'CreditCard';\n\nexport interface GooglePayInitializer {\n    initialize(checkout: Checkout, paymentMethod: PaymentMethod, hasShippingAddress: boolean, publishableKey?: string): Promise<GooglePayPaymentDataRequestV2>;\n    teardown(): Promise<void>;\n    parseResponse(paymentData: GooglePaymentData): TokenizePayload;\n}\n\nexport interface GooglePayCreator extends BraintreeModuleCreator<GooglePayBraintreeSDK> {}\n\nexport interface GooglePayPaymentOptions {\n    environment: EnvironmentType;\n}\n\nexport interface GooglePayIsReadyToPayResponse {\n    result: boolean;\n    paymentMethodPresend?: boolean;\n}\n\nexport interface GooglePaySDK {\n    payments: {\n        api: {\n            PaymentsClient: new(options: GooglePayPaymentOptions) => GooglePayClient;\n        };\n    };\n}\n\nexport interface GooglePayClient {\n    isReadyToPay(options: object): Promise<GooglePayIsReadyToPayResponse>;\n    loadPaymentData(paymentDataRequest: GooglePayPaymentDataRequestV2): Promise<GooglePaymentData>;\n    createButton(options: { [key: string]: string | object }): HTMLElement;\n}\n\nexport interface GooglePayHostWindow extends Window {\n    google?: GooglePaySDK;\n}\n\nexport interface TokenizePayload {\n    nonce: string;\n    details: {\n        cardType: string;\n        lastFour: string;\n        lastTwo?: string;\n    };\n    description?: string;\n    type: TokenizeType;\n    binData?: {\n        commercial: string;\n        countryOfIssuance: string;\n        debit: string;\n        durbinRegulated: string;\n        healthcare: string;\n        issuingBank: string;\n        payroll: string;\n        prepaid: string;\n        productId: string;\n    };\n}\n\nexport interface GooglePaymentData {\n    apiVersion: number;\n    apiVersionMinor: number;\n    paymentMethodData: {\n        description: string;\n        info: {\n            cardDetails: string;\n            cardNetwork: string;\n            billingAddress: GooglePayAddress;\n        };\n        tokenizationData: {\n            token: string;\n            type: string;\n        };\n        type: string;\n    };\n    shippingAddress: GooglePayAddress;\n    email: string;\n}\n\nexport interface GooglePayAddress {\n    address1: string;\n    address2: string;\n    address3: string;\n    administrativeArea: string;\n    companyName: string;\n    countryCode: string;\n    locality: string;\n    name: string;\n    postalCode: string;\n    sortingCode: string;\n    phoneNumber: string;\n}\n\nexport interface GooglePaymentsError {\n    statusCode: string;\n    statusMessage?: string;\n}\n\nexport interface PaymentMethodData {\n    methodId: string;\n    paymentData: {\n        method: string;\n        nonce: string;\n        cardInformation: {\n            type: string;\n            number: string;\n        };\n    };\n}\n\nexport enum ButtonType {\n    Long = 'long',\n    Short = 'short',\n}\nexport enum ButtonColor {\n    Default = 'default',\n    Black = 'black',\n    White = 'white',\n}\n\nexport interface GooglePayPaymentDataRequestV2 {\n    apiVersion: number;\n    apiVersionMinor: number;\n    merchantInfo: {\n        authJwt?: string;\n        merchantId?: string;\n        merchantName?: string;\n    };\n    allowedPaymentMethods: [{\n        type: string;\n        parameters: {\n            allowedAuthMethods: string[];\n            allowedCardNetworks: string[];\n            allowPrepaidCards?: boolean;\n            billingAddressRequired?: boolean;\n            billingAddressParameters?: {\n                format?: string;\n                phoneNumberRequired?: boolean;\n            };\n        };\n        tokenizationSpecification?: {\n            type: string;\n            parameters: {\n                gateway: string;\n                gatewayMerchantId?: string;\n                'braintree:apiVersion'?: string;\n                'braintree:clientKey'?: string;\n                'braintree:merchantId'?: string;\n                'braintree:sdkVersion'?: string;\n                'braintree:authorizationFingerprint'?: string;\n                'stripe:version'?: string;\n                'stripe:publishableKey'?: string;\n            };\n        };\n    }];\n    transactionInfo: {\n        currencyCode: string;\n        totalPriceStatus: string;\n        totalPrice?: string;\n        checkoutOption?: string;\n    };\n    emailRequired?: boolean;\n    shippingAddressRequired?: boolean;\n    shippingAddressParameters?: {\n        allowedCountryCodes?: string[];\n        phoneNumberRequired?: boolean;\n    };\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../../../address';\nimport { BillingAddressActionCreator, BillingAddressUpdateRequestBody } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport { ConsignmentActionCreator } from '../../../shipping';\nimport { PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\n\nimport { ButtonColor, ButtonType, EnvironmentType, GooglePaymentData, GooglePayAddress, GooglePayClient, GooglePayInitializer, GooglePayPaymentDataRequestV2, GooglePaySDK, TokenizePayload } from './googlepay';\nimport GooglePayScriptLoader from './googlepay-script-loader';\n\nexport default class GooglePayPaymentProcessor {\n    private _googlePayClient?: GooglePayClient;\n    private _methodId?: string;\n    private _paymentDataRequest?: GooglePayPaymentDataRequestV2;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _googlePayScriptLoader: GooglePayScriptLoader,\n        private _googlePayInitializer: GooglePayInitializer,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _consigmentActionCreator: ConsignmentActionCreator,\n        private _requestSender: RequestSender\n    ) {}\n\n    initialize(methodId: string): Promise<void> {\n        this._methodId = methodId;\n\n        return this._configureWallet();\n    }\n\n    deinitialize(): Promise<void> {\n        return this._googlePayInitializer.teardown();\n    }\n\n    createButton(\n        onClick: (event: Event) => Promise<void>,\n        buttonType: ButtonType = ButtonType.Short,\n        buttonColor: ButtonColor = ButtonColor.Default\n    ): HTMLElement {\n        if (!this._googlePayClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._googlePayClient.createButton({\n            buttonColor,\n            buttonType,\n            onClick,\n        });\n    }\n\n    displayWallet(): Promise<GooglePaymentData> {\n        if (!this._googlePayClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._googlePayClient.loadPaymentData(this._getPaymentDataRequest());\n    }\n\n    handleSuccess(paymentData: GooglePaymentData): Promise<InternalCheckoutSelectors> {\n        return this._postForm(this._googlePayInitializer.parseResponse(paymentData))\n            .then(() => this._updateBillingAddress(paymentData));\n    }\n\n    updateShippingAddress(shippingAddress: GooglePayAddress): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consigmentActionCreator.updateAddress(this._mapGooglePayAddressToShippingAddress(shippingAddress))\n        );\n    }\n\n    private _configureWallet(): Promise<void> {\n        const methodId = this._getMethodId();\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n                const checkout = state.checkout.getCheckout();\n                const hasShippingAddress = !!state.shippingAddress.getShippingAddress();\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                const { testMode } = paymentMethod.config;\n\n                return Promise.all([\n                    this._googlePayScriptLoader.load(),\n                    this._googlePayInitializer.initialize(checkout, paymentMethod, hasShippingAddress),\n                ]).then(([googlePay, paymentDataRequest]) => {\n                    this._googlePayClient = this._getGooglePayClient(googlePay, testMode);\n                    this._paymentDataRequest = paymentDataRequest;\n\n                    return this._googlePayClient.isReadyToPay({\n                        allowedPaymentMethods: [\n                            {\n                                type: paymentDataRequest.allowedPaymentMethods[0].type,\n                                parameters: {\n                                    allowedAuthMethods: paymentDataRequest.allowedPaymentMethods[0].parameters.allowedAuthMethods,\n                                    allowedCardNetworks: paymentDataRequest.allowedPaymentMethods[0].parameters.allowedCardNetworks,\n                                },\n                            },\n                        ],\n                        apiVersion: paymentDataRequest.apiVersion,\n                        apiVersionMinor: paymentDataRequest.apiVersionMinor,\n                    }).then(response => {\n                        if (response.result) {\n                            return;\n                        }\n\n                        throw new PaymentMethodInvalidError();\n                    });\n                });\n            });\n    }\n\n    private _getCardInformation(cardInformation: { cardType: string; lastFour: string }) {\n        return {\n            type: cardInformation.cardType,\n            number: cardInformation.lastFour,\n        };\n    }\n\n    private _getPaymentDataRequest(): GooglePayPaymentDataRequestV2 {\n        if (!this._paymentDataRequest) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._paymentDataRequest;\n    }\n\n    private _getGooglePayClient(google: GooglePaySDK, testMode?: boolean): GooglePayClient {\n        if (testMode === undefined) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const environment: EnvironmentType = testMode ? 'TEST' : 'PRODUCTION';\n\n        return new google.payments.api.PaymentsClient({ environment });\n    }\n\n    private _getMethodId(): string {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._methodId;\n    }\n\n    private _mapGooglePayAddressToBillingAddress(paymentData: GooglePaymentData, id: string): BillingAddressUpdateRequestBody {\n        return {\n            id,\n            firstName: paymentData.paymentMethodData.info.billingAddress.name.split(' ').slice(0, -1).join(' '),\n            lastName: paymentData.paymentMethodData.info.billingAddress.name.split(' ').slice(-1).join(' '),\n            company: paymentData.paymentMethodData.info.billingAddress.companyName,\n            address1: paymentData.paymentMethodData.info.billingAddress.address1,\n            address2: paymentData.paymentMethodData.info.billingAddress.address2 + paymentData.paymentMethodData.info.billingAddress.address3,\n            city: paymentData.paymentMethodData.info.billingAddress.locality,\n            stateOrProvince: paymentData.paymentMethodData.info.billingAddress.administrativeArea,\n            stateOrProvinceCode: paymentData.paymentMethodData.info.billingAddress.administrativeArea,\n            postalCode: paymentData.paymentMethodData.info.billingAddress.postalCode,\n            countryCode: paymentData.paymentMethodData.info.billingAddress.countryCode,\n            phone: paymentData.paymentMethodData.info.billingAddress.phoneNumber,\n            customFields: [],\n            email: paymentData.email,\n        };\n    }\n\n    private _mapGooglePayAddressToShippingAddress(address: GooglePayAddress): AddressRequestBody {\n        return {\n            firstName: address.name.split(' ').slice(0, -1).join(' '),\n            lastName: address.name.split(' ').slice(-1).join(' '),\n            company: address.companyName,\n            address1: address.address1,\n            address2: address.address2 + address.address3,\n            city: address.locality,\n            stateOrProvince: address.administrativeArea,\n            stateOrProvinceCode: address.administrativeArea,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phoneNumber,\n            customFields: [],\n        };\n    }\n\n    private _postForm(postPaymentData: TokenizePayload): Promise<Response<void>> {\n        const cardInformation = postPaymentData.details;\n\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                payment_type: postPaymentData.type,\n                nonce: postPaymentData.nonce,\n                provider: this._getMethodId(),\n                action: 'set_external_checkout',\n                card_information: this._getCardInformation(cardInformation),\n            },\n        });\n    }\n\n    private _updateBillingAddress(paymentData: GooglePaymentData): Promise<InternalCheckoutSelectors> {\n        const remoteBillingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n        if (!remoteBillingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const googlePayAddressMapped = this._mapGooglePayAddressToBillingAddress(paymentData, remoteBillingAddress.id);\n\n        return this._store.dispatch(\n            this._billingAddressActionCreator.updateAddress(googlePayAddressMapped)\n        );\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { GooglePayHostWindow, GooglePaySDK } from './googlepay';\n\nexport default class GooglePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GooglePayHostWindow = window\n    ) {}\n\n    load(): Promise<GooglePaySDK> {\n        return this._scriptLoader\n            .loadScript('https://pay.google.com/gp/p/js/pay.js')\n            .then(() => {\n                if (!this._window.google) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.google;\n            });\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../../../billing';\nimport { CheckoutRequestSender, CheckoutStore } from '../../../checkout';\nimport { ConsignmentActionCreator, ConsignmentRequestSender } from '../../../shipping';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport PaymentMethodRequestSender from '../../payment-method-request-sender';\n\nimport { GooglePayInitializer } from './googlepay';\nimport GooglePayPaymentProcessor from './googlepay-payment-processor';\nimport GooglePayScriptLoader from './googlepay-script-loader';\n\nexport default function createGooglePayPaymentProcessor(store: CheckoutStore, initializer: GooglePayInitializer): GooglePayPaymentProcessor {\n    const requestSender = createRequestSender();\n    const scriptLoader = getScriptLoader();\n\n    return new GooglePayPaymentProcessor(\n        store,\n        new PaymentMethodActionCreator(\n            new PaymentMethodRequestSender(requestSender)\n        ),\n        new GooglePayScriptLoader(scriptLoader),\n        initializer,\n        new BillingAddressActionCreator(\n            new BillingAddressRequestSender(requestSender)\n        ),\n        new ConsignmentActionCreator(\n            new ConsignmentRequestSender(requestSender),\n            new CheckoutRequestSender(requestSender)\n        ),\n        requestSender\n    );\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when a shopper tries to sign in as a guest but\n * they are already signed in as a registered customer.\n */\nexport default class UnableToContinueAsGuestError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to continue as a guest because the customer is already signed in.');\n\n        this.name = 'UnableToContinueAsGuestError';\n        this.type = 'unable_to_continue_as_guest';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Response } from '@bigcommerce/request-sender';\nimport { Observable, Observer } from 'rxjs';\n\nimport { Checkout, InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { GuestCredentials } from '../customer';\n\nimport { BillingAddressRequestSender } from '.';\nimport { BillingAddressUpdateRequestBody } from './billing-address';\nimport { BillingAddressActionType, ContinueAsGuestAction, UpdateBillingAddressAction } from './billing-address-actions';\nimport { UnableToContinueAsGuestError } from './errors';\n\nexport default class BillingAddressActionCreator {\n    constructor(\n        private _requestSender: BillingAddressRequestSender\n    ) {}\n\n    continueAsGuest(\n        credentials: GuestCredentials,\n        options?: RequestOptions\n    ): ThunkAction<ContinueAsGuestAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ContinueAsGuestAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const customer = state.customer.getCustomer();\n\n            if (customer && !customer.isGuest) {\n                throw new UnableToContinueAsGuestError();\n            }\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            let billingAddressRequestBody;\n\n            if (!billingAddress) {\n                billingAddressRequestBody = credentials;\n            } else {\n                const { country, ...existingBillingAddressRequestBody } = billingAddress;\n\n                billingAddressRequestBody = {\n                    ...existingBillingAddressRequestBody,\n                    ...credentials,\n                };\n            }\n\n            observer.next(createAction(BillingAddressActionType.ContinueAsGuestRequested));\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.ContinueAsGuestSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.ContinueAsGuestFailed, response));\n                });\n        });\n    }\n\n    updateAddress(\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): ThunkAction<UpdateBillingAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateBillingAddressAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(BillingAddressActionType.UpdateBillingAddressRequested));\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            // If email is not present in the address provided by the client, then\n            // fall back to the stored email as it could have been set separately\n            // using a convenience method. We can't rely on billingAddress having\n            // an ID to consider that there's a preexisting email, as billingAddress\n            // object from Order doesn't have an ID.\n            const billingAddressRequestBody = {\n                ...address,\n                email: typeof address.email === 'undefined' && billingAddress ? billingAddress.email : address.email,\n            };\n\n            if (billingAddress && billingAddress.id) {\n                billingAddressRequestBody.id = billingAddress.id;\n            }\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.UpdateBillingAddressSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.UpdateBillingAddressFailed, response));\n                });\n        });\n    }\n\n    private _createOrUpdateBillingAddress(\n        checkoutId: string,\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): Promise<Response<Checkout>> {\n        if (!address.id) {\n            return this._requestSender.createAddress(checkoutId, address, options);\n        }\n\n        return this._requestSender.updateAddress(checkoutId, address, options);\n    }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(subject: Subject<T>, selector: (shared: Observable<T>) => O): UnaryFunction<Observable<T>, ConnectableObservable<ObservedValueOf<O>>>;\nexport function multicast<T>(subjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { defaultIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic, MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```ts\n * import { fromEvent, timer } from 'rxjs';\n * import { throwIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the document was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport function throwIfEmpty <T>(errorFactory: (() => any) = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    return source.lift(new ThrowIfEmptyOperator(errorFactory));\n  };\n}\n\nclass ThrowIfEmptyOperator<T> implements Operator<T, T> {\n  constructor(private errorFactory: () => any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n  }\n}\n\nclass ThrowIfEmptySubscriber<T> extends Subscriber<T> {\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>, private errorFactory: () => any) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.hasValue = true;\n    this.destination.next(value);\n  }\n\n  protected _complete() {\n    if (!this.hasValue) {\n      let err: any;\n      try {\n        err = this.errorFactory();\n      } catch (e) {\n        err = e;\n      }\n      this.destination.error(err);\n    } else {\n        return this.destination.complete();\n    }\n  }\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events that happened in 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { reduce, takeUntil, mapTo } from 'rxjs/operators';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n *   takeUntil(interval(5000)),\n * );\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: T | R, value: T, index?: number) => T | R, seed?: T | R): OperatorFunction<T, T | R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<T | R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<T | R> {\n    return pipe(\n      scan<T, T | R>((acc, value, index) => accumulator(acc, value, index + 1)),\n      takeLast(1),\n    )(source);\n  };\n}\n","export default class Timeout {\n    private _promise: Promise<any>;\n    private _resolve: () => void;\n    private _timeoutToken?: number;\n\n    constructor(\n        private _delay?: number\n    ) {\n        // tslint:disable-next-line:no-empty\n        this._resolve = () => {};\n\n        this._promise = new Promise(resolve => {\n            this._resolve = resolve;\n        });\n    }\n\n    onComplete(callback: () => void): void {\n        this._promise.then(callback);\n    }\n\n    complete(): void {\n        this._resolve();\n\n        if (this._timeoutToken) {\n            window.clearTimeout(this._timeoutToken);\n        }\n    }\n\n    start(): void {\n        if (this._delay) {\n            this._timeoutToken = window.setTimeout(() => this.complete(), this._delay);\n        }\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * ![](takeLast.png)\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * ## Example\n * Take the last 3 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { takeLast } from 'rxjs/operators';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * ![](scan.png)\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { scan, mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const ones = clicks.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(scan((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = null;\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.innerSubscription = null;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n      this.destination.next(innerValue);\n  }\n}\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isNil(value) {\n    if (value === null || value === undefined) {\n        return true;\n    }\n\n    return false;\n}\n","import isObject from './is-object';\n\n/**\n * @param {Object} object\n * @param {Function} predicateFn\n * @returns {Object}\n */\nexport default function omitProperty(object, predicateFn) {\n    if (!isObject(object)) {\n        return object;\n    }\n\n    const keys = Object.keys(object);\n\n    return keys.reduce((result, key) => {\n        const value = object[key];\n\n        if (!predicateFn(value)) {\n            result[key] = value;\n        }\n\n        return result;\n    }, {});\n}\n","import { MULTI_OPTION } from '../payment-method-types';\nimport {\n    BRAINTREE,\n    BRAINTREE_GOOGLEPAY,\n    BRAINTREE_PAYPAL,\n    BRAINTREE_PAYPAL_CREDIT,\n    BRAINTREE_VISACHECKOUT,\n} from '../payment-method-ids';\n\n/**\n * @param {string} id\n * @return {Boolean}\n */\nfunction isBraintreePaymentMethod(id) {\n    switch (id) {\n    case BRAINTREE_PAYPAL:\n    case BRAINTREE_PAYPAL_CREDIT:\n    case BRAINTREE_VISACHECKOUT:\n    case BRAINTREE_GOOGLEPAY:\n        return true;\n    default:\n        return false;\n    }\n}\n\nexport default class PaymentMethodIdMapper {\n    /**\n     * @returns {PaymentMethodIdMapper}\n     */\n    static create() {\n        return new PaymentMethodIdMapper();\n    }\n\n    /**\n     * @param {PaymentMethod} paymentMethod\n     * @returns {string}\n     */\n    mapToId(paymentMethod) {\n        let { id } = paymentMethod;\n\n        if (paymentMethod.method === MULTI_OPTION) {\n            id = paymentMethod.gateway;\n        }\n\n        if (isBraintreePaymentMethod(id)) {\n            return BRAINTREE;\n        }\n\n        return id;\n    }\n}\n","export default class UrlHelper {\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {CustomerMapper}\n     */\n    static create(config) {\n        return new UrlHelper(config);\n    }\n\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {void}\n     */\n    constructor(config) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     */\n    get host() {\n        return this.config.host;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getOffsitePaymentUrl() {\n        return `${this.host}/pay/initialize`;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getPaymentUrl() {\n        return `${this.host}/api/public/v1/orders/payments`;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getGenerateClientTokenUrl() {\n        return `${this.host}/api/v2/public/payments/client_tokens`;\n    }\n}\n","import deepAssign from 'deep-assign';\nimport objectAssign from 'object-assign';\nimport { POST } from './method-types';\nimport DEFAULT_OPTIONS from './default-options';\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\n\nexport default class RequestSender {\n    /**\n     * @returns {RequestSender}\n     */\n    static create() {\n        const requestFactory = RequestFactory.create();\n        const payloadTransformer = PayloadTransformer.create();\n\n        return new RequestSender(requestFactory, payloadTransformer);\n    }\n\n    /**\n     * @param {RequestFactory} requestFactory\n     * @param {PayloadTransformer} payloadTransformer\n     */\n    constructor(requestFactory, payloadTransformer) {\n        /**\n         * @private\n         * @type {RequestFactory}\n         */\n        this.requestFactory = requestFactory;\n\n        /**\n         * @private\n         * @type {PayloadTransformer}\n         */\n        this.payloadTransformer = payloadTransformer;\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} data\n     * @param {Object} [options]\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    sendRequest(url, data, options, callback) {\n        const mergedOptions = deepAssign({}, DEFAULT_OPTIONS, options);\n\n        const xhr = this.requestFactory.createRequest(url, mergedOptions, (error) => {\n            const response = this.payloadTransformer.fromResponse(xhr);\n\n            if (!callback) {\n                return;\n            }\n\n            if (error || !this.isSuccessfulRequest(xhr)) {\n                callback(response);\n                return;\n            }\n\n            callback(null, response);\n        });\n\n        const payload = this.payloadTransformer.toRequest(data, mergedOptions.headers['Content-Type']);\n\n        xhr.send(payload);\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} data\n     * @param {Object} [options]\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    postRequest(url, data, options, callback) {\n        const mergedOptions = objectAssign({}, options, {\n            method: POST,\n        });\n\n        this.sendRequest(url, data, mergedOptions, callback);\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @returns {boolean}\n     */\n    isSuccessfulRequest(xhr) {\n        return xhr.status >= 200 && xhr.status < 300;\n    }\n}\n","export const GET = 'GET';\nexport const POST = 'POST';\nexport const DELETE = 'DELETE';\n","import { CookiesStatic } from 'js-cookie';\nimport merge from 'lodash/merge';\n\nimport isPromise from './is-promise';\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\nimport RequestOptions from './request-options';\nimport RequestSenderOptions from './request-sender-options';\nimport Response from './response';\nimport Timeout from './timeout';\n\nexport default class RequestSender {\n    constructor(\n        private _requestFactory: RequestFactory,\n        private _payloadTransformer: PayloadTransformer,\n        private _cookie: CookiesStatic,\n        private _options?: RequestSenderOptions\n    ) {}\n\n    sendRequest<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        const requestOptions = this._mergeDefaultOptions(options);\n        const request = this._requestFactory.createRequest(this._prependHost(url), requestOptions);\n\n        return new Promise((resolve, reject) => {\n            const requestHandler = () => {\n                const response = this._payloadTransformer.toResponse(request);\n\n                if (response.status >= 200 && response.status < 300) {\n                    resolve(response);\n                } else {\n                    reject(response);\n                }\n            };\n\n            request.onload = requestHandler;\n            request.onerror = requestHandler;\n            request.onabort = requestHandler;\n            request.ontimeout = requestHandler;\n\n            if (requestOptions.timeout instanceof Timeout) {\n                requestOptions.timeout.onComplete(() => request.abort());\n                requestOptions.timeout.start();\n            }\n\n            if (isPromise(requestOptions.timeout)) {\n                requestOptions.timeout.then(() => request.abort());\n            }\n\n            request.send(this._payloadTransformer.toRequestBody(requestOptions));\n        });\n    }\n\n    get<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'GET' });\n    }\n\n    post<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'POST' });\n    }\n\n    put<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'PUT' });\n    }\n\n    patch<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'PATCH' });\n    }\n\n    delete<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'DELETE' });\n    }\n\n    private _mergeDefaultOptions(options?: RequestOptions): RequestOptions {\n        const defaultOptions: Partial<RequestOptions> = {\n            credentials: true,\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n            },\n            method: 'GET',\n        };\n\n        const csrfToken = this._cookie.get('XSRF-TOKEN');\n\n        if (csrfToken && defaultOptions.headers) {\n            defaultOptions.headers['X-XSRF-TOKEN'] = csrfToken;\n        }\n\n        if (options && options.body && defaultOptions.headers) {\n            defaultOptions.headers['Content-Type'] = 'application/json';\n        }\n\n        return merge({}, defaultOptions, options);\n    }\n\n    private _prependHost(url: string): string {\n        if (!this._options || !this._options.host || /^https?:\\/\\//.test(url)) {\n            return url;\n        }\n\n        return `${this._options.host.replace(/\\/$/, '')}/${url.replace(/^\\//, '')}`;\n    }\n}\n","import { merge } from 'lodash';\nimport {\n    defer,\n    from,\n    of,\n    throwError,\n    BehaviorSubject,\n    Observable,\n    Subject,\n    Subscribable,\n    SubscribableOrPromise\n} from 'rxjs';\nimport {\n    catchError,\n    concatMap,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    mergeMap,\n    scan,\n    skip,\n    tap,\n} from 'rxjs/operators';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport deepFreeze from './deep-freeze';\nimport DispatchableDataStore, { DispatchableAction, DispatchOptions } from './dispatchable-data-store';\nimport isObservableActionLike from './is-observable-action-like';\nimport noopActionTransformer from './noop-action-transformer';\nimport noopStateTransformer from './noop-state-transformer';\nimport ReadableDataStore, { Filter, Subscriber, SubscribeOptions, Unsubscriber } from './readable-data-store';\nimport Reducer from './reducer';\nimport ThunkAction from './thunk-action';\n\nexport default class DataStore<TState, TAction extends Action = Action, TTransformedState = TState> implements\n    ReadableDataStore<TTransformedState>, DispatchableDataStore<TTransformedState, TAction> {\n    private _reducer: Reducer<TState, TAction>;\n    private _options: DataStoreOptions<TState, TAction, TTransformedState>;\n    private _notification$: Subject<TTransformedState>;\n    private _dispatchers: { [key: string]: Dispatcher<TAction> };\n    private _dispatchQueue$: Subject<Dispatcher<TAction>>;\n    private _state$: BehaviorSubject<TTransformedState>;\n    private _errors: { [key: string]: Subject<Error> };\n\n    constructor(\n        reducer: Reducer<TState, TAction>,\n        initialState: Partial<TState> = {},\n        options?: Partial<DataStoreOptions<TState, TAction, TTransformedState>>\n    ) {\n        this._reducer = reducer;\n        this._options = {\n            actionTransformer: noopActionTransformer,\n            equalityCheck: shallowEqual,\n            shouldWarnMutation: true,\n            stateTransformer: noopStateTransformer,\n            ...options,\n        };\n        this._state$ = new BehaviorSubject(this._options.stateTransformer(initialState as TState));\n        this._notification$ = new Subject();\n        this._dispatchers = {};\n        this._dispatchQueue$ = new Subject();\n        this._errors = {};\n\n        this._dispatchQueue$\n            .pipe(\n                mergeMap(dispatcher$ => dispatcher$.pipe(concatMap(action$ => action$))),\n                filter(action => !!action.type),\n                scan(\n                    (states: StateTuple<TState, TTransformedState>, action: TAction) =>\n                        this._transformStates(states, action),\n                    {\n                        state: initialState as TState,\n                        transformedState: this._state$.getValue(),\n                    }\n                ),\n                distinctUntilChanged(({ state: stateA }, { state: stateB }) =>\n                    this._options.equalityCheck(stateA, stateB)\n                ),\n                map(({ transformedState }) => transformedState)\n            )\n            .subscribe(this._state$);\n\n        this.dispatch({ type: 'INIT' } as TAction);\n    }\n\n    dispatch<TDispatchAction extends TAction>(\n        action: DispatchableAction<TDispatchAction, TTransformedState>,\n        options?: DispatchOptions\n    ): Promise<TTransformedState> {\n        if (isObservableActionLike(action)) {\n            return this._dispatchObservableAction(action, options);\n        }\n\n        if (typeof action === 'function') {\n            return this._dispatchThunkAction(action, options);\n        }\n\n        return this._dispatchAction(action);\n    }\n\n    getState(): TTransformedState {\n        return this._state$.getValue();\n    }\n\n    notifyState(): void {\n        this._notification$.next(this.getState());\n    }\n\n    subscribe(subscriber: Subscriber<TTransformedState>, ...filters: Array<Filter<TTransformedState>>): Unsubscriber;\n    subscribe(subscriber: Subscriber<TTransformedState>, options: SubscribeOptions<TTransformedState>): Unsubscriber;\n    subscribe(subscriber: Subscriber<TTransformedState>, ...args: any[]): Unsubscriber {\n        const options: SubscribeOptions<TTransformedState> = typeof args[0] === 'object' ? args[0] : undefined;\n        const filters: Array<Filter<TTransformedState>> = options ? (options.filters || []) : args;\n\n        let state$: Observable<TTransformedState> = this._state$;\n\n        if (filters.length > 0) {\n            state$ = state$.pipe(\n                distinctUntilChanged((stateA, stateB) =>\n                    filters.every(filterFn =>\n                        this._options.equalityCheck(filterFn(stateA), filterFn(stateB))\n                    )\n                )\n            );\n        }\n\n        if (options && options.initial === false) {\n            state$ = state$.pipe(skip(1));\n        }\n\n        const subscriptions = [\n            state$.subscribe(subscriber),\n            this._notification$.subscribe(subscriber),\n        ];\n\n        return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    private _transformStates(\n        states: StateTuple<TState, TTransformedState>,\n        action: TAction\n    ): StateTuple<TState, TTransformedState> {\n        try {\n            const newState = this._options.shouldWarnMutation === false ?\n                this._reducer(states.state, action) :\n                deepFreeze(this._reducer(states.state, action), {\n                    equalityCheck: this._options.equalityCheck,\n                    previousValue: states.state,\n                });\n            const transformedState = this._options.stateTransformer(newState);\n\n            return { state: newState, transformedState };\n        } catch (error) {\n            this._getDispatchError(action.meta && action.meta.queueId).next(error);\n\n            return { state: states.state, transformedState: states.transformedState };\n        }\n    }\n\n    private _dispatchAction<TDispatchAction extends TAction>(\n        action: TDispatchAction\n    ): Promise<TTransformedState> {\n        return this._dispatchObservableAction(\n            action.error ? throwError(action) : of(action)\n        );\n    }\n\n    private _dispatchObservableAction<TDispatchAction extends TAction>(\n        action$: SubscribableOrPromise<TDispatchAction>,\n        options: DispatchOptions = {}\n    ): Promise<TTransformedState> {\n        return new Promise((resolve, reject) => {\n            const error$ = this._getDispatchError(options.queueId);\n            const transformedAction$ = this._options.actionTransformer(\n                from(action$).pipe(\n                    map(action =>\n                        options.queueId ?\n                            merge({}, action, { meta: { queueId: options.queueId } }) :\n                            action\n                    )\n                ) as Subscribable<TDispatchAction>\n            );\n\n            this._getDispatcher(options.queueId).next(\n                from(transformedAction$)\n                    .pipe(\n                        map((action, index) => {\n                            if (index === 0) {\n                                error$.pipe(first()).subscribe(reject);\n                            }\n\n                            if (action.error) {\n                                reject(action.payload);\n                            }\n\n                            return action;\n                        }),\n                        catchError(action => {\n                            reject(action instanceof Error ? action : action.payload);\n\n                            return of(action);\n                        }),\n                        tap({\n                            complete: () => {\n                                resolve(this.getState());\n                            },\n                        })\n                    )\n            );\n        });\n    }\n\n    private _dispatchThunkAction<TDispatchAction extends TAction>(\n        thunkAction: ThunkAction<TDispatchAction, TTransformedState>,\n        options: DispatchOptions = {}\n    ): Promise<TTransformedState> {\n        return this._dispatchObservableAction(defer(() => thunkAction(this)), options);\n    }\n\n    private _getDispatcher(queueId: string = 'default'): Dispatcher<TAction> {\n        if (!this._dispatchers[queueId]) {\n            this._dispatchers[queueId] = new Subject();\n\n            this._dispatchQueue$.next(this._dispatchers[queueId]);\n        }\n\n        return this._dispatchers[queueId];\n    }\n\n    private _getDispatchError(queueId: string = 'default'): Subject<Error> {\n        if (!this._errors[queueId]) {\n            this._errors[queueId] = new Subject();\n        }\n\n        return this._errors[queueId];\n    }\n}\n\nexport interface DataStoreOptions<TState, TAction, TTransformedState> {\n    shouldWarnMutation: boolean;\n    actionTransformer(action: Subscribable<TAction>): Subscribable<TAction>;\n    equalityCheck(valueA: any, valueB: any): boolean;\n    stateTransformer(state: TState): TTransformedState;\n}\n\ninterface StateTuple<TState, TTransformedState> {\n    state: TState;\n    transformedState: TTransformedState;\n}\n\ntype Dispatcher<TAction> = Subject<Subscribable<TAction>>;\n","import { isPlainObject } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nexport interface DeepFreezeOptions<T> {\n    previousValue?: T;\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n\nexport default function deepFreeze<T>(object: T[], options?: DeepFreezeOptions<T>): ReadonlyArray<T>;\nexport default function deepFreeze<T extends object>(object: T, options?: DeepFreezeOptions<T>): Readonly<T>;\nexport default function deepFreeze<T>(object: T, options?: DeepFreezeOptions<T>): T;\nexport default function deepFreeze<T>(\n    object: T[] | T,\n    options?: DeepFreezeOptions<T>\n): ReadonlyArray<T> | Readonly<T> | T {\n    try {\n        const { equalityCheck = shallowEqual, previousValue = null } = options || {};\n\n        if (equalityCheck(object, previousValue) && Object.isFrozen(previousValue)) {\n            return previousValue as T;\n        }\n\n        if (Object.isFrozen(object) || (!Array.isArray(object) && !isPlainObject(object))) {\n            return object;\n        }\n\n        if (Array.isArray(object)) {\n            return Object.freeze(object.map((value, index) =>\n                deepFreeze(value, {\n                    equalityCheck,\n                    previousValue: Array.isArray(previousValue) ? previousValue[index] : undefined,\n                })\n            ));\n        }\n\n        return Object.freeze(Object.getOwnPropertyNames(object).reduce((result, key) => {\n            result[key as keyof T] = deepFreeze(object[key as keyof T], {\n                equalityCheck,\n                previousValue: previousValue && previousValue.hasOwnProperty(key) ?\n                    (previousValue as any)[key] :\n                    undefined,\n            });\n\n            return result;\n        }, {} as T));\n    } catch (error) {\n        // Browsers that only support ES5 will throw `TypeError` when checking\n        // if a primitive value is frozen or trying to freeze a primitive value.\n        if (error instanceof TypeError) {\n            return object;\n        }\n\n        throw error;\n    }\n}\n","import { assign } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport Reducer from './reducer';\n\nexport default function combineReducers<TState, TAction extends Action = Action>(\n    reducers: ReducerMap<TState, TAction>,\n    options?: CombineReducersOptions\n): Reducer<TState, TAction> {\n    const { equalityCheck = shallowEqual } = options || {};\n\n    return (state, action) =>\n        Object.keys(reducers).reduce((result, key) => {\n            const reducer = reducers[key as keyof TState];\n            const currentState = state ? state[key as keyof TState] : undefined;\n            const newState = reducer(currentState, action);\n\n            if (equalityCheck(currentState, newState) && result) {\n                return result;\n            }\n\n            return assign({}, result, { [key]: newState });\n        }, state || {} as TState);\n}\n\nexport type ReducerMap<TState, TAction extends Action = Action> = {\n    [Key in keyof TState]: Reducer<TState[Key], TAction>;\n};\n\nexport interface CombineReducersOptions {\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n","import { omitBy } from 'lodash';\n\nimport Action from './action';\n\nexport default function createAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    payload?: TPayload,\n    meta?: TMeta\n): Action<TPayload, TMeta, TType> {\n    if (typeof type !== 'string' || type === '') {\n        throw new Error('`type` must be a string');\n    }\n\n    return { type, ...omitBy({ payload, meta }, value => value === undefined) };\n}\n","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.png)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { audit } from 'rxjs/operators'\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private value: T;\n  private hasValue: boolean = false;\n  private throttled: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      let duration;\n      try {\n        const { durationSelector } = this;\n        duration = durationSelector(value);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n      const innerSubscription = subscribeToResult(this, duration);\n      if (!innerSubscription || innerSubscription.closed) {\n        this.clearThrottle();\n      } else {\n        this.add(this.throttled = innerSubscription);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = null;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = null;\n      this.hasValue = false;\n      this.destination.next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R, outerIndex: number, innerIndex: number): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return mergeMap(project, resultSelector, 1);\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Example\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4).pipe(\n *     distinctUntilChanged(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n * ```\n *\n * An example using a compare function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilChanged((p: Person, q: Person) => p.name === q.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n    let key: any;\n    try {\n      const { keySelector } = this;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n    let result = false;\n    if (this.hasKey) {\n      try {\n        const { compare } = this;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {OperatorFunction} from '../types';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * ## Example\n * Find and emit the first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { find } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg)) as Observable<T | undefined>;\n}\n\nexport class FindValueOperator<T> implements Operator<T, T | number | undefined> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    const {predicate, thisArg} = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private _throttled: Subscription;\n  private _sendValue: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n    this._hasValue = false;\n    this._sendValue = null;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = subscribeToResult(this, duration));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = null;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * ![](timeoutWith.png)\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * ## Example\n * Add fallback observable\n * ```ts\n * import { intrerval } from 'rxjs';\n * import { timeoutWith } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const minutes = interval(60 * 1000);\n *\n * seconds.pipe(timeoutWith(900, minutes))\n *   .subscribe(\n *     value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                  // since first value of `seconds` will not arrive fast enough.\n *     err => console.log(err),     // Would be called after 900ms in case of `timeout`,\n *                                  // but here will never be called.\n *   );\n * ```\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private action: SchedulerAction<TimeoutWithSubscriber<T, R>> = null;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    (<any> subscriber)._unsubscribeAndRecycle();\n    subscriber.add(subscribeToResult(subscriber, withObservable));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = null;\n    this.scheduler = null;\n    this.withObservable = null;\n  }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadScriptOptions {\n    async: boolean;\n    attributes: ScriptAttributes;\n}\n\nexport interface PreloadScriptOptions {\n    prefetch: boolean;\n}\n\nexport interface ScriptAttributes {\n    [key: string]: string;\n}\n\nexport default class ScriptLoader {\n    private _scripts: { [key: string]: Promise<void> } = {};\n    private _preloadedScripts: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadScript(src: string, options?: LoadScriptOptions): Promise<void> {\n        if (!this._scripts[src]) {\n            this._scripts[src] = new Promise((resolve, reject) => {\n                const script = document.createElement('script') as LegacyHTMLScriptElement;\n                const { async = false, attributes = {} } = options || {};\n\n                Object.keys(attributes)\n                    .forEach(key => {\n                        script.setAttribute(key, attributes[key]);\n                    });\n\n                script.onload = () => resolve();\n                script.onreadystatechange = () => resolve();\n                script.onerror = event => {\n                    delete this._scripts[src];\n                    reject(event);\n                };\n                script.async = async;\n                script.src = src;\n\n                document.body.appendChild(script);\n            });\n        }\n\n        return this._scripts[src];\n    }\n\n    loadScripts(urls: string[], options?: LoadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadScript(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadScript(url: string, options?: PreloadScriptOptions): Promise<void> {\n        if (!this._preloadedScripts[url]) {\n            this._preloadedScripts[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedScript = document.createElement('link');\n\n                    preloadedScript.as = 'script';\n                    preloadedScript.rel = rel;\n                    preloadedScript.href = url;\n\n                    preloadedScript.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedScript.onerror = () => {\n                        delete this._preloadedScripts[url];\n                        reject();\n                    };\n\n                    document.head.appendChild(preloadedScript);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'application/javascript' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedScripts[url];\n    }\n\n    preloadScripts(urls: string[], options?: PreloadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadScript(url, options)))\n            .then(() => undefined);\n    }\n}\n\ninterface LegacyHTMLScriptElement extends HTMLScriptElement {\n    // `onreadystatechange` is needed to support legacy IE\n    onreadystatechange(this: HTMLElement, event: Event): any;\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport ScriptLoader from './script-loader';\n\nexport default function createScriptLoader(): ScriptLoader {\n    return new ScriptLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","export default class BrowserSupport {\n    canSupportRel(rel: string): boolean {\n        const link = document.createElement('link');\n\n        return !!(\n            link.relList &&\n            link.relList.supports &&\n            link.relList.supports(rel)\n        );\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadStylesheetOptions {\n    prepend: boolean;\n}\n\nexport interface PreloadStylesheetOptions {\n    prefetch: boolean;\n}\n\nexport default class StylesheetLoader {\n    private _stylesheets: { [key: string]: Promise<void> } = {};\n    private _preloadedStylesheets: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadStylesheet(src: string, options?: LoadStylesheetOptions): Promise<void> {\n        if (!this._stylesheets[src]) {\n            this._stylesheets[src] = new Promise((resolve, reject) => {\n                const stylesheet = document.createElement('link');\n                const { prepend = false } = options || {};\n\n                stylesheet.onload = () => resolve();\n                stylesheet.onerror = event => {\n                    delete this._stylesheets[src];\n                    reject(event);\n                };\n                stylesheet.rel = 'stylesheet';\n                stylesheet.href = src;\n\n                if (prepend && document.head.children[0]) {\n                    document.head.insertBefore(stylesheet, document.head.children[0]);\n                } else {\n                    document.head.appendChild(stylesheet);\n                }\n            });\n        }\n\n        return this._stylesheets[src];\n    }\n\n    loadStylesheets(urls: string[], options?: LoadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadStylesheet(url: string, options?: PreloadStylesheetOptions): Promise<void> {\n        if (!this._preloadedStylesheets[url]) {\n            this._preloadedStylesheets[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedStylesheet = document.createElement('link');\n\n                    preloadedStylesheet.as = 'style';\n                    preloadedStylesheet.rel = prefetch ? 'prefetch' : 'preload';\n                    preloadedStylesheet.href = url;\n\n                    preloadedStylesheet.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedStylesheet.onerror = event => {\n                        delete this._preloadedStylesheets[url];\n                        reject(event);\n                    };\n\n                    document.head.appendChild(preloadedStylesheet);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'text/css' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedStylesheets[url];\n    }\n\n    preloadStylesheets(urls: string[], options?: PreloadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport StylesheetLoader from './stylesheet-loader';\n\nexport default function createStylesheetLoader(): StylesheetLoader {\n    return new StylesheetLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","import FormBuilder from './form-builder';\nimport FormPosterOptions from './form-poster-options';\nimport { isAbsoluteUrl, joinPaths } from './url-utils';\n\nexport default class FormPoster {\n    /**\n     * @internal\n     */\n    constructor(\n        private _formBuilder: FormBuilder,\n        private _options?: FormPosterOptions\n    ) {}\n\n    postForm(url: string, data: { [key: string]: any }, callback?: () => void, target?: string): void {\n        const form = this._formBuilder.build(this._prependHost(url), data, target);\n\n        window.addEventListener('unload', function handleUnload() {\n            window.removeEventListener('unload', handleUnload);\n\n            if (callback) {\n                callback();\n            }\n        });\n\n        // In order to submit the form, the form must be attached to DOM.\n        document.body.appendChild(form);\n        form.submit();\n        document.body.removeChild(form);\n    }\n\n    private _prependHost(url: string): string {\n        if (!this._options || !this._options.host || isAbsoluteUrl(url)) {\n            return url;\n        }\n\n        return joinPaths(this._options.host, url);\n    }\n}\n","export const API = 'PAYMENT_TYPE_API';\nexport const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n","export const APPLICATION_JSON = 'application/json';\n","import * as cookie from 'js-cookie';\n\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\nimport RequestSender from './request-sender';\nimport RequestSenderOptions from './request-sender-options';\n\nexport default function createRequestSender(options?: RequestSenderOptions): RequestSender {\n    return new RequestSender(\n        new RequestFactory(),\n        new PayloadTransformer(),\n        cookie,\n        options\n    );\n}\n","import Headers from './headers';\nimport RequestOptions from './request-options';\nimport Response from './response';\nimport toFormUrlEncoded from './to-form-url-encoded';\n\nconst JSON_CONTENT_TYPE_REGEXP = /application\\/(\\w+\\+)?json/;\nconst FORM_URLENCODED_CONTENT_TYPE_REGEXP = /application\\/x-www-form-urlencoded/;\n\nexport default class PayloadTransformer {\n    toRequestBody(options: RequestOptions): any {\n        const contentType = options.headers ? this._getHeader(options.headers, 'Content-Type') : '';\n\n        if (options.body) {\n            if (JSON_CONTENT_TYPE_REGEXP.test(contentType)) {\n                return JSON.stringify(options.body);\n            }\n\n            if (FORM_URLENCODED_CONTENT_TYPE_REGEXP.test(contentType)) {\n                return toFormUrlEncoded(options.body);\n            }\n        }\n\n        return options.body;\n    }\n\n    toResponse(xhr: XMLHttpRequest): Response {\n        const headers = this._parseResponseHeaders(xhr.getAllResponseHeaders());\n\n        // Using `responseText` to support legacy IE\n        const body = this._parseResponseBody(\n            'response' in xhr ? xhr.response : (xhr as any).responseText,\n            headers\n        );\n\n        return {\n            body,\n            headers,\n            status: xhr.status,\n            statusText: xhr.statusText,\n        };\n    }\n\n    private _parseResponseBody(body: string, headers: Headers): any {\n        const contentType = this._getHeader(headers, 'Content-Type');\n\n        if (body && JSON_CONTENT_TYPE_REGEXP.test(contentType)) {\n            return JSON.parse(body);\n        }\n\n        return body;\n    }\n\n    private _parseResponseHeaders(rawHeaders: string): Headers {\n        const lines = rawHeaders ? rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ').split(/\\r?\\n/) : [];\n\n        return lines.reduce((headers, line) => {\n            const parts = line.split(':');\n            const key = (parts.shift() || '').trim();\n\n            if (!key) {\n                return headers;\n            }\n\n            return {\n                ...headers,\n                [key.toLowerCase()]: parts.join(':').trim(),\n            };\n        }, {});\n    }\n\n    private _getHeader(headers: Headers, key: string): string {\n        if (!headers || !key) {\n            return '';\n        }\n\n        return headers[key] || headers[key.toLowerCase()] || '';\n    }\n}\n","export default function toFormUrlEncoded(data: any): string {\n    if (typeof data !== 'object' || data === null) {\n        return data;\n    }\n\n    return Object.keys(data)\n        .filter(key => data[key] !== undefined)\n        .map(key => {\n            const value = data[key];\n\n            if (typeof value === 'string') {\n                return `${key}=${encodeURIComponent(value)}`;\n            }\n\n            return `${key}=${encodeURIComponent(JSON.stringify(value) || '')}`;\n        })\n        .join('&');\n}\n","import * as queryString from 'query-string';\n\nimport Headers from './headers';\nimport RequestOptions from './request-options';\n\nexport default class RequestFactory {\n    createRequest(url: string, options?: RequestOptions): XMLHttpRequest {\n        const xhr = new XMLHttpRequest();\n\n        this._configureRequest(xhr, url, options);\n\n        return xhr;\n    }\n\n    private _configureRequest(xhr: XMLHttpRequest, url: string, options: RequestOptions = {}): void {\n        xhr.open(options.method || 'GET', this._formatUrl(url, options.params), true);\n\n        if (options.headers) {\n            this._configureRequestHeaders(xhr, options.headers);\n        }\n\n        if (typeof options.credentials === 'boolean') {\n            xhr.withCredentials = options.credentials;\n        }\n\n        if (typeof options.timeout === 'number') {\n            xhr.timeout = options.timeout;\n        }\n    }\n\n    private _configureRequestHeaders(xhr: XMLHttpRequest, headers: Headers): void {\n        Object.keys(headers).forEach(key => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n    }\n\n    private _formatUrl(url: string, params?: object): string {\n        if (!params || Object.keys(params).length === 0) {\n            return url;\n        }\n\n        return `${url}?${queryString.stringify(params)}`;\n    }\n}\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nfunction extract(str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n}\n\nfunction parse(str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: parse(extract(str), opts)\n\t};\n};\n","export default function isPromise(promise: any): promise is PromiseLike<any> {\n    return !!promise &&\n        (typeof promise === 'object' || typeof promise === 'function') &&\n        typeof promise.then === 'function';\n}\n","import Timeout from './timeout';\n\nexport default function createTimeout(delay?: number): Timeout {\n    return new Timeout(delay);\n}\n","import { Subscribable, SubscribableOrPromise } from 'rxjs';\n\nimport Action from './action';\nimport { DispatchableAction } from './dispatchable-data-store';\n\nexport default function isObservableActionLike<TAction extends Action = Action>(\n    action: DispatchableAction<TAction>\n): action is SubscribableOrPromise<TAction> {\n    return (\n        typeof (action as Subscribable<TAction>).subscribe === 'function' ||\n        typeof (action as PromiseLike<TAction>).then === 'function'\n    );\n}\n","import { Subscribable } from 'rxjs';\n\nimport Action from './action';\n\nexport default function noopActionTransformer<TAction extends Action, TTransformedAction extends Action = TAction>(\n    action: Subscribable<TAction>\n): Subscribable<TTransformedAction> {\n    return action as any as Subscribable<TTransformedAction>;\n}\n","export default function noopStateTransformer<TState, TTransformedState = TState>(\n    state: TState\n): TTransformedState {\n    return state as any as TTransformedState;\n}\n","import { curryRight, flowRight } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport Reducer from './reducer';\n\nexport default function composeReducers<TState, TStateA, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TState, action: TAction) => TStateA,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TState, action: TAction) => TStateB,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TStateC, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TStateC, action: TAction) => TStateB,\n    reducerD: (state: TState, action: TAction) => TStateC,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TStateC, TStateD, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TStateC, action: TAction) => TStateB,\n    reducerD: (state: TStateD, action: TAction) => TStateC,\n    reducerE: (state: TState, action: TAction) => TStateD,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TAction extends Action = Action>(\n    ...args: any[]\n): Reducer<TState, TAction> {\n    let reducers: Array<Reducer<TState, TAction>> = args;\n    let options: ComposeReducersOptions = {};\n\n    if (typeof args[args.length - 1] === 'object') {\n        reducers = args.slice(0, -1);\n        options = { ...options, ...args[args.length - 1] };\n    }\n\n    const { equalityCheck = shallowEqual } = options;\n\n    return (state, action) => {\n        const newState = flowRight(\n            reducers\n                .filter(reducer => reducer.length === 2)\n                .map(reducer => curryRight(reducer)(action))\n        )(state);\n\n        return equalityCheck(state, newState) ? state : newState;\n    };\n}\n\nexport interface ComposeReducersOptions {\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n","import Action from './action';\nimport combineReducers, { ReducerMap } from './combine-reducers';\nimport DataStore, { DataStoreOptions } from './data-store';\nimport Reducer from './reducer';\n\nexport default function createDataStore<TState, TAction extends Action = Action, TTransformedState = TState>(\n    reducer: Reducer<TState, TAction> | ReducerMap<TState, TAction>,\n    initialState?: Partial<TState>,\n    options?: Partial<DataStoreOptions<TState, TAction, TTransformedState>>\n): DataStore<TState, TAction, TTransformedState> {\n    if (typeof reducer === 'function') {\n        return new DataStore(reducer, initialState, options);\n    }\n\n    return new DataStore(\n        combineReducers(reducer, { equalityCheck: options && options.equalityCheck }),\n        initialState,\n        options\n    );\n}\n","import Action from './action';\nimport createAction from './create-action';\n\nexport default function createErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    payload?: TPayload,\n    meta?: TMeta\n): Action<TPayload, TMeta, TType> {\n    return {\n        ...createAction(type, payload, meta),\n        error: true,\n    };\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import lodashMemoize from 'lodash.memoize'; // tslint:disable-line:match-default-export-name\nimport shallowEqual from 'shallowequal';\n\nimport CacheKeyResolver from './cache-key-resolver';\nimport { Omit } from './types';\n\nexport interface MemoizeOptions {\n    maxSize?: number;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\nexport default function memoize<T extends (...args: any[]) => any>(\n    fn: T,\n    options?: MemoizeOptions\n) {\n    const { maxSize, isEqual } = { maxSize: 0, isEqual: shallowEqual, ...options };\n    const cache = new Map();\n    const resolver = new CacheKeyResolver({\n        isEqual,\n        maxSize,\n        onExpire: key => cache.delete(key),\n    });\n    const memoized = lodashMemoize(fn, (...args) => resolver.getKey(...args));\n\n    memoized.cache = cache;\n\n    return memoized;\n}\n\nexport function memoizeOne<T extends (...args: any[]) => any>(\n    fn: T,\n    options?: Omit<MemoizeOptions, 'maxSize'>\n) {\n    return memoize(fn, { ...options, maxSize: 1 });\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport {\n    isRootCacheKeyMap,\n    isTerminalCacheKeyMap,\n    ChildCacheKeyMap,\n    IntermediateCacheKeyMap,\n    RootCacheKeyMap,\n    TerminalCacheKeyMap\n} from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            isEqual: shallowEqual,\n            maxSize: 0,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return map.hasOwnProperty('cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return map.hasOwnProperty('parentMap');\n}\n","\n/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { auditTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { buffer } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(subscribeToResult(this, closingNotifier));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerAction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, maxBufferSize: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: SchedulerLike = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ninterface DispatchCreateArg<T> {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number;\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface DispatchCloseArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: DispatchCreateArg<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule<DispatchCreateArg<T>>(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: SchedulerAction<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\nfunction dispatchBufferCreation<T>(this: SchedulerAction<DispatchCreateArg<T>>, state: DispatchCreateArg<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <SchedulerAction<DispatchCreateArg<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchCloseArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction, SubscribableOrPromise } from '../types';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { bufferToggle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      this.destination.next(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null;\n      context.subscription = null;\n    }\n    this.contexts = null;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, O>): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, <any>context);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (<any> innerSubscription).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.png)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { bufferWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferWhen(() =>\n *   interval(1000 + Math.random() * 4000)\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends OuterSubscriber<T, any> {\n  private buffer: T[];\n  private subscribing: boolean = false;\n  private closingSubscription: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.buffer = null;\n    this.subscribing = false;\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next(buffer);\n    }\n\n    this.buffer = [];\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (err) {\n      return this.error(err);\n    }\n    closingSubscription = new Subscription();\n    this.closingSubscription = closingSubscription;\n    this.add(closingSubscription);\n    this.subscribing = true;\n    closingSubscription.add(subscribeToResult(this, closingNotifier));\n    this.subscribing = false;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * ![](catch.png)\n *\n * ## Examples\n * Continues with a different Observable when there's an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n * \t       throw 'four!';\n *       }\n *\t     return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V')),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retries the caught source Observable again in case of error, similar to retry() operator\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError, take } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n *   \t     throw 'four!';\n *       }\n * \t     return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throws a new error when the source Observable throws an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     }),\n *   )\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n *  @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | ObservedValueOf<O>> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      this.add(innerSubscriber);\n      const innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function combineAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineAll<T>(): OperatorFunction<any, T[]>;\nexport function combineAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * ![](combineAll.png)\n *\n * `combineAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest}</a> strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ---\n *\n * ## Examples\n *\n * ### Map two click events to a finite interval Observable, then apply `combineAll`\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, combineAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev =>\n *      interval(Math.random() * 2000).pipe(take(3))\n *   ),\n *   take(2)\n * );\n * const result = higherOrder.pipe(\n *   combineAll()\n * );\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function(...values: Array<any>)} An optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return {Observable<T>}\n * @name combineAll\n */\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link combineLatest}.\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import {  concat as concatStatic } from '../observable/concat';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link concat}.\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic(source, ...observables));\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(observable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMapTo, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer, OperatorFunction } from '../types';\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { count, takeUntil } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n * ```ts\n * import { range } from 'rxjs';\n * import { count } from 'rxjs/operators';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\n\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.png)\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { debounce } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounce(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n  private durationSubscription: Subscription = null;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<any>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = subscribeToResult(this, duration);\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = null;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively if the duration selector Observable\n      // emits synchronously\n      this.value = null;\n      this.hasValue = false;\n      super._next(value);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { debounceTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const { lastValue } = this;\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively when scheduled with things like\n      // VirtualScheduler/TestScheduler.\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated In future versions, empty notifiers will no longer re-emit the source value on the output observable. */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<never>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\n/* tslint:disable:max-line-length */\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n * Delay each click by a random amount of time, between 0 and 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { delayWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(event => interval(Math.random() * 5000)),\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    try {\n      const delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n\n    return subscription.outerValue;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      const destination = this.destination as Subscription;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.unsubscribe();\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n * Convert an Observable of Notifications to an actual Observable\n * ```ts\n * import { of, Notification } from 'rxjs';\n * import { dematerialize } from 'rxjs/operators';\n *\n * const notifA = new Notification('N', 'A');\n * const notifB = new Notification('N', 'B');\n * const notifE = new Notification('E', undefined,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * const materialized = of(notifA, notifB, notifE);\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1).pipe(\n *     distinct(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n * ```\n *\n * An example using a keySelector function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *   ).pipe(\n *     distinct((p: Person) => p.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector: (value: T) => K, private flushes: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends OuterSubscriber<T, T> {\n  private values = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector: (value: T) => K, flushes: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(subscribeToResult(this, flushes));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, T>): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next(value);\n    }\n  }\n\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n * An example comparing the name of persons\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name'),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3)),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n * Emit only the third click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { elementAt } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  if (index < 0) { throw new ArgumentOutOfRangeError(); }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    filter((v, i) => i === index),\n    take(1),\n    hasDefaultValue\n      ? defaultIfEmpty(defaultValue)\n      : throwIfEmpty(() => new ArgumentOutOfRangeError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A>(v1: A, scheduler: SchedulerLike): OperatorFunction<T, T | A>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B>(v1: A, v2: B, scheduler: SchedulerLike): OperatorFunction<T, T | A | B>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E | F>;\n\nexport function endWith<T, A>(v1: A): OperatorFunction<T, T | A>;\nexport function endWith<T, A, B>(v1: A, v2: B): OperatorFunction<T, T | A | B>;\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C): OperatorFunction<T, T | A | B | C>;\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D): OperatorFunction<T, T | A | B | C | D>;\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E): OperatorFunction<T, T | A | B | C | D | E>;\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F): OperatorFunction<T, T | A | B | C | D | E | F>;\nexport function endWith<T, Z = T>(...array: Z[]): OperatorFunction<T, T | Z>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, Z = T>(...array: Array<Z | SchedulerLike>): OperatorFunction<T, T | Z>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments after it finishes emitting\n * items emitted by the source Observable.\n *\n * ![](endWith.png)\n *\n * ## Example\n * ### After the source observable completes, appends an emission and then completes too.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { endWith } from 'rxjs/operators';\n *\n * of('hi', 'how are you?', 'sorry, I have to go now').pipe(\n *   endWith('goodbye!'),\n * )\n * .subscribe(word => console.log(word));\n * // result:\n * // 'hi'\n * // 'how are you?'\n * // 'sorry, I have to go now'\n * // 'goodbye!'\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit last.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items emitted by the source Observable\n *  and then emits the items in the specified Iterable.\n * @method endWith\n * @owner Observable\n */\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...array)) as Observable<T>;\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * ## Example\n * A simple example emitting true if all elements are less than 5, false otherwise\n * ```ts\n * import { of } from 'rxjs';\n * import { every } from 'rxjs/operators';\n *\n *  of(1, 2, 3, 4, 5, 6).pipe(\n *     every(x => x < 5),\n * )\n * .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, TeardownLogic } from '../types';\n\nexport function exhaust<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function exhaust<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaust, map, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(5))),\n * );\n * const result = higherOrder.pipe(exhaust());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): OperatorFunction<any, T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(subscribeToResult(this, value));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    this.remove(innerSub);\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaustMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(ev => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      exhaustMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: any) => resultSelector(a, b, i, ii)),\n      )),\n    );\n  }\n  return (source: Observable<T>) =>\n    source.lift(new ExhaustMapOperator(project));\n}\n\nclass ExhaustMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasSubscription = false;\n  private hasCompleted = false;\n  private index = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(result: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, result, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function expand<T>(project: (value: T, index: number) => ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n * Start emitting the powers of two on every click, at most 10 of them\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { expand, mapTo, delay, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   mapTo(1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10),\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler: SchedulerLike = undefined): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: ObservableInput<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next(value);\n      try {\n        const { project } = this;\n        const result = project(value, index);\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n          const destination = this.destination as Subscription;\n          destination.add(this.scheduler.schedule<DispatchArg<T, R>>(ExpandSubscriber.dispatch, 0, state));\n        }\n      } catch (e) {\n        destination.error(e);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    const destination = this.destination as Subscription;\n    destination.add(subscribeToResult<T, R>(this, result, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../types';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { findIndex } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function first<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a deprecated `resultSelector` function to produce the output\n * value from the input value, and a `defaultValue` to emit in case the source\n * completes before it is able to emit a valid value. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n * Emit only the first click that happens on the DOM\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    take(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * ## Examples\n * ### Ignores emitted values, reacts to observable's completion.\n * ```ts\n * import { of } from 'rxjs';\n * import { ignoreElements } from 'rxjs/operators';\n *\n * of('you', 'talking', 'to', 'me').pipe(\n *   ignoreElements(),\n * )\n * .subscribe(\n *   word => console.log(word),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'the end'\n * ```\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements(): OperatorFunction<any, never> {\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    // Do nothing\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits false if the input observable emits any values, or emits true if the\n * input observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an observable</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n * ```javascript\n * import { Subject } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Results in:\n * // a\n * // false\n * // b\n * // c\n * ```\n *\n * Emit `true` for an empty Observable\n * ```javascript\n * import { EMPTY } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return {OperatorFunction<T, boolean>} An Observable of a boolean value indicating whether observable was empty or not\n * @method isEmpty\n * @owner Observable\n */\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function last<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    takeLast(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n * Map every click to the string 'Hi'\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n * Convert a faulty Observable to an Observable of Notifications\n * ```ts\n * import { of } from 'rxjs';\n * import { materialize, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map(x => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n * Get the maximal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   max(),\n * )\n * .subscribe(x => console.log(x)); // -> 8\n * ```\n *\n * Use a comparer function to get the maximal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link merge}.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction, ObservedValueOf } from '../../internal/types';\nimport { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, O extends ObservableInput<any>>(innerObservable: O, concurrent?: number): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(innerObservable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n * For each click event, start an interval Observable ticking every 1 second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { mergeMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { mapTo, mergeScan } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(mapTo(1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed),\n * );\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const destination = this.destination;\n      let ish;\n      try {\n        const { accumulator } = this;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error(e);\n      }\n      this.active++;\n      this._innerSub(ish, value, index);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    const destination = this.destination as Subscription;\n    destination.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n * Get the minimal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   min(),\n * )\n * .subscribe(x => console.log(x)); // -> 2\n * ```\n *\n * Use a comparer function to get the minimal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * ```\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Observable } from '../Observable';\nimport { from } from '../observable/from';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T>(): OperatorFunction<T, T>;\nexport function onErrorResumeNext<T, T2>(v: ObservableInput<T2>): OperatorFunction<T, T | T2>;\nexport function onErrorResumeNext<T, T2, T3>(v: ObservableInput<T2>, v2: ObservableInput<T3>): OperatorFunction<T, T | T2 | T3>;\nexport function onErrorResumeNext<T, T2, T3, T4>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, T7>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>, v6: ObservableInput<T7>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any>>): OperatorFunction<T, T | R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n * Subscribe to the next Observable after map fails\n * ```ts\n * import { of } from 'rxjs';\n * import { onErrorResumeNext, map } from 'rxjs/operators';\n *\n * of(1, 2, 3, 0).pipe(\n *   map(x => {\n *       if (x === 0) { throw Error(); }\n *        return 10 / x;\n *   }),\n *   onErrorResumeNext(of(1, 2, 3)),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('that\\'s it!')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>>>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n  Array<ObservableInput<any>> |\n  ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any> = null;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<ObservableInput<any>>>nextSources[0];\n  }\n  source = nextSources.shift();\n\n  return from(source, null).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends OuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (!!next) {\n      const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n      const destination = this.destination as Subscription;\n      destination.add(innerSubscriber);\n      const innerSubscription = subscribeToResult(this, next, undefined, undefined, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    let pair: [T, T] | undefined;\n\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n\n    if (pair) {\n      this.destination.next(pair);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition click events into those on DIV elements and those elsewhere\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { partition } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const parts = clicks.pipe(partition(ev => ev.target.tagName === 'DIV'));\n * const clicksOnDivs = parts[0];\n * const clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n * @deprecated use `partition` static creation function instead\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4], K6 extends keyof T[K1][K2][K3][K4][K5]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n * Map every click to the tagName of the clicked target element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pluck } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp[props[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n * Make source$ hot by applying publish operator, then merge each inner observable into a single one\n * and subscribe.\n * ```ts\n * import { of, zip, interval, merge } from \"rxjs\";\n * import { map, publish, tap } from \"rxjs/operators\";\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9)).pipe(\n *   map(values => values[1])\n * );\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x))),\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n *\n *\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { publishLast, tap, take } from 'rxjs/operators';\n *\n * const connectable =\n *   interval(1000)\n *     .pipe(\n *       tap(x => console.log(\"side effect\", x)),\n *       take(3),\n *       publishLast());\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. A\", x),\n *   err => console.log(\"Sub. A Error\", err),\n *   () => console.log( \"Sub. A Complete\"));\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. B\", x),\n *   err => console.log(\"Sub. B Error\", err),\n *   () => console.log( \"Sub. B Complete\"));\n *\n * connectable.connect();\n *\n * // Results:\n * //    \"side effect 0\"\n * //    \"side effect 1\"\n * //    \"side effect 2\"\n * //    \"Sub. A 2\"\n * //    \"Sub. B 2\"\n * //    \"Sub. A Complete\"\n * //    \"Sub. B Complete\"\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return {ConnectableObservable} An observable sequence that contains the elements of a\n * sequence produced by multicasting the source sequence.\n * @method publishLast\n * @owner Observable\n */\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction, SchedulerLike, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, O extends ObservableInput<any>>(bufferSize?: number, windowTime?: number, selector?: (shared: Observable<T>) => O, scheduler?: SchedulerLike): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: SchedulerLike | OperatorFunction<T, R>,\n                                    scheduler?: SchedulerLike): UnaryFunction<Observable<T>, ConnectableObservable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n * @deprecated Deprecated in favor of static {@link race}.\n */\nexport function race<T>(...observables: (Observable<T> | Observable<T>[])[]): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0] as Observable<T>[];\n    }\n\n    return source.lift.call(raceStatic(source, ...(observables as Observable<T>[])));\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { empty } from '../observable/empty';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes, at most count times.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Similar to {@link retry}, this operator repeats the stream of items emitted by the source for non error cases.\n * Repeat can be useful for creating observables that are meant to have some repeated pattern or rhythm.\n *\n * Note: `repeat(0)` returns an empty observable and `repeat()` will repeat forever\n *\n * ## Example\n * Repeat a message stream\n * ```ts\n * import { of } from 'rxjs';\n * import { repeat, delay } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const example = source.pipe(repeat(3));\n * example.subscribe(x => console.log(x));\n *\n * // Results\n * // Repeat message\n * // Repeat message\n * // Repeat message\n * ```\n *\n * Repeat 3 values, 2 times\n * ```ts\n * import { interval } from 'rxjs';\n * import { repeat, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(take(3), repeat(2));\n * example.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that will resubscribe to the source stream when the source stream completes\n * , at most count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n * Repeat a message stream on click\n * ```ts\n * import { of, fromEvent } from 'rxjs';\n * import { repeatWhen } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * source.pipe(repeatWhen(() => documentClick$)\n * ).subscribe(data => console.log(data))\n * ```\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private notifications: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications.next();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    super._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    let retries;\n    try {\n      const { notifier } = this;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = subscribeToResult(this, retries);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n *\n * ## Example\n * ```ts\n * import { interval, of, throwError } from 'rxjs';\n * import { mergeMap, retry } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   mergeMap(val => {\n *     if(val > 5){\n *       return throwError('Error!');\n *     }\n *     return of(val);\n *   }),\n *   //retry 2 times on error\n *   retry(2)\n * );\n *\n * const subscribe = example.subscribe({\n *   next: val => console.log(val),\n *   error: val => console.log(`${val}: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // \"Error!: Retried 2 times then quit!\"\n * ```\n *\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private errors: Subject<any>;\n  private retries: Observable<any>;\n  private retriesSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        try {\n          const { notifier } = this;\n          retries = notifier(errors);\n        } catch (e) {\n          return super.error(e);\n        }\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors.next(err);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n * On every click, sample the most recent \"seconds\" timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { sample } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private value: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.value);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n * Every second, emit the most recent click at most once\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { sampleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: SchedulerAction<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * ## Example\n * figure out if the Konami code matches\n * ```ts\n * import { from, fromEvent } from 'rxjs';\n * import { sequenceEqual, bufferCount, mergeMap, map } from 'rxjs/operators';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(\n *     last11 => from(last11).pipe(sequenceEqual(codes)),\n *   ),\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparator?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n    super(destination);\n    (this.destination as Subscription).add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n    this.unsubscribe();\n  }\n\n  checkValues() {\n    const { _a, _b, comparator } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n\n  completeB() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.completeB();\n    this.unsubscribe();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { shareReplay, take } from 'rxjs/operators';\n *\n * const obs$ = interval(1000);\n * const shared$ = obs$.pipe(\n *   take(4),\n *   shareReplay(3)\n * );\n * shared$.subscribe(x => console.log('source A: ', x));\n * shared$.subscribe(y => console.log('source B: ', y));\n *\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Number.POSITIVE_INFINITY] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Number.POSITIVE_INFINITY] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return {Observable} An observable sequence that contains the elements of a sequence produced\n * by multicasting the source sequence within a selector function.\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let config: ShareReplayConfig;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    config = configOrBufferSize as ShareReplayConfig;\n  } else {\n    config = {\n      bufferSize: configOrBufferSize as number | undefined,\n      windowTime,\n      refCount: false,\n      scheduler\n    };\n  }\n  return (source: Observable<T>) => source.lift(shareReplayOperator(config));\n}\n\nfunction shareReplayOperator<T>({\n  bufferSize = Number.POSITIVE_INFINITY,\n  windowTime = Number.POSITIVE_INFINITY,\n  refCount: useRefCount,\n  scheduler\n}: ShareReplayConfig) {\n  let subject: ReplaySubject<T> | undefined;\n  let refCount = 0;\n  let subscription: Subscription | undefined;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(this: Subscriber<T>, source: Observable<T>) {\n    refCount++;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) { subject.next(value); },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subscription = undefined;\n          subject.complete();\n        },\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n    this.add(() => {\n      refCount--;\n      innerSub.unsubscribe();\n      if (subscription && !isComplete && useRefCount && refCount === 0) {\n        subscription.unsubscribe();\n        subscription = undefined;\n        subject = undefined;\n      }\n    });\n  };\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { Observer, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emitted.\n *\n * <span class=\"informal\">Like {@link first}, but emit with error notification if there is more than one value.</span>\n * ![](single.png)\n *\n * ## Example\n * emits 'error'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single());\n * numbers.subscribe(x => console.log('never get called'), e => console.log('error'));\n * // result\n * // 'error'\n * ```\n *\n * emits 'undefined'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single(x => x === 10));\n * numbers.subscribe(x => console.log(x));\n * // result\n * // 'undefined'\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * ![](skipLast.png)\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * ## Example\n * Skip the last 2 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { skipLast } from 'rxjs/operators';\n *\n * const many = range(1, 5);\n * const skipLastTwo = many.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic, ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values ​​until the passed in observable emits the first value.\n * This can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally the `skipUntil` operator subscribes to the passed in observable (in the following called *notifier*) in order to recognize the emission\n * of its first value. When this happens, the operator unsubscribes from the *notifier* and starts emitting the values of the *source*\n * observable. It will never let the *source* observable emit any values if the *notifier* completes or throws an error without emitting\n * a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values ​​of the interval observable are skipped until the user clicks anywhere within the page.\n *\n * ```ts\n * import { interval, fromEvent } from 'rxjs';\n * import { skipUntil } from 'rxjs/operators';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * const subscribe = emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(destination: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private innerSubscription: Subscription;\n\n  constructor(destination: Subscriber<R>, notifier: ObservableInput<any>) {\n    super(destination);\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    const innerSubscription = subscribeToResult(this, notifier, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      this.add(innerSubscription);\n      this.innerSubscription = innerSubscription;\n    }\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.hasValue = true;\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n\n  notifyComplete() {\n    /* do nothing */\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D>(v1: D, scheduler: SchedulerLike): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E>(v1: D, v2: E, scheduler: SchedulerLike): OperatorFunction<T, T | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\n\nexport function startWith<T, D>(v1: D): OperatorFunction<T, T | D>;\nexport function startWith<T, D, E>(v1: D, v2: E): OperatorFunction<T, T | D | E>;\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F): OperatorFunction<T, T | D | E | F>;\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G): OperatorFunction<T, T | D | E | F | G>;\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H): OperatorFunction<T, T | D | E | F | G | H>;\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I): OperatorFunction<T, T | D | E | F | G | H | I>;\nexport function startWith<T, D = T>(...array: D[]): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Start the chain of emissions with `\"first\"`, `\"second\"`\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * of(\"from source\")\n *   .pipe(startWith(\"first\", \"second\"))\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * //   \"first\"\n * //   \"second\"\n * //   \"from source\"\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\n  const scheduler = array[array.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    // deprecated path\n    array.pop();\n    return (source: Observable<T>) => concat(array as T[], source, scheduler);\n  } else {\n    return (source: Observable<T>) => concat(array as T[], source);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n * Given the following code:\n * ```javascript\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3, 4);\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n * This will result in the output of `1 2 3 4 5 6 7 8 9`.\n *\n * But if we instead us the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emited by Observable `a`:\n * ```javascript\n * import { of, merge, asyncScheduler } from 'rxjs';\n * import { subscribeOn } from 'rxjs/operators';\n *\n * const a = of(1, 2, 3, 4).pipe(subscribeOn(asyncScheduler));\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * The output will instead be `5 6 7 8 9 1 2 3 4`.\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param {SchedulerLike} scheduler - The {@link SchedulerLike} to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified {@link SchedulerLike}.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable<T>(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  /** @nocollapse */\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: SchedulerLike = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  /** @nocollapse */\n  static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: SchedulerLike = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule<DispatchArg<any>>(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import {OperatorFunction, ObservableInput} from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function switchAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one.\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchAll, map, tap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map((ev) => interval(1000)));\n *\n * source.pipe(\n *   switchAll()\n * ).subscribe(x => console.log(x));\n *\n /* Output\n *  click\n *  1\n *  2\n *  3\n *  4\n *  ...\n *  click\n *  1\n *  2\n *  3\n *  ...\n *  click\n *  ...\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n */\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return switchMap(identity);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<R>(observable: ObservableInput<R>): OperatorFunction<any, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through the deprecated `resultSelector`)\n * every time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { takeUntil } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends OuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { takeWhile } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(\n    predicate: (value: T, index: number) => boolean,\n    inclusive = false): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) =>\n             source.lift(new TakeWhileOperator(predicate, inclusive));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {}\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n        new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(\n      destination: Subscriber<T>,\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * #### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * #### Double Click\n *\n * The following example only emits clicks which happen within a subsequent\n * delay of 400ms of the previous click. This for example can emulate a double\n * click. It makes use of the `trailing` parameter of the throttle configuration.\n *\n * ```ts\n * import { fromEvent, asyncScheduler } from 'rxjs';\n * import { throttleTime, withLatestFrom } from 'rxjs/operators';\n *\n * // defaultThottleConfig = { leading: true, trailing: false }\n * const throttleConfig = {\n *   leading: false,\n *   trailing: true\n * }\n *\n * const click = fromEvent(document, 'click');\n * const doubleClick = click.pipe(\n *   throttleTime(400, asyncScheduler, throttleConfig)\n * );\n *\n * doubleClick.subscribe((throttleValue: Event) => {\n *   console.log(`Double-clicked! Timestamp: ${throttleValue.timeStamp}`);\n * });\n * ```\n *\n * If you enable the `leading` parameter in this example, the output would be the primary click and\n * the double click, but restricts additional clicks within 400ms.\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\n\n/**\n *\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeinterval.png)\n *\n * ## Examples\n * Emit inteval between current value with the last value\n *\n * ```ts\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeInterval())\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // {value: 0, interval: 1000}\n * // {value: 1, interval: 1000}\n * // {value: 2, interval: 1000}\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return {Observable<{ interval: number, value: T }>} Observable that emit infomation about value and interval\n * @method timeInterval\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => defer(() => {\n    return source.pipe(\n      // TODO(benlesh): correct these typings.\n      scan(\n        ({ current }, value) => ({ value, current: scheduler.now(), last: current }),\n        { current: scheduler.now(), value: undefined,  last: undefined }\n      ) as any,\n      map<any, TimeInterval<T>>(({ current, last, value }) => new TimeInterval(value, current - last)),\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\n/**\n * @deprecated exposed API, use as interface only.\n */\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {}\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","\nimport { async } from '../scheduler/async';\nimport { OperatorFunction, SchedulerLike, Timestamp as TimestampInterface } from '../types';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default it uses the *async* scheduler which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the documents click event.\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { timestamp } from 'rxjs/operators';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type {value: MouseEvent, timestamp: number}\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: SchedulerLike = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> implements TimestampInterface<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n *  ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { toArray, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n *\n * ```\n* @return An array from an observable sequence.\n* @method toArray\n* @owner Observable\n*/\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, [] as T[]);\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { Operator } from '../Operator';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { window, mergeAll, map, take } from 'rxjs/operators';\n *\n *  const clicks = fromEvent(document, 'click');\n *  const sec = interval(1000);\n *  const result = clicks.pipe(\n *      window(sec),\n *      map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *      mergeAll(),              // flatten the Observable-of-Observables\n *  );\n *  result.subscribe(x => console.log(x));\n * ```\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.window = null;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n * Ignore every 3rd click event, starting from the first one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, map, mergeAll, skip } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerLike, SchedulerAction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with maxWindowCount instead of take\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // each window has still at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: SchedulerLike = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = arguments[2];\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = arguments[1];\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: SchedulerAction<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule<CreationState<T>>(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule<TimeSpanOnlyState<T>>(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: SchedulerAction<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: SchedulerAction<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n * Every other second, emit the click events from the next 500ms\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { windowToggle, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings as any));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n      let closingNotifier;\n      try {\n        const { closingSelector } = this;\n        closingNotifier = closingSelector(innerValue);\n      } catch (e) {\n        return this.error(e);\n      }\n\n      const window = new Subject<T>();\n      const subscription = new Subscription();\n      const context = { window, subscription };\n      this.contexts.push(context);\n      const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n      if (innerSubscription.closed) {\n        this.closeWindow(this.contexts.length - 1);\n      } else {\n        (<any>innerSubscription).context = context;\n        subscription.add(innerSubscription);\n      }\n\n      this.destination.next(window);\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n * Emit only the first two clicks events in every window of [1-5] random seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { windowWhen, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))),     // each window has at most 2 emissions\n *   mergeAll()                         // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window: Subject<T>;\n  private closingNotification: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, any>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, R>(source2: O2, project: (v1: T, v2: ObservedValueOf<O2>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v2: O2, v3: O3, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>>(source2: O2): OperatorFunction<T, [T, ObservedValueOf<O2>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v2: O2, v3: O3): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n * On every click event, emit an array with the latest timer event plus the click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { withLatestFrom } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, <any>observable, i));\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link zip}.\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}","import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","import createScriptLoader from './create-script-loader';\nimport ScriptLoader from './script-loader';\n\nlet instance: ScriptLoader;\n\nexport default function getScriptLoader(): ScriptLoader {\n    if (!instance) {\n        instance = createScriptLoader();\n    }\n\n    return instance;\n}\n","import createStylesheetLoader from './create-stylesheet-loader';\nimport StylesheetLoader from './stylesheet-loader';\n\nlet instance: StylesheetLoader;\n\nexport default function getStylesheetLoader(): StylesheetLoader {\n    if (!instance) {\n        instance = createStylesheetLoader();\n    }\n\n    return instance;\n}\n","import FormBuilder from './form-builder';\nimport FormPoster from './form-poster';\nimport FormPosterOptions from './form-poster-options';\n\nexport default function createFormPoster(options?: FormPosterOptions): FormPoster {\n    const formBuilder = new FormBuilder();\n    const formPoster = new FormPoster(formBuilder, options);\n\n    return formPoster;\n}\n","export default class FormBuilder {\n    build(url: string, data: { [key: string]: any }, target?: string): HTMLFormElement {\n        const form = document.createElement('form');\n\n        form.style.display = 'none';\n\n        form.setAttribute('action', url);\n        form.setAttribute('method', 'POST');\n        form.setAttribute('target', target || '_top');\n\n        Object.keys(data)\n            .forEach(key => {\n                const value = data[key];\n\n                form.appendChild(this._createInput(value, key));\n            });\n\n        return form;\n    }\n\n    private _createInput(value: any, key: string): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.setAttribute('name', key);\n        input.setAttribute('type', 'hidden');\n        input.setAttribute('value', value);\n\n        return input;\n    }\n}\n","export function isAbsoluteUrl(url: string): boolean {\n    return /^https?:\\/\\//.test(url);\n}\n\nexport function joinPaths(pathA: string, pathB: string): string {\n    return `${removeTrailingSlash(pathA)}/${removeLeadingSlash(pathB)}`;\n}\n\nfunction removeTrailingSlash(path: string): string {\n    return path.replace(/\\/$/, '');\n}\n\nfunction removeLeadingSlash(path: string): string {\n    return path.replace(/^\\//, '');\n}\n","import Client from './client/client';\n\n/**\n * @param {Object} [config]\n * @returns {Client}\n */\nexport function createClient(config) {\n    return Client.create(config);\n}\n","import objectAssign from 'object-assign';\nimport OffsitePaymentInitializer from '../payment/offsite-payment-initializer';\nimport PaymentSubmitter from '../payment/payment-submitter';\nimport ClientTokenGenerator from '../payment/client-token-generator';\nimport StoreRequestSender from '../store/store-request-sender';\nimport DEFAULT_CONFIG from './default-config';\n\nexport default class Client {\n    /**\n     * @param {Object} config\n     * @returns {Client}\n     */\n    static create(config) {\n        const clientConfig = objectAssign({}, DEFAULT_CONFIG, config);\n        const offsitePaymentInitializer = OffsitePaymentInitializer.create(clientConfig);\n        const paymentSubmitter = PaymentSubmitter.create(clientConfig);\n        const clientTokenGenerator = ClientTokenGenerator.create(clientConfig);\n        const storeRequestSender = StoreRequestSender.create(clientConfig);\n\n        return new Client(\n            clientConfig,\n            paymentSubmitter,\n            offsitePaymentInitializer,\n            clientTokenGenerator,\n            storeRequestSender\n        );\n    }\n\n    /**\n     * @param {Object} config\n     * @param {PaymentSubmitter} paymentSubmitter\n     * @param {OffsitePaymentInitializer} offsitePaymentInitializer\n     * @param {ClientTokenGenerator} clientTokenGenerator\n     * @param {StoreRequestSender} storeRequestSender\n     */\n    constructor(\n        config,\n        paymentSubmitter,\n        offsitePaymentInitializer,\n        clientTokenGenerator,\n        storeRequestSender\n    ) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n\n        /**\n         * @private\n         * @type {PaymentSubmitter}\n         */\n        this.paymentSubmitter = paymentSubmitter;\n\n        /**\n         * @private\n         * @type {OffsitePaymentInitializer}\n         */\n        this.offsitePaymentInitializer = offsitePaymentInitializer;\n\n        /**\n         * @private\n         * @type {ClientTokenGenerator}\n         */\n        this.clientTokenGenerator = clientTokenGenerator;\n\n        /**\n         * @private\n         * @type {StoreRequestSender}\n         */\n        this.storeRequestSender = storeRequestSender;\n    }\n\n    /**\n     * @param {string} host\n     * @returns {void}\n     */\n    setHost(host) {\n        this.config.host = host;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        this.offsitePaymentInitializer.initializeOffsitePayment(data, callback, target);\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    submitPayment(data, callback) {\n        this.paymentSubmitter.submitPayment(data, callback);\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    generateClientToken(data, callback) {\n        this.clientTokenGenerator.generateClientToken(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.currencyCode\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        this.storeRequestSender.loadInstruments(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.currencyCode\n     * @param {AddressData} data.shippingAddress\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        this.storeRequestSender.loadInstrumentsWithAddress(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.instrumentId\n     * @param {string} data.currencyCode\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        this.storeRequestSender.deleteShopperInstrument(data, callback);\n    }\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { HOSTED } from './payment-types';\nimport PayloadMapper from './offsite-payment-mappers/payload-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class OffsitePaymentInitializer {\n    /**\n     * @param {Object} config\n     * @returns {OffsitePaymentInitializer}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const formPoster = createFormPoster();\n        const payloadMapper = PayloadMapper.create();\n\n        return new OffsitePaymentInitializer(urlHelper, formPoster, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {FormPoster} formPoster\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, formPoster, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {FormPoster}\n         */\n        this.formPoster = formPoster;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     * @throws {Error}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== HOSTED) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getOffsitePaymentUrl();\n\n        this.formPoster.postForm(url, payload, callback, target);\n    }\n}\n","import objectAssign from 'object-assign';\nimport { omitNil, toString } from '../../common/utils';\nimport AddressMapper from './address-mapper';\nimport CustomerMapper from './customer-mapper';\nimport MetaMapper from './meta-mapper';\nimport PaymentMethodIdMapper from '../payment-method-mappers/payment-method-id-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class PayloadMapper {\n    /**\n     * @returns {PayloadMapper}\n     */\n    static create() {\n        const addressMapper = AddressMapper.create();\n        const customerMapper = CustomerMapper.create();\n        const metaMapper = MetaMapper.create();\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new PayloadMapper(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper);\n    }\n\n    /**\n     * @param {AddressMapper} addressMapper\n     * @param {CustomerMapper} customerMapper\n     * @param {MetaMapper} metaMapper\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @param {StoreMapper} storeMapper\n     * @returns {Object}\n     */\n    constructor(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper) {\n        /**\n         * @private\n         * @type {AddressMapper}\n         */\n        this.addressMapper = addressMapper;\n\n        /**\n         * @private\n         * @type {CustomerMapper}\n         */\n        this.customerMapper = customerMapper;\n\n        /**\n         * @private\n         * @type {MetaMapper}\n         */\n        this.metaMapper = metaMapper;\n\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayload(data) {\n        const { authToken, order = {}, payment = {}, paymentMethod = {} } = data;\n\n        const payload = objectAssign(\n            {\n                amount: order.grandTotal ? order.grandTotal.integerAmount : null,\n                bc_auth_token: authToken,\n                currency: order.currency,\n                gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n                notify_url: order.callbackUrl,\n                order_id: order.orderId ? toString(order.orderId) : null,\n                page_title: document.title ? document.title : null,\n                payment_method_id: paymentMethod.id,\n                reference_id: order.orderId ? toString(order.orderId) : null,\n                return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            },\n            this.addressMapper.mapToBillingAddress(data),\n            this.customerMapper.mapToCustomer(data),\n            this.metaMapper.mapToMeta(data),\n            this.addressMapper.mapToShippingAddress(data),\n            this.storeMapper.mapToStore(data)\n        );\n\n        const { formattedPayload = {} } = payment;\n\n        objectAssign(payload, formattedPayload);\n\n        return omitNil(payload);\n    }\n}\n","/**\n * @param {array|string} items\n * @param {array|string} item\n * @returns {boolean}\n */\nexport default function includes(items, item) {\n    if (!Array.isArray(items) && typeof items !== 'string') {\n        return false;\n    }\n\n    return items.indexOf(item) !== -1;\n}\n","import isEmptyStringOrNil from './is-emptystring-or-nil';\nimport omitProperty from './omit-property';\n\n/**\n * @param {Object} object\n * @returns {Object}\n */\nexport default function omitEmptyStringAndNil(object) {\n    return omitProperty(object, isEmptyStringOrNil);\n}\n","import isEmptyString from './is-empty-string';\nimport isNil from './is-nil';\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isEmptyStringOrNil(value) {\n    return isEmptyString(value) || isNil(value);\n}\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isEmptyString(value) {\n    return value === '';\n}\n","import isNil from './is-nil';\nimport omitProperty from './omit-property';\n\n/**\n * @param {Object} object\n * @returns {Object}\n */\nexport default function omitNil(object) {\n    return omitProperty(object, isNil);\n}\n","/**\n * @param {*} value\n * @returns {number}\n */\nexport default function toNumber(value) {\n    return parseFloat(value) || 0;\n}\n","/**\n * @param {string} string\n * @returns {string}\n */\nexport default function toSnakeCase(string) {\n    if (typeof string !== 'string') {\n        return string;\n    }\n\n    return string.replace(/([a-z\\d])([A-Z]+)/g, '$1_$2')\n        .replace(/[-\\s]+/g, '_')\n        .toLowerCase();\n}\n","/**\n * @param {*} value\n * @returns {string}\n */\nexport default function toString(value) {\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    if (typeof value === 'number' && !isNaN(value)) {\n        return value.toString();\n    }\n\n    return '';\n}\n","import { omitNil, toSnakeCase } from '../../common/utils';\n\nexport default class AddressMapper {\n    /**\n     * @returns {AddressMapper}\n     */\n    static create() {\n        return new AddressMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        return this.mapToAddress(data, 'billingAddress');\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n        const formattedAddressKey = toSnakeCase(addressKey);\n\n        return omitNil({\n            [`${formattedAddressKey}_city`]: address.city,\n            [`${formattedAddressKey}_company`]: address.company,\n            [`${formattedAddressKey}_country_code`]: address.countryCode,\n            [`${formattedAddressKey}_country`]: address.country,\n            [`${formattedAddressKey}_first_name`]: address.firstName,\n            [`${formattedAddressKey}_last_name`]: address.lastName,\n            [`${formattedAddressKey}_phone`]: address.phone,\n            [`${formattedAddressKey}_state_code`]: address.provinceCode,\n            [`${formattedAddressKey}_state`]: address.province,\n            [`${formattedAddressKey}_street_1`]: address.addressLine1,\n            [`${formattedAddressKey}_street_2`]: address.addressLine2,\n            [`${formattedAddressKey}_zip`]: address.postCode,\n        });\n    }\n}\n","import { omitNil } from '../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {}, store = {} } = data;\n\n        return omitNil({\n            customer_browser_info: navigator.userAgent,\n            customer_email: customer.email,\n            customer_first_name: customer.firstName,\n            customer_geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            customer_id: customer.customerId,\n            customer_last_name: customer.lastName,\n            customer_locale: store.storeLanguage,\n            customer_name: customer.name,\n            customer_phone: customer.phoneNumber,\n            customer_reference: customer.email,\n        });\n    }\n}\n","import { omitNil } from '../../common/utils';\n\nexport default class MetaMapper {\n    /**\n     * @returns {MetaMapper}\n     */\n    static create() {\n        return new MetaMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToMeta(data) {\n        const { source } = data;\n\n        return omitNil({\n            meta_referrer: document.referrer,\n            meta_source: source,\n            meta_user_agent: navigator.userAgent,\n        });\n    }\n}\n","export const CREDIT_CARD = 'credit-card';\nexport const MULTI_OPTION = 'multi-option';\n","export const BRAINTREE = 'braintree';\nexport const BRAINTREE_PAYPAL = 'braintreepaypal';\nexport const BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit';\nexport const BRAINTREE_VISACHECKOUT = 'braintreevisacheckout';\nexport const BRAINTREE_GOOGLEPAY = 'googlepaybraintree';\n","import { omitNil, toString } from '../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            store_hash: store.storeHash,\n            store_id: store.storeId ? toString(store.storeId) : null,\n        });\n    }\n}\n","import { API } from './payment-types';\nimport PayloadMapper from './v1/payment-mappers/payload-mapper';\nimport RequestSender from '../common/http-request/request-sender';\nimport UrlHelper from './url-helper';\n\nexport default class PaymentSubmitter {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const payloadMapper = PayloadMapper.create();\n\n        return new PaymentSubmitter(urlHelper, requestSender, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     * @throws {Error}\n     */\n    submitPayment(data, callback) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== API) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getPaymentUrl();\n        const options = {\n            headers: this.payloadMapper.mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport CustomerMapper from './customer-mapper';\nimport OrderMapper from './order-mapper';\nimport PaymentMapper from './payment-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class PayloadMapper {\n    /**\n     * @returns {PayloadMapper}\n     */\n    static create() {\n        const customerMapper = CustomerMapper.create();\n        const orderMapper = OrderMapper.create();\n        const paymentMapper = PaymentMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new PayloadMapper(customerMapper, orderMapper, paymentMapper, storeMapper);\n    }\n\n    /**\n     * @param {CustomerMapper} customerMapper\n     * @param {OrderMapper} orderMapper\n     * @param {PaymentMapper} paymentMapper\n     * @param {StoreMapper} storeMapper\n     */\n    constructor(customerMapper, orderMapper, paymentMapper, storeMapper) {\n        /**\n         * @private\n         * @type {CustomerMapper}\n         */\n        this.customerMapper = customerMapper;\n\n        /**\n         * @private\n         * @type {OrderMapper}\n         */\n        this.orderMapper = orderMapper;\n\n        /**\n         * @private\n         * @type {PaymentMapper}\n         */\n        this.paymentMapper = paymentMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayload(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            customer: this.customerMapper.mapToCustomer(data),\n            notify_url: order.callbackUrl,\n            order: this.orderMapper.mapToOrder(data),\n            payment: this.paymentMapper.mapToPayment(data),\n            store: this.storeMapper.mapToStore(data),\n        });\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToHeaders(data) {\n        const { authToken } = data;\n\n        return omitNil({\n            Authorization: authToken,\n        });\n    }\n}\n","import { omitNil, toString } from '../../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {} } = data;\n\n        return omitNil({\n            customer_group: customer.customerGroupName ? { name: customer.customerGroupName } : null,\n            geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            id: customer.customerId ? toString(customer.customerId) : null,\n            session_token: quoteMeta.request ? quoteMeta.request.sessionHash : null,\n        });\n    }\n}\n","import { omitEmptyStringAndNil, omitNil, toString } from '../../../common/utils';\n\nexport default class OrderMapper {\n    /**\n     * @returns {OrderMapper}\n     */\n    static create() {\n        return new OrderMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrder(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            billing_address: this.mapToBillingAddress(data),\n            coupons: this.mapToCoupons(data),\n            currency: order.currency,\n            id: order.orderId ? toString(order.orderId) : null,\n            items: this.mapToItems(data),\n            shipping: this.mapToShipping(data),\n            shipping_address: this.mapToShippingAddress(data),\n            token: order.token,\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        const { customer = {} } = data;\n        const address = this.mapToAddress(data, 'billingAddress');\n\n        if (customer.email) {\n            address.email = customer.email;\n        }\n\n        return address;\n    }\n\n    /**\n     * @private\n     * @param  {PaymentRequestData} data\n     * @return {Shipping[]}\n     */\n    mapToShipping(data) {\n        const { description, transitTime } = data.shippingOption || {};\n\n        if (description) {\n            return [omitEmptyStringAndNil({\n                method: description,\n                transit_time: transitTime,\n            })];\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Coupon[]}\n     */\n    mapToCoupons({ order = {} }) {\n        if (order.coupon && order.coupon.coupons) {\n            return order.coupon.coupons.map(({ code }) => ({ code }));\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n\n        return omitEmptyStringAndNil({\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            country: address.country,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            state_code: address.provinceCode,\n            state: address.province,\n            street_1: address.addressLine1,\n            street_2: address.addressLine2,\n            zip: address.postCode,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map(itemData => omitNil({\n            code: itemData.id,\n            variant_id: itemData.variantId,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            grand_total: order.grandTotal ? order.grandTotal.integerAmount : null,\n            handling: order.handling ? order.handling.integerAmount : null,\n            shipping: order.shipping ? order.shipping.integerAmount : null,\n            subtotal: order.subtotal ? order.subtotal.integerAmount : null,\n            tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n        });\n    }\n}\n","import objectAssign from 'object-assign';\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\nimport { omitNil, toNumber } from '../../../common/utils';\n\nexport default class PaymentMapper {\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {PaymentMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new PaymentMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayment(data) {\n        const {\n            order = {},\n            orderMeta = {},\n            payment = {},\n            paymentMethod = {},\n        } = data;\n\n        const payload = {\n            device_info: payment.deviceSessionId ? payment.deviceSessionId : null,\n            device: orderMeta.deviceFingerprint ? { fingerprint_id: orderMeta.deviceFingerprint } : null,\n            gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n            notify_url: order.callbackUrl,\n            return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            vault_payment_instrument: !payment.instrumentId ? payment.shouldSaveInstrument : null,\n        };\n\n        const method = paymentMethod.method;\n\n        if (method) {\n            objectAssign(payload, { method });\n        }\n\n        const nonce = payment.nonce || paymentMethod.nonce;\n\n        if (payment.formattedPayload) {\n            objectAssign(payload, payment.formattedPayload);\n        } else if (payment.instrumentId) {\n            objectAssign(payload, {\n                bigpay_token: this.mapToBigPayToken(data),\n            });\n        } else if (nonce) {\n            objectAssign(payload, {\n                credit_card_token: {\n                    token: nonce,\n                },\n            });\n        } else if (payment.cryptogramId) {\n            objectAssign(payload, {\n                credit_card_cryptogram: this.mapToCryptogram(data),\n            });\n        } else {\n            objectAssign(payload, {\n                credit_card: this.mapToCreditCard(data),\n            });\n        }\n\n        return omitNil(payload);\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCreditCard(data) {\n        const { payment = {} } = data;\n\n        return omitNil({\n            account_name: payment.ccName,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            verification_value: payment.ccCvv,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            customer_code: payment.ccCustomerCode,\n            three_d_secure: payment.threeDSecure,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToBigPayToken({ payment }) {\n        return omitNil({\n            credit_card_number_confirmation: payment.ccNumber,\n            token: payment.instrumentId,\n            verification_value: payment.ccCvv,\n            three_d_secure: payment.threeDSecure,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToCryptogram({ payment }) {\n        return omitNil({\n            payment_cryptogram: payment.cryptogramId,\n            eci: payment.eci,\n            xid: payment.transactionId,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            account_mask: payment.accountMask,\n        });\n    }\n}\n","import { omitNil, toString } from '../../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            hash: store.storeHash,\n            id: store.storeId ? toString(store.storeId) : null,\n            name: store.storeName,\n        });\n    }\n}\n","import { APPLICATION_JSON } from './content-types';\nimport { GET } from './method-types';\n\nconst DEFAULT_OPTIONS = {\n    headers: {\n        Accept: APPLICATION_JSON,\n        'Content-Type': APPLICATION_JSON,\n    },\n    method: GET,\n};\n\nexport default DEFAULT_OPTIONS;\n","import objectAssign from 'object-assign';\nimport { APPLICATION_JSON } from './content-types';\nimport { includes } from '../utils';\n\nexport default class PayloadTransformer {\n    /**\n     * @returns {PayloadTransformer}\n     */\n    static create() {\n        return new PayloadTransformer();\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} [contentType = APPLICATION_JSON]\n     * @returns {Object}\n     */\n    toRequest(data, contentType = APPLICATION_JSON) {\n        if (data && includes(contentType, APPLICATION_JSON)) {\n            return JSON.stringify(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * @param {XMLHttpRequest} xhr\n     * @returns {Object}\n     * @property {Object} data\n     * @property {number} status\n     * @property {string} statusText\n     */\n    fromResponse(xhr) {\n        const headers = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n        const contentType = xhr.getResponseHeader('Content-Type');\n        const { status, statusText } = xhr;\n\n        let data = 'response' in xhr ? xhr.response : xhr.responseText;\n\n        if (data && includes(contentType, APPLICATION_JSON)) {\n            data = JSON.parse(data);\n        }\n\n        return { data, headers, status, statusText };\n    }\n\n    /**\n     * @private\n     * @param {string} rawHeaders\n     * @returns {Object}\n     */\n    parseResponseHeaders(rawHeaders) {\n        const lines = rawHeaders ? rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ').split(/\\r?\\n/) : [];\n\n        return lines.reduce((headers, line) => {\n            const parts = line.split(':');\n            const key = (parts.shift() || '').trim();\n\n            if (!key) {\n                return headers;\n            }\n\n            return objectAssign({}, headers, {\n                [key.toLowerCase()]: parts.join(':').trim(),\n            });\n        }, {});\n    }\n}\n","export default class RequestFactory {\n    /**\n     * @returns {RequestFactory}\n     */\n    static create() {\n        return new RequestFactory();\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} options\n     * @param {Function} [callback]\n     * @returns {XMLHttpRequest}\n     */\n    createRequest(url, options, callback) {\n        const xhr = new XMLHttpRequest();\n\n        xhr.onerror = () => {\n            if (callback) {\n                callback(new Error(xhr.statusText));\n            }\n        };\n\n        xhr.onload = () => {\n            if (callback) {\n                callback();\n            }\n        };\n\n        xhr.open(options.method, url, true);\n        this.setOptions(xhr, options);\n\n        return xhr;\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @param {Object} headers\n     * @returns {void}\n     */\n    setHeaders(xhr, headers) {\n        const headerKeys = Object.keys(headers);\n\n        headerKeys.forEach((key) => {\n            const value = headers[key];\n\n            xhr.setRequestHeader(key, value);\n        });\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @param {Object} options\n     * @returns {void}\n     */\n    setOptions(xhr, options) {\n        xhr.withCredentials = options.withCredentials;\n\n        if (options.headers) {\n            this.setHeaders(xhr, options.headers);\n        }\n    }\n}\n","import RequestSender from '../common/http-request/request-sender';\nimport ClientTokenMapper from './v2/payment-mappers/client-token-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class ClientTokenGenerator {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const clientTokenMapper = ClientTokenMapper.create();\n\n        return new ClientTokenGenerator(urlHelper, requestSender, clientTokenMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {ClientTokenMapper} clientTokenMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, clientTokenMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {ClientTokenMapper}\n         */\n        this.clientTokenMapper = clientTokenMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    generateClientToken(data, callback) {\n        const url = this.urlHelper.getGenerateClientTokenUrl();\n        const payload = this.clientTokenMapper.mapToClientToken(data);\n\n        this.requestSender.postRequest(url, payload, {}, callback);\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport CartMapper from './cart-mapper';\nimport GatewayMapper from './gateway-mapper';\nimport QuoteMapper from './quote-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class ClientTokenMapper {\n    /**\n     * @returns {ClientTokenMapper}\n     */\n    static create() {\n        const cartMapper = CartMapper.create();\n        const gatewayMapper = GatewayMapper.create();\n        const quoteMapper = QuoteMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new ClientTokenMapper(cartMapper, gatewayMapper, quoteMapper, storeMapper);\n    }\n\n    /**\n     * @param {CartMapper} cartMapper\n     * @param {GatewayMapper} gatewayMapper\n     * @param {QuoteMapper} quoteMapper\n     * @param {StoreMapper} storeMapper\n     */\n    constructor(cartMapper, gatewayMapper, quoteMapper, storeMapper) {\n        /**\n         * @private\n         * @type {CartMapper}\n         */\n        this.cartMapper = cartMapper;\n\n        /**\n         * @private\n         * @type {GatewayMapper}\n         */\n        this.gatewayMapper = gatewayMapper;\n\n        /**\n         * @private\n         * @type {QuoteMapper}\n         */\n        this.quoteMapper = quoteMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToClientToken(data) {\n        return omitNil({\n            cart: this.cartMapper.mapToCart(data),\n            gateway: this.gatewayMapper.mapToGateway(data),\n            quote: this.quoteMapper.mapToQuote(data),\n            store: this.storeMapper.mapToStore(data),\n        });\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\nexport default class CartMapper {\n    /**\n     * @returns {CartMapper}\n     */\n    static create() {\n        return new CartMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCart(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            currency_code: cart.currency,\n            items: this.mapToItems(data),\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object[]}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map(itemData => omitNil({\n            discount_amount: itemData.integerDiscount,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n            tax_amount: itemData.integerTax,\n            amount: itemData.integerAmountAfterDiscount,\n            type: this.mapToType(itemData),\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            discount_total: cart.discount ? cart.discount.integerAmount : null,\n            grand_total: cart.grandTotal ? cart.grandTotal.integerAmount : null,\n            shipping_total: cart.shipping ? cart.shipping.integerAmount : null,\n            subtotal: cart.subtotal ? cart.subtotal.integerAmount : null,\n            surcharge_total: cart.handling ? cart.handling.integerAmount : null,\n            tax_total: cart.taxTotal ? cart.taxTotal.integerAmount : null,\n        });\n    }\n\n    /**\n     * @private\n     * @param {Object} itemData\n     * @returns {Object}\n     */\n    mapToType(itemData) {\n        const types = {\n            ItemPhysicalEntity: 'physical',\n            ItemDigitalEntity: 'digital',\n            ItemGiftCertificateEntity: 'gift_card',\n        };\n\n        return types[itemData.type];\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\n\nexport default class GatewayMapper {\n    /**\n     * @returns {GatewayMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new GatewayMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToGateway(data) {\n        const { paymentMethod = {} } = data;\n\n        return omitNil({\n            name: this.paymentMethodIdMapper.mapToId(paymentMethod),\n        });\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\nexport default class QuoteMapper {\n    /**\n     * @returns {QuoteMapper}\n     */\n    static create() {\n        return new QuoteMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToQuote(data) {\n        return omitNil({\n            billing_address: this.mapToAddress(data, 'billingAddress'),\n            shipping_address: this.mapToAddress(data, 'shippingAddress'),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const { customer = {} } = data;\n        const address = data[addressKey] || {};\n\n        return omitNil({\n            address_line_1: address.addressLine1,\n            address_line_2: address.addressLine2,\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            email: customer.email,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            postal_code: address.postCode,\n            state: address.province,\n        });\n    }\n}\n","import { omitNil, toNumber } from '../../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        return omitNil({\n            locale: this.mapToLocale(data),\n            store_identity: this.mapToIdentity(data),\n            urls: this.mapToUrls(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToLocale(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            country_code: store.countryCode,\n            currency_code: store.currencyCode,\n            language_code: store.storeLanguage,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToIdentity(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            id: store.storeId ? toNumber(store.storeId) : null,\n            name: store.storeName,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToUrls(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            cart: store.cartLink,\n            checkout: store.checkoutLink,\n            confirmation: store.orderConfirmationLink,\n            home: store.shopPath,\n        });\n    }\n}\n","import RequestSender from '../common/http-request/request-sender';\nimport { DELETE, POST } from '../common/http-request/method-types';\nimport UrlHelper from './url-helper';\nimport {\n    mapToHeaders,\n    mapToTrustedShippingAddressPayload,\n} from './v2/mappers';\n\nexport default class StoreRequestSender {\n    /**\n     * @param {Object} config\n     * @returns {StoreRequestSender}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n\n        return new StoreRequestSender(urlHelper, requestSender);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        const url = this.urlHelper.getInstrumentsUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode\n        );\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        const url = this.urlHelper.getTrustedShippingAddressUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode\n        );\n        const payload = mapToTrustedShippingAddressPayload(data);\n        const options = {\n            method: POST,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        const url = this.urlHelper.getInstrumentByIdUrl(\n            data.storeId,\n            data.customerId,\n            data.instrumentId,\n            data.currencyCode\n        );\n        const options = {\n            method: DELETE,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n}\n","export default class UrlHelper {\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {CustomerMapper}\n     */\n    static create(config) {\n        return new UrlHelper(config);\n    }\n\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {void}\n     */\n    constructor(config) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     * @throws {Error}\n     */\n    get host() {\n        if (!this.config || !this.config.host) {\n            throw new Error('Host URL unavailable or not supplied.');\n        }\n\n        return this.config.host;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {string} currencyCode\n     * @returns {string}\n     */\n    getInstrumentsUrl(storeId, customerId, currencyCode) {\n        return `${this.host}/api/v3/stores/${storeId}/shoppers/${customerId}/instruments?currency_code=${currencyCode}`;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {string} currencyCode\n     * @return {string}\n     */\n    getTrustedShippingAddressUrl(storeId, customerId, currencyCode) {\n        return `${this.host}/api/v3/stores/${storeId}/shoppers/${customerId}/instruments/trusted_shipping_address?currency_code=${currencyCode}`;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {number} instrumentId\n     * @param {string} currencyCode\n     * @returns {string}\n     */\n    getInstrumentByIdUrl(storeId, customerId, instrumentId, currencyCode) {\n        return `${this.host}/api/v2/stores/${storeId}/shoppers/${customerId}/instruments/${instrumentId}?currency_code=${currencyCode}`;\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\n/**\n * @param {Object} [data={}]\n * @param {Object} data.billingAddress\n * @param {CreditCard} data.creditCard\n * @param {boolean} data.defaultInstrument\n * @param {string} data.providerName\n * @return {Object}\n */\nexport function mapToInstrumentPayload(data = {}) {\n    const {\n        providerName,\n        defaultInstrument: default_instrument,\n    } = data;\n\n    const provider = omitNil({ name: providerName });\n\n    return omitNil({\n        provider,\n        credit_card: mapToCreditCard(data),\n        billing_address: mapToAddress(data.billingAddress),\n        default_instrument,\n    });\n}\n\n/**\n * @param {Object} [data={}]\n * @param {Object} data.shippingAddress\n * @return {Object}\n */\nexport function mapToTrustedShippingAddressPayload(data = {}) {\n    return omitNil({\n        shipping_address: mapToAddress(data.shippingAddress),\n    });\n}\n\n/**\n * @param {Object} data\n * @param {string} data.authToken\n * @return {Object}\n */\nexport function mapToHeaders({ authToken: Authorization } = {}) {\n    return omitNil({\n        Authorization,\n    });\n}\n\n/**\n * @param {AddressData} address\n * @return {Object}\n */\nfunction mapToAddress(address = {}) {\n    const state = mapToState(address.provinceCode, address.province);\n\n    return omitNil({\n        address_line_1: address.addressLine1,\n        address_line_2: address.addressLine2,\n        city: address.city,\n        company: address.company,\n        country_code: address.countryCode,\n        email: address.email,\n        first_name: address.firstName,\n        last_name: address.lastName,\n        phone: address.phone,\n        postal_code: address.postCode,\n        state,\n    });\n}\n\n/**\n * @param {string} code\n * @param {string} name\n * @return {Object}\n */\nfunction mapToState(code, name) {\n    return omitNil({\n        code,\n        name,\n    });\n}\n\n/**\n * @param {Object} data\n * @param {CreditCard} data.creditCard\n * @return {Object}\n */\nfunction mapToCreditCard({ creditCard = {} }) {\n    const threeDSecure = omitNil(creditCard.threeDSecure);\n\n    return omitNil({\n        cardholder_name: creditCard.cardholderName,\n        number: creditCard.number,\n        month: creditCard.month,\n        year: creditCard.year,\n        verification_code: creditCard.verificationCode,\n        issue_month: creditCard.issueMonth,\n        issue_year: creditCard.issueYear,\n        issue_number: creditCard.issueNumber,\n        track_data: creditCard.trackData,\n        is_manual_entry: creditCard.isManualEntry,\n        icc_data: creditCard.iccData,\n        fallback_reason: creditCard.fallbackReason,\n        is_contactless: creditCard.isContactless,\n        encrypted_pin_cryptogram: creditCard.encryptedPinCryptogram,\n        encrypted_pin_ksn: creditCard.encryptedPinKsn,\n        three_d_secure: threeDSecure,\n    });\n}\n","const DEFAULT_CONFIG = {\n    host: '',\n};\n\nexport default DEFAULT_CONFIG;\n"],"sourceRoot":""}