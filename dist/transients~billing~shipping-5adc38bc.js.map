{"version":3,"sources":["webpack://checkout/../src/script-loader.ts","webpack://checkout/../src/create-script-loader.ts","webpack://checkout/../src/browser-support.ts","webpack://checkout/../src/stylesheet-loader.ts","webpack://checkout/../src/create-stylesheet-loader.ts","webpack://checkout/../src/index.ts","webpack://checkout/../src/get-script-loader.ts","webpack://checkout/../src/get-stylesheet-loader.ts"],"names":["ScriptLoader","_browserSupport","_requestSender","this","_scripts","_preloadedScripts","prototype","loadScript","src","options","_this","Promise","resolve","reject","script","document","createElement","_a","async","onload","onreadystatechange","onerror","event","body","appendChild","loadScripts","urls","all","map","url","then","preloadScript","prefetch","rel","canSupportRel","preloadedScript","as","href","head","get","credentials","headers","Accept","catch","preloadScripts","request_sender_1","__webpack_require__","browser_support_1","script_loader_1","exports","default","createRequestSender","BrowserSupport","link","relList","supports","StylesheetLoader","_stylesheets","_preloadedStylesheets","loadStylesheet","stylesheet","prepend","children","insertBefore","loadStylesheets","preloadStylesheet","preloadedStylesheet","preloadStylesheets","stylesheet_loader_1","create_script_loader_1","createScriptLoader","get_script_loader_1","getScriptLoader","create_stylesheet_loader_1","createStylesheetLoader","get_stylesheet_loader_1","getStylesheetLoader","instance"],"mappings":"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","file":"transients~billing~shipping-5adc38bc.js","sourcesContent":["import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadScriptOptions {\n    async: boolean;\n}\n\nexport interface PreloadScriptOptions {\n    prefetch: boolean;\n}\n\nexport default class ScriptLoader {\n    private _scripts: { [key: string]: Promise<void> } = {};\n    private _preloadedScripts: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadScript(src: string, options?: LoadScriptOptions): Promise<void> {\n        if (!this._scripts[src]) {\n            this._scripts[src] = new Promise((resolve, reject) => {\n                const script = document.createElement('script') as LegacyHTMLScriptElement;\n                const { async = false } = options || {};\n\n                script.onload = () => resolve();\n                script.onreadystatechange = () => resolve();\n                script.onerror = event => {\n                    delete this._scripts[src];\n                    reject(event);\n                };\n                script.async = async;\n                script.src = src;\n\n                document.body.appendChild(script);\n            });\n        }\n\n        return this._scripts[src];\n    }\n\n    loadScripts(urls: string[], options?: LoadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadScript(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadScript(url: string, options?: PreloadScriptOptions): Promise<void> {\n        if (!this._preloadedScripts[url]) {\n            this._preloadedScripts[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedScript = document.createElement('link');\n\n                    preloadedScript.as = 'script';\n                    preloadedScript.rel = rel;\n                    preloadedScript.href = url;\n\n                    preloadedScript.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedScript.onerror = () => {\n                        delete this._preloadedScripts[url];\n                        reject();\n                    };\n\n                    document.head.appendChild(preloadedScript);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'application/javascript' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedScripts[url];\n    }\n\n    preloadScripts(urls: string[], options?: PreloadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadScript(url, options)))\n            .then(() => undefined);\n    }\n}\n\ninterface LegacyHTMLScriptElement extends HTMLScriptElement {\n    // `onreadystatechange` is needed to support legacy IE\n    onreadystatechange(this: HTMLElement, event: Event): any;\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport ScriptLoader from './script-loader';\n\nexport default function createScriptLoader(): ScriptLoader {\n    return new ScriptLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","export default class BrowserSupport {\n    canSupportRel(rel: string): boolean {\n        const link = document.createElement('link');\n\n        return !!(\n            link.relList &&\n            link.relList.supports &&\n            link.relList.supports(rel)\n        );\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadStylesheetOptions {\n    prepend: boolean;\n}\n\nexport interface PreloadStylesheetOptions {\n    prefetch: boolean;\n}\n\nexport default class StylesheetLoader {\n    private _stylesheets: { [key: string]: Promise<void> } = {};\n    private _preloadedStylesheets: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadStylesheet(src: string, options?: LoadStylesheetOptions): Promise<void> {\n        if (!this._stylesheets[src]) {\n            this._stylesheets[src] = new Promise((resolve, reject) => {\n                const stylesheet = document.createElement('link');\n                const { prepend = false } = options || {};\n\n                stylesheet.onload = () => resolve();\n                stylesheet.onerror = event => {\n                    delete this._stylesheets[src];\n                    reject(event);\n                };\n                stylesheet.rel = 'stylesheet';\n                stylesheet.href = src;\n\n                if (prepend && document.head.children[0]) {\n                    document.head.insertBefore(stylesheet, document.head.children[0]);\n                } else {\n                    document.head.appendChild(stylesheet);\n                }\n            });\n        }\n\n        return this._stylesheets[src];\n    }\n\n    loadStylesheets(urls: string[], options?: LoadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadStylesheet(url: string, options?: PreloadStylesheetOptions): Promise<void> {\n        if (!this._preloadedStylesheets[url]) {\n            this._preloadedStylesheets[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedStylesheet = document.createElement('link');\n\n                    preloadedStylesheet.as = 'style';\n                    preloadedStylesheet.rel = prefetch ? 'prefetch' : 'preload';\n                    preloadedStylesheet.href = url;\n\n                    preloadedStylesheet.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedStylesheet.onerror = event => {\n                        delete this._preloadedStylesheets[url];\n                        reject(event);\n                    };\n\n                    document.head.appendChild(preloadedStylesheet);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'text/css' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedStylesheets[url];\n    }\n\n    preloadStylesheets(urls: string[], options?: PreloadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport StylesheetLoader from './stylesheet-loader';\n\nexport default function createStylesheetLoader(): StylesheetLoader {\n    return new StylesheetLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","export { default as ScriptLoader, LoadScriptOptions, PreloadScriptOptions } from './script-loader';\nexport { default as createScriptLoader } from './create-script-loader';\nexport { default as getScriptLoader } from './get-script-loader';\n\nexport { default as StylesheetLoader, LoadStylesheetOptions, PreloadStylesheetOptions } from './stylesheet-loader';\nexport { default as createStylesheetLoader } from './create-stylesheet-loader';\nexport { default as getStylesheetLoader } from './get-stylesheet-loader';\n","import createScriptLoader from './create-script-loader';\nimport ScriptLoader from './script-loader';\n\nlet instance: ScriptLoader;\n\nexport default function getScriptLoader(): ScriptLoader {\n    if (!instance) {\n        instance = createScriptLoader();\n    }\n\n    return instance;\n}\n","import createStylesheetLoader from './create-stylesheet-loader';\nimport StylesheetLoader from './stylesheet-loader';\n\nlet instance: StylesheetLoader;\n\nexport default function getStylesheetLoader(): StylesheetLoader {\n    if (!instance) {\n        instance = createStylesheetLoader();\n    }\n\n    return instance;\n}\n"],"sourceRoot":""}