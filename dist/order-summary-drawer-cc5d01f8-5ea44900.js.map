{"version":3,"sources":["webpack://checkout/./src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./src/app/order/getItemsCount.ts","webpack://checkout/./src/app/order/OrderSummarySection.tsx","webpack://checkout/./src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./src/app/order/mapFromCustom.tsx","webpack://checkout/./src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./src/app/order/mapFromDigital.tsx","webpack://checkout/./src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./src/app/order/mapFromPhysical.tsx","webpack://checkout/./src/app/order/OrderSummaryItem.tsx","webpack://checkout/./src/app/order/OrderSummaryItems.tsx","webpack://checkout/./src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./src/app/ui/modal/ModalTrigger.tsx","webpack://checkout/./src/app/order/getLineItemsCount.ts","webpack://checkout/./src/app/order/OrderSummaryModal.tsx","webpack://checkout/./src/app/order/OrderSummaryDrawer.tsx"],"names":["OrderSummaryPrice","_this","_classCallCheck","this","state","highlight","previousAmount","react__WEBPACK_IMPORTED_MODULE_10__","props","amount","_this2","_this$props","actionLabel","onActionTriggered","children","className","currencyCode","label","superscript","testId","zeroLabel","_this$state","displayValue","getDisplayValue","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","data-test","react_transition_group__WEBPACK_IMPORTED_MODULE_11__","addEndListener","node","done","addEventListener","_ref","target","setState","classNames","in","timeout","aria-live","classnames__WEBPACK_IMPORTED_MODULE_9___default","onClick","Object","_common_dom__WEBPACK_IMPORTED_MODULE_12__","href","isNumberValue","_currency__WEBPACK_IMPORTED_MODULE_13__","__webpack_exports__","getItemsCount","physicalItems","digitalItems","giftCertificates","customItems","concat","_toConsumableArray","reduce","total","item","quantity","length","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_locale__WEBPACK_IMPORTED_MODULE_1__","_locale__WEBPACK_IMPORTED_MODULE_2__","_OrderSummaryPrice__WEBPACK_IMPORTED_MODULE_3__","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","hasDifferentCurrency","id","undefined","data","toStoreCurrency","code","icon_IconChevronUp","withIconContainer","react_default","xmlns","width","height","viewBox","d","icon_IconChevronDown","order_mapFromCustom","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","content","rel","TranslatedString","order_mapFromDigital","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","order_mapFromGiftCertificate","IconGiftCertificate","order_mapFromPhysical","order_OrderSummaryItem","index","key","classnames_default","product-price--beforeDiscount","ShopperCurrency","OrderSummaryItems_OrderSummaryItems","OrderSummaryItems","_possibleConstructorReturn","_getPrototypeOf","call","isExpanded","Component","items","react","count","OrderSummaryItems_toConsumableArray","slice","sort","variantId","summaryItemProps","assign","renderActions","getLineItemCount","toggle","bind","type","order_OrderSummaryDiscount","remaining","onRemoved","rest","_objectWithoutProperties","discountAmount","taxes","shippingAmount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","coupon","displayName","discountedAmount","giftCertificate","used","tax","ModalTrigger","isOpen","canHandleEvent","handleOpen","handleClose","react__WEBPACK_IMPORTED_MODULE_9__","modal","react__WEBPACK_IMPORTED_MODULE_9___default","onRequestClose","getLineItemsCount","OrderSummaryModal_renderHeader","_ref2","headerLink","IconClose","ModalHeader","additionalClassName","order_OrderSummaryModal","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","lineItems","orderSummarySubtotalsProps","Modal","additionalHeaderClassName","additionalBodyClassName","header","OrderSummarySection","OrderSummarySubtotals","OrderSummaryTotal","OrderSummaryDrawer_objectWithoutProperties","cartDrawer-figure--stack","productWithImage","getImage"],"mappings":"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","file":"order-summary-drawer-cc5d01f8-5ea44900.js","sourcesContent":["import classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '../common/dom';\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    label: ReactNode;\n    amount?: number | null;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\n        return {\n            highlight: props.amount !== state.previousAmount,\n            previousAmount: props.amount,\n        };\n    }\n\n    state = {\n        highlight: false,\n        previousAmount: 0,\n    };\n\n    render(): ReactNode {\n        const {\n            amount,\n            actionLabel,\n            onActionTriggered,\n            children,\n            className,\n            currencyCode,\n            label,\n            superscript,\n            testId,\n            zeroLabel,\n        } = this.props;\n\n        const { highlight, previousAmount } = this.state;\n\n        const displayValue = getDisplayValue(amount, zeroLabel);\n\n        return (\n            <div data-test={ testId }>\n                <CSSTransition\n                    addEndListener={ (node, done) => {\n                        node.addEventListener('animationend', ({ target }) => {\n                            if (target === node) {\n                                this.setState({\n                                    highlight: false,\n                                    previousAmount,\n                                });\n                                done();\n                            }\n                        });\n                    } }\n                    classNames=\"changeHighlight\"\n                    in={ highlight }\n                    timeout={ {} }\n                >\n                    <div\n                        aria-live=\"polite\"\n                        className={ classNames(\n                            'cart-priceItem',\n                            'optimizedCheckout-contentPrimary',\n                            className\n                        ) }\n                    >\n                        <span className=\"cart-priceItem-label\">\n                            <span data-test=\"cart-price-label\">\n                                { label } { ' ' }\n                            </span>\n                            { currencyCode && <span className=\"cart-priceItem-currencyCode\">\n                                ({ currencyCode }) { ' ' }\n                            </span> }\n                            { onActionTriggered && actionLabel && <span className=\"cart-priceItem-link\">\n                                <a\n                                    onClick={ preventDefault(onActionTriggered) }\n                                    data-test=\"cart-price-callback\"\n                                    href=\"#\"\n                                >\n                                    { actionLabel }\n                                </a>\n                            </span> }\n                        </span>\n\n                        <span className=\"cart-priceItem-value\">\n                            <span data-test=\"cart-price-value\">\n                                { isNumberValue(displayValue) ?\n                                    <ShopperCurrency amount={ displayValue } /> :\n                                    displayValue\n                                }\n                            </span>\n\n                            { superscript && <sup data-test=\"cart-price-value-superscript\">\n                                { superscript }\n                            </sup> }\n                        </span>\n\n                        { children }\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nexport default OrderSummaryPrice;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [\n        ...physicalItems,\n        ...digitalItems,\n        ...(customItems || []),\n    ].reduce((total, item) => total += item.quantity, 0);\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent = ({\n    children,\n}) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        { children }\n    </section>\n);\n\nexport default OrderSummarySection;\n","import React, { Fragment, FunctionComponent } from 'react';\n\nimport { withCurrency, TranslatedString, WithCurrencyProps } from '../locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = <Fragment>\n        { hasDifferentCurrency ?\n            <TranslatedString id=\"cart.estimated_total_text\" /> :\n            <TranslatedString id=\"cart.total_text\" />\n        }\n        { ` (${shopperCurrencyCode})` }\n    </Fragment>;\n\n    return (\n        <Fragment>\n            <OrderSummaryPrice\n                amount={ orderAmount }\n                className=\"cart-priceItem--total\"\n                label={ label }\n                testId=\"cart-total\"\n                superscript={ hasDifferentCurrency ? '*' : undefined }\n            />\n            { hasDifferentCurrency && currency && <p\n                className=\"cart-priceItem--totalNote\"\n                data-test=\"cart-price-item-total-note\"\n            >\n                <TranslatedString\n                    id=\"cart.billed_amount_text\"\n                    data={ {\n                        total: currency.toStoreCurrency(orderAmount),\n                        code: storeCurrencyCode,\n                    } }\n                />\n            </p> }\n        </Fragment>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"></path>\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img\n        alt={ item.name }\n        data-test=\"cart-item-image\"\n        src={ item.imageUrl }\n    />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map(option => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content:\n            <a\n                href={ item.downloadPageUrl }\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>,\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image:\n            <span\n                className=\"productImage-giftCertificate\"\n                data-test=\"cart-item-gift-certificate\"\n            >\n                <IconGiftCertificate />\n            </span>,\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: (item.options || []).map(option => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n}) => (\n    <div className=\"product\" data-test=\"cart-item\">\n        <figure className=\"product-column product-figure\">\n            { image }\n        </figure>\n\n        <div className=\"product-column product-body\">\n            <h5\n                data-test=\"cart-item-product-title\"\n                className=\"product-title optimizedCheckout-contentPrimary\"\n            >\n                { quantity } x { name }\n            </h5>\n\n            <ul\n                data-test=\"cart-item-product-options\"\n                className=\"product-options optimizedCheckout-contentSecondary\"\n            >\n                { (productOptions || []).map((option, index) =>\n                    <li\n                        key={ index }\n                        className=\"product-option\"\n                        data-test={ option.testId }\n                    >\n                        { option.content }\n                    </li>\n                ) }\n            </ul>\n        </div>\n\n        <div className=\"product-column product-actions\">\n            <div\n                className={ classNames(\n                    'product-price',\n                    'optimizedCheckout-contentPrimary',\n                    { 'product-price--beforeDiscount': amountAfterDiscount && amountAfterDiscount !== amount }\n                ) }\n                data-test=\"cart-item-product-price\"\n            >\n                <ShopperCurrency amount={ amount } />\n            </div>\n\n            { amountAfterDiscount && amountAfterDiscount !== amount && <div\n                className=\"product-price\"\n                data-test=\"cart-item-product-price--afterDiscount\"\n            >\n                <ShopperCurrency amount={ amountAfterDiscount } />\n            </div> }\n        </div>\n    </div>\n);\n\nexport default OrderSummaryItem;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\n\nexport interface OrderSummaryItemsProps {\n    items: LineItemMap;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n        };\n    }\n\n    render(): ReactNode {\n        const { items } = this.props;\n        const { isExpanded } = this.state;\n\n        return (<Fragment>\n            <h3\n                className=\"cart-section-heading optimizedCheckout-contentPrimary\"\n                data-test=\"cart-count-total\"\n            >\n                <TranslatedString\n                    id=\"cart.item_count_text\"\n                    data={ { count: getItemsCount(items) }}\n                />\n            </h3>\n\n            <ul className=\"productList\" aria-live=\"polite\"> {\n                [\n                    ...items.physicalItems\n                        .slice()\n                        .sort(item => item.variantId)\n                        .map(mapFromPhysical),\n                    ...items.giftCertificates\n                        .slice()\n                        .map(mapFromGiftCertificate),\n                    ...items.digitalItems\n                        .slice()\n                        .sort(item => item.variantId)\n                        .map(mapFromDigital),\n                    ...(items.customItems || [])\n                        .map(mapFromCustom),\n                ]\n                    .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\n                    .map(summaryItemProps =>\n                        <li\n                            key={ summaryItemProps.id }\n                            className=\"productList-item is-visible\"\n                        >\n                            <OrderSummaryItem { ...summaryItemProps } />\n                        </li>\n                    )\n            } </ul>\n\n            { this.renderActions() }\n        </Fragment>);\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() < 5) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\n                    onClick={ this.toggle.bind(this) }\n                    type=\"button\"\n                >\n                        { isExpanded ?\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_less_action\" />\n                                <IconChevronUp />\n                            </Fragment> :\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_all_action\" />\n                                <IconChevronDown />\n                            </Fragment>\n                        }\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length;\n    }\n\n    private toggle(): void {\n        this.setState({ isExpanded: !this.state.isExpanded });\n    }\n}\n\nexport default OrderSummaryItems;\n","import React, { FunctionComponent } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => (\n    <OrderSummaryPrice\n        { ...rest }\n        { ...(onRemoved && {\n            onActionTriggered: () => code && onRemoved(code),\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\n        }) }\n        amount={ -1 * (amount || 0) }\n    >\n        { remaining && remaining > 0 && <span\n            data-test=\"cart-price-remaining\"\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\">\n            Remaining: <ShopperCurrency amount={ remaining } />\n        </span> }\n\n        { code && <span\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n            data-test=\"cart-price-code\"\n        >\n            { code }\n        </span> }\n    </OrderSummaryPrice>\n);\n\nexport default OrderSummaryDiscount;\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    taxes?: Tax[];\n    shippingAmount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    giftCertificates,\n    taxes,\n    shippingAmount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (<Fragment>\n        <OrderSummaryPrice\n            testId=\"cart-subtotal\"\n            className=\"cart-priceItem--subtotal\"\n            label={ <TranslatedString id=\"cart.subtotal_text\"/> }\n            amount={ subtotalAmount }\n        />\n\n        { (coupons || [])\n            .map((coupon, index) =>\n                <OrderSummaryDiscount\n                    onRemoved={ onRemovedCoupon }\n                    key={ index }\n                    testId=\"cart-coupon\"\n                    label={ coupon.displayName }\n                    code={ coupon.code }\n                    amount={ coupon.discountedAmount }\n                />\n        ) }\n\n        { !!discountAmount && <OrderSummaryDiscount\n            testId=\"cart-discount\"\n            label={ <TranslatedString id=\"cart.discount_text\"/> }\n            amount={ discountAmount }\n        /> }\n\n        { (giftCertificates || [])\n            .map((giftCertificate, index) =>\n                <OrderSummaryDiscount\n                    onRemoved={ onRemovedGiftCertificate }\n                    key={ index }\n                    testId=\"cart-gift-certificate\"\n                    label={ <TranslatedString id=\"cart.gift_certificate_text\"/> }\n                    code={ giftCertificate.code }\n                    amount={ giftCertificate.used }\n                    remaining={ giftCertificate.remaining }\n                />\n        ) }\n\n        <OrderSummaryPrice\n            testId=\"cart-shipping\"\n            label={ <TranslatedString id=\"cart.shipping_text\"/> }\n            zeroLabel={ <TranslatedString id=\"cart.free_text\"/> }\n            amount={ shippingAmount }\n        />\n\n        { !!handlingAmount && <OrderSummaryPrice\n            testId=\"cart-handling\"\n            label={ <TranslatedString id=\"cart.handling_text\"/> }\n            amount={ handlingAmount }\n        /> }\n\n        { (taxes || [])\n            .map((tax, index) =>\n                <OrderSummaryPrice\n                    key={ index }\n                    testId=\"cart-taxes\"\n                    label={ tax.name }\n                    amount={ tax.amount }\n                />\n         )}\n\n        { !!storeCreditAmount && <OrderSummaryDiscount\n            testId=\"cart-store-credit\"\n            label={ <TranslatedString id=\"cart.store_credit_text\"/> }\n            amount={ storeCreditAmount }\n        /> }\n    </Fragment>);\n};\n\nexport default OrderSummarySubtotals;\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import React, { Component, Fragment, MouseEventHandler, ReactNode } from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent: boolean = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <Fragment>\n                { children({ onClick: this.handleOpen }) }\n\n                { modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                }) }\n            </Fragment>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length;\n}\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, FunctionComponent, ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconClose } from '../ui/icon';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    lineItems: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    children,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => (\n<Modal\n    onAfterOpen={ onAfterOpen }\n    onRequestClose={ onRequestClose }\n    additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\n    additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n    header={ renderHeader({ headerLink, onRequestClose }) }\n    isOpen={ isOpen }\n>\n    <OrderSummarySection>\n        <OrderSummaryItems items={ lineItems } />\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummarySubtotals\n            { ...orderSummarySubtotalsProps }\n        />\n        { additionalLineItems }\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummaryTotal\n            orderAmount={ total }\n            shopperCurrencyCode={ shopperCurrency.code }\n            storeCurrencyCode={ storeCurrency.code }\n        />\n    </OrderSummarySection>\n</Modal>\n);\n\nconst renderHeader: FunctionComponent<{\n    headerLink: ReactNode;\n    onRequestClose?(): void;\n}> = ({\n    onRequestClose,\n    headerLink,\n}) => (<Fragment>\n    <a\n        className=\"cart-modal-close\"\n        onClick={ onRequestClose }\n        href=\"javascript:void(0);\"\n    >\n        <span className=\"is-srOnly\">\n            <TranslatedString id=\"common.close_action\" />\n        </span>\n        <IconClose />\n    </a>\n    <ModalHeader additionalClassName=\"cart-modal-title\">\n        <TranslatedString id=\"cart.cart_heading\" />\n    </ModalHeader>\n\n    { headerLink }\n</Fragment>);\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    storeCurrency,\n    shopperCurrency,\n    lineItems,\n    total,\n    additionalLineItems,\n    headerLink,\n    ...orderSummarySubtotalsProps\n}) => (\n    <ModalTrigger modal={ props => (\n        <OrderSummaryModal\n            { ...props }\n            { ...orderSummarySubtotalsProps }\n            total={ total }\n            lineItems={ lineItems }\n            headerLink={ headerLink }\n            storeCurrency={ storeCurrency }\n            shopperCurrency={ shopperCurrency }\n            additionalLineItems={ additionalLineItems }\n        />\n    ) }>\n        { ({ onClick }) => <div\n            className=\"cartDrawer optimizedCheckout-orderSummary\"\n            onClick={ onClick }\n        >\n            <figure\n                className={ classNames(\n                    'cartDrawer-figure',\n                    { 'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1 }\n                ) }\n            >\n                <div className=\"cartDrawer-imageWrapper\">\n                    { getImage(lineItems) }\n                </div>\n            </figure>\n            <div className=\"cartDrawer-body\">\n                <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                    <TranslatedString\n                        id=\"cart.item_count_text\"\n                        data={ { count: getItemsCount(lineItems) } }\n                    />\n                </h3>\n                <a>\n                    <TranslatedString id=\"cart.show_details_action\" />\n                </a>\n            </div>\n            <div className=\"cartDrawer-actions\">\n                <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                    <ShopperCurrency amount={ total } />\n                </h3>\n            </div>\n        </div> }\n    </ModalTrigger>\n);\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return <img\n            alt={ productWithImage.name }\n            data-test=\"cart-item-image\"\n            src={ productWithImage.imageUrl }\n        />;\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default OrderSummaryDrawer;\n"],"sourceRoot":""}