{"version":3,"sources":["webpack://checkout/./src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./src/app/order/getItemsCount.ts","webpack://checkout/./src/app/order/OrderSummarySection.tsx","webpack://checkout/./src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./src/app/order/mapFromCustom.tsx","webpack://checkout/./src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./src/app/order/mapFromDigital.tsx","webpack://checkout/./src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./src/app/order/mapFromPhysical.tsx","webpack://checkout/./src/app/order/OrderSummaryItem.tsx","webpack://checkout/./src/app/order/OrderSummaryItems.tsx","webpack://checkout/./src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./src/app/order/removeBundledItems.ts","webpack://checkout/./src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./src/app/order/OrderSummary.tsx"],"names":["OrderSummaryPrice","_this","_classCallCheck","this","state","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","_ref","target","setState","react__WEBPACK_IMPORTED_MODULE_10__","props","amount","_this$props","actionLabel","onActionTriggered","children","className","currencyCode","label","superscript","testId","zeroLabel","displayValue","getDisplayValue","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","data-test","react_transition_group__WEBPACK_IMPORTED_MODULE_11__","addEndListener","classNames","in","timeout","aria-live","classnames__WEBPACK_IMPORTED_MODULE_9___default","onClick","Object","_common_dom__WEBPACK_IMPORTED_MODULE_12__","href","isNumberValue","_currency__WEBPACK_IMPORTED_MODULE_13__","__webpack_exports__","getItemsCount","physicalItems","digitalItems","giftCertificates","customItems","concat","_toConsumableArray","reduce","total","item","quantity","length","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_locale__WEBPACK_IMPORTED_MODULE_1__","_locale__WEBPACK_IMPORTED_MODULE_2__","_OrderSummaryPrice__WEBPACK_IMPORTED_MODULE_3__","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","hasDifferentCurrency","id","undefined","data","toStoreCurrency","code","icon_IconChevronUp","withIconContainer","react_default","xmlns","width","height","viewBox","d","icon_IconChevronDown","order_mapFromCustom","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","content","rel","TranslatedString","order_mapFromDigital","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","order_mapFromGiftCertificate","IconGiftCertificate","order_mapFromPhysical","order_OrderSummaryItem","react","index","key","classnames_default","product-price--beforeDiscount","ShopperCurrency","OrderSummaryItems_OrderSummaryItems","OrderSummaryItems","_possibleConstructorReturn","_getPrototypeOf","call","handleToggle","isExpanded","Component","items","count","OrderSummaryItems_toConsumableArray","slice","sort","variantId","summaryItemProps","assign","renderActions","getLineItemCount","type","order_OrderSummaryDiscount","remaining","onRemoved","rest","_objectWithoutProperties","discountAmount","taxes","shippingAmount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","coupon","displayName","discountedAmount","giftCertificate","used","tax","removeBundledItems","lineItems","_objectSpread","filter","parentId","order_OrderSummaryHeader","storeCurrency","shopperCurrency","headerLink","additionalLineItems","orderSummarySubtotalsProps","nonBundledLineItems","OrderSummarySection","OrderSummarySubtotals","OrderSummaryTotal"],"mappings":"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","file":"order-summary-cc5d01f8-a63cd505.js","sourcesContent":["import classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '../common/dom';\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    label: ReactNode;\n    amount?: number | null;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\n        return {\n            highlight: props.amount !== state.previousAmount,\n            previousAmount: props.amount,\n        };\n    }\n\n    state = {\n        highlight: false,\n        previousAmount: 0,\n    };\n\n    render(): ReactNode {\n        const {\n            amount,\n            actionLabel,\n            onActionTriggered,\n            children,\n            className,\n            currencyCode,\n            label,\n            superscript,\n            testId,\n            zeroLabel,\n        } = this.props;\n\n        const { highlight } = this.state;\n        const displayValue = getDisplayValue(amount, zeroLabel);\n\n        return (\n            <div data-test={ testId }>\n                <CSSTransition\n                    addEndListener={ this.handleTransitionEnd }\n                    classNames=\"changeHighlight\"\n                    in={ highlight }\n                    timeout={ {} }\n                >\n                    <div\n                        aria-live=\"polite\"\n                        className={ classNames(\n                            'cart-priceItem',\n                            'optimizedCheckout-contentPrimary',\n                            className\n                        ) }\n                    >\n                        <span className=\"cart-priceItem-label\">\n                            <span data-test=\"cart-price-label\">\n                                { label } { ' ' }\n                            </span>\n                            { currencyCode && <span className=\"cart-priceItem-currencyCode\">\n                                ({ currencyCode }) { ' ' }\n                            </span> }\n                            { onActionTriggered && actionLabel && <span className=\"cart-priceItem-link\">\n                                <a\n                                    onClick={ preventDefault(onActionTriggered) }\n                                    data-test=\"cart-price-callback\"\n                                    href=\"#\"\n                                >\n                                    { actionLabel }\n                                </a>\n                            </span> }\n                        </span>\n\n                        <span className=\"cart-priceItem-value\">\n                            <span data-test=\"cart-price-value\">\n                                { isNumberValue(displayValue) ?\n                                    <ShopperCurrency amount={ displayValue } /> :\n                                    displayValue\n                                }\n                            </span>\n\n                            { superscript && <sup data-test=\"cart-price-value-superscript\">\n                                { superscript }\n                            </sup> }\n                        </span>\n\n                        { children }\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        const { previousAmount } = this.state;\n\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                this.setState({\n                    highlight: false,\n                    previousAmount,\n                });\n                done();\n            }\n        });\n    };\n}\n\nexport default OrderSummaryPrice;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [\n        ...physicalItems,\n        ...digitalItems,\n        ...(customItems || []),\n    ].reduce((total, item) => total += item.quantity, 0);\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent = ({\n    children,\n}) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        { children }\n    </section>\n);\n\nexport default OrderSummarySection;\n","import React, { Fragment, FunctionComponent } from 'react';\n\nimport { withCurrency, TranslatedString, WithCurrencyProps } from '../locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = <Fragment>\n        { hasDifferentCurrency ?\n            <TranslatedString id=\"cart.estimated_total_text\" /> :\n            <TranslatedString id=\"cart.total_text\" />\n        }\n        { ` (${shopperCurrencyCode})` }\n    </Fragment>;\n\n    return (\n        <Fragment>\n            <OrderSummaryPrice\n                amount={ orderAmount }\n                className=\"cart-priceItem--total\"\n                label={ label }\n                testId=\"cart-total\"\n                superscript={ hasDifferentCurrency ? '*' : undefined }\n            />\n            { hasDifferentCurrency && currency && <p\n                className=\"cart-priceItem--totalNote\"\n                data-test=\"cart-price-item-total-note\"\n            >\n                <TranslatedString\n                    id=\"cart.billed_amount_text\"\n                    data={ {\n                        total: currency.toStoreCurrency(orderAmount),\n                        code: storeCurrencyCode,\n                    } }\n                />\n            </p> }\n        </Fragment>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"></path>\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"></path>\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img\n        alt={ item.name }\n        data-test=\"cart-item-image\"\n        src={ item.imageUrl }\n    />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map(option => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content:\n            <a\n                href={ item.downloadPageUrl }\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>,\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image:\n            <span\n                className=\"productImage-giftCertificate\"\n                data-test=\"cart-item-gift-certificate\"\n            >\n                <IconGiftCertificate />\n            </span>,\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: (item.options || []).map(option => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport React, { memo, FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n}) => (\n    <div className=\"product\" data-test=\"cart-item\">\n        <figure className=\"product-column product-figure\">\n            { image }\n        </figure>\n\n        <div className=\"product-column product-body\">\n            <h5\n                data-test=\"cart-item-product-title\"\n                className=\"product-title optimizedCheckout-contentPrimary\"\n            >\n                { quantity } x { name }\n            </h5>\n\n            <ul\n                data-test=\"cart-item-product-options\"\n                className=\"product-options optimizedCheckout-contentSecondary\"\n            >\n                { (productOptions || []).map((option, index) =>\n                    <li\n                        key={ index }\n                        className=\"product-option\"\n                        data-test={ option.testId }\n                    >\n                        { option.content }\n                    </li>\n                ) }\n            </ul>\n        </div>\n\n        <div className=\"product-column product-actions\">\n            <div\n                className={ classNames(\n                    'product-price',\n                    'optimizedCheckout-contentPrimary',\n                    { 'product-price--beforeDiscount': amountAfterDiscount && amountAfterDiscount !== amount }\n                ) }\n                data-test=\"cart-item-product-price\"\n            >\n                <ShopperCurrency amount={ amount } />\n            </div>\n\n            { amountAfterDiscount && amountAfterDiscount !== amount && <div\n                className=\"product-price\"\n                data-test=\"cart-item-product-price--afterDiscount\"\n            >\n                <ShopperCurrency amount={ amountAfterDiscount } />\n            </div> }\n        </div>\n    </div>\n);\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\n\nexport interface OrderSummaryItemsProps {\n    items: LineItemMap;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n        };\n    }\n\n    render(): ReactNode {\n        const { items } = this.props;\n        const { isExpanded } = this.state;\n\n        return (<Fragment>\n            <h3\n                className=\"cart-section-heading optimizedCheckout-contentPrimary\"\n                data-test=\"cart-count-total\"\n            >\n                <TranslatedString\n                    id=\"cart.item_count_text\"\n                    data={ { count: getItemsCount(items) }}\n                />\n            </h3>\n\n            <ul className=\"productList\" aria-live=\"polite\"> {\n                [\n                    ...items.physicalItems\n                        .slice()\n                        .sort(item => item.variantId)\n                        .map(mapFromPhysical),\n                    ...items.giftCertificates\n                        .slice()\n                        .map(mapFromGiftCertificate),\n                    ...items.digitalItems\n                        .slice()\n                        .sort(item => item.variantId)\n                        .map(mapFromDigital),\n                    ...(items.customItems || [])\n                        .map(mapFromCustom),\n                ]\n                    .slice(0, isExpanded ? undefined : COLLAPSED_ITEMS_LIMIT)\n                    .map(summaryItemProps =>\n                        <li\n                            key={ summaryItemProps.id }\n                            className=\"productList-item is-visible\"\n                        >\n                            <OrderSummaryItem { ...summaryItemProps } />\n                        </li>\n                    )\n            } </ul>\n\n            { this.renderActions() }\n        </Fragment>);\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() < 5) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\n                    onClick={ this.handleToggle }\n                    type=\"button\"\n                >\n                        { isExpanded ?\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_less_action\" />\n                                <IconChevronUp />\n                            </Fragment> :\n                            <Fragment>\n                                <TranslatedString id=\"cart.see_all_action\" />\n                                <IconChevronDown />\n                            </Fragment>\n                        }\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length;\n    }\n\n    private handleToggle: () => void = () => {\n        this.setState({ isExpanded: !this.state.isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import React, { memo, FunctionComponent } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => (\n    <OrderSummaryPrice\n        { ...rest }\n        { ...(onRemoved && {\n            onActionTriggered: () => code && onRemoved(code),\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\n        }) }\n        amount={ -1 * (amount || 0) }\n    >\n        { remaining && remaining > 0 && <span\n            data-test=\"cart-price-remaining\"\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\">\n            Remaining: <ShopperCurrency amount={ remaining } />\n        </span> }\n\n        { code && <span\n            className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n            data-test=\"cart-price-code\"\n        >\n            { code }\n        </span> }\n    </OrderSummaryPrice>\n);\n\nexport default memo(OrderSummaryDiscount);\n","import { Coupon, GiftCertificate, Tax } from '@bigcommerce/checkout-sdk';\nimport React, { memo, Fragment, FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    taxes?: Tax[];\n    shippingAmount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    giftCertificates,\n    taxes,\n    shippingAmount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n}) => {\n    return (<Fragment>\n        <OrderSummaryPrice\n            testId=\"cart-subtotal\"\n            className=\"cart-priceItem--subtotal\"\n            label={ <TranslatedString id=\"cart.subtotal_text\"/> }\n            amount={ subtotalAmount }\n        />\n\n        { (coupons || [])\n            .map((coupon, index) =>\n                <OrderSummaryDiscount\n                    onRemoved={ onRemovedCoupon }\n                    key={ index }\n                    testId=\"cart-coupon\"\n                    label={ coupon.displayName }\n                    code={ coupon.code }\n                    amount={ coupon.discountedAmount }\n                />\n        ) }\n\n        { !!discountAmount && <OrderSummaryDiscount\n            testId=\"cart-discount\"\n            label={ <TranslatedString id=\"cart.discount_text\"/> }\n            amount={ discountAmount }\n        /> }\n\n        { (giftCertificates || [])\n            .map((giftCertificate, index) =>\n                <OrderSummaryDiscount\n                    onRemoved={ onRemovedGiftCertificate }\n                    key={ index }\n                    testId=\"cart-gift-certificate\"\n                    label={ <TranslatedString id=\"cart.gift_certificate_text\"/> }\n                    code={ giftCertificate.code }\n                    amount={ giftCertificate.used }\n                    remaining={ giftCertificate.remaining }\n                />\n        ) }\n\n        <OrderSummaryPrice\n            testId=\"cart-shipping\"\n            label={ <TranslatedString id=\"cart.shipping_text\"/> }\n            zeroLabel={ <TranslatedString id=\"cart.free_text\"/> }\n            amount={ shippingAmount }\n        />\n\n        { !!handlingAmount && <OrderSummaryPrice\n            testId=\"cart-handling\"\n            label={ <TranslatedString id=\"cart.handling_text\"/> }\n            amount={ handlingAmount }\n        /> }\n\n        { (taxes || [])\n            .map((tax, index) =>\n                <OrderSummaryPrice\n                    key={ index }\n                    testId=\"cart-taxes\"\n                    label={ tax.name }\n                    amount={ tax.amount }\n                />\n         )}\n\n        { !!storeCreditAmount && <OrderSummaryDiscount\n            testId=\"cart-store-credit\"\n            label={ <TranslatedString id=\"cart.store_credit_text\"/> }\n            amount={ storeCreditAmount }\n        /> }\n    </Fragment>);\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n    >\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\n    return {\n        ...lineItems,\n        physicalItems: lineItems.physicalItems.filter(item => (typeof item.parentId !== 'string')),\n        digitalItems: lineItems.digitalItems.filter(item => (typeof item.parentId !== 'string')),\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '../locale';\n\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\n    <header className=\"cart-header\">\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\n            <TranslatedString id=\"cart.cart_heading\" />\n        </h3>\n       { children }\n    </header>\n);\n\nexport default OrderSummaryHeader;\n","import { LineItemMap, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { useMemo, FunctionComponent, ReactNode } from 'react';\n\nimport removeBundledItems from './removeBundledItems';\nimport OrderSummaryHeader from './OrderSummaryHeader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrency;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\n    storeCurrency,\n    shopperCurrency,\n    headerLink,\n    additionalLineItems,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n    const nonBundledLineItems = useMemo(() => (\n        removeBundledItems(lineItems)\n    ), [lineItems]);\n\n    return <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\n        <OrderSummaryHeader>\n            { headerLink }\n        </OrderSummaryHeader>\n\n        <OrderSummarySection>\n            <OrderSummaryItems items={ nonBundledLineItems } />\n        </OrderSummarySection>\n\n        <OrderSummarySection>\n            <OrderSummarySubtotals\n                { ...orderSummarySubtotalsProps }\n            />\n            { additionalLineItems }\n        </OrderSummarySection>\n\n        <OrderSummarySection>\n            <OrderSummaryTotal\n                orderAmount={ total }\n                shopperCurrencyCode={ shopperCurrency.code }\n                storeCurrencyCode={ storeCurrency.code }\n            />\n        </OrderSummarySection>\n    </article>;\n};\n\nexport default OrderSummary;\n"],"sourceRoot":""}