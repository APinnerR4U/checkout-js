{"version":3,"sources":["webpack://checkout/./src/app/ui/modal/ModalTrigger.tsx","webpack://checkout/./src/app/order/getLineItemsCount.ts","webpack://checkout/./src/app/order/OrderSummaryModal.tsx","webpack://checkout/./src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./src/app/cart/CartSummaryDrawer.tsx"],"names":["ModalTrigger","_this","_classCallCheck","this","state","isOpen","canHandleEvent","handleOpen","setState","handleClose","react__WEBPACK_IMPORTED_MODULE_9__","_this$props","props","children","modal","react__WEBPACK_IMPORTED_MODULE_9___default","a","createElement","onClick","onRequestClose","getLineItemsCount","_ref","physicalItems","digitalItems","giftCertificates","customItems","length","OrderSummaryModal_renderHeader","_ref2","headerLink","react_default","react","className","href","TranslatedString","id","IconClose","ModalHeader","additionalClassName","order_OrderSummaryModal","additionalLineItems","onAfterOpen","storeCurrency","shopperCurrency","lineItems","total","orderSummarySubtotalsProps","_objectWithoutProperties","Modal","additionalHeaderClassName","additionalBodyClassName","header","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","Object","assign","OrderSummaryTotal","orderAmount","shopperCurrencyCode","code","storeCurrencyCode","__webpack_exports__","OrderSummaryDrawer_objectWithoutProperties","classnames_default","cartDrawer-figure--stack","productWithImage","imageUrl","alt","name","data-test","src","IconGiftCertificate","getImage","data","count","getItemsCount","ShopperCurrency","amount","_checkout__WEBPACK_IMPORTED_MODULE_9__","_mapToCartSummaryProps__WEBPACK_IMPORTED_MODULE_11__","cartUrl","_withRedeemable__WEBPACK_IMPORTED_MODULE_12__","_order_OrderSummaryDrawer__WEBPACK_IMPORTED_MODULE_10__","_objectSpread","react__WEBPACK_IMPORTED_MODULE_8___default","_EditLink__WEBPACK_IMPORTED_MODULE_13__","url"],"mappings":"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","file":"cart-summary-drawer-cc5d01f8-c3e4fefb.js","sourcesContent":["import React, { Component, Fragment, MouseEventHandler, ReactNode } from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent: boolean = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <Fragment>\n                { children({ onClick: this.handleOpen }) }\n\n                { modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                }) }\n            </Fragment>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length;\n}\n","import { LineItemMap, ShopperCurrency as ShopperCurrencyType, StoreCurrency } from '@bigcommerce/checkout-sdk';\nimport React, { Fragment, FunctionComponent, ReactNode } from 'react';\n\nimport { TranslatedString } from '../locale';\nimport { IconClose } from '../ui/icon';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    lineItems: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    additionalLineItems,\n    children,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    lineItems,\n    total,\n    ...orderSummarySubtotalsProps\n}) => (\n<Modal\n    onAfterOpen={ onAfterOpen }\n    onRequestClose={ onRequestClose }\n    additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary\"\n    additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n    header={ renderHeader({ headerLink, onRequestClose }) }\n    isOpen={ isOpen }\n>\n    <OrderSummarySection>\n        <OrderSummaryItems items={ lineItems } />\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummarySubtotals\n            { ...orderSummarySubtotalsProps }\n        />\n        { additionalLineItems }\n    </OrderSummarySection>\n    <OrderSummarySection>\n        <OrderSummaryTotal\n            orderAmount={ total }\n            shopperCurrencyCode={ shopperCurrency.code }\n            storeCurrencyCode={ storeCurrency.code }\n        />\n    </OrderSummarySection>\n</Modal>\n);\n\nconst renderHeader: FunctionComponent<{\n    headerLink: ReactNode;\n    onRequestClose?(): void;\n}> = ({\n    onRequestClose,\n    headerLink,\n}) => (<Fragment>\n    <a\n        className=\"cart-modal-close\"\n        onClick={ onRequestClose }\n        href=\"javascript:void(0);\"\n    >\n        <span className=\"is-srOnly\">\n            <TranslatedString id=\"common.close_action\" />\n        </span>\n        <IconClose />\n    </a>\n    <ModalHeader additionalClassName=\"cart-modal-title\">\n        <TranslatedString id=\"cart.cart_heading\" />\n    </ModalHeader>\n\n    { headerLink }\n</Fragment>);\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\nimport { TranslatedString } from '../locale';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<OrderSummaryDrawerProps & OrderSummarySubtotalsProps> = ({\n    storeCurrency,\n    shopperCurrency,\n    lineItems,\n    total,\n    additionalLineItems,\n    headerLink,\n    ...orderSummarySubtotalsProps\n}) => (\n    <ModalTrigger modal={ props => (\n        <OrderSummaryModal\n            { ...props }\n            { ...orderSummarySubtotalsProps }\n            total={ total }\n            lineItems={ lineItems }\n            headerLink={ headerLink }\n            storeCurrency={ storeCurrency }\n            shopperCurrency={ shopperCurrency }\n            additionalLineItems={ additionalLineItems }\n        />\n    ) }>\n        { ({ onClick }) => <div\n            className=\"cartDrawer optimizedCheckout-orderSummary\"\n            onClick={ onClick }\n        >\n            <figure\n                className={ classNames(\n                    'cartDrawer-figure',\n                    { 'cartDrawer-figure--stack': getLineItemsCount(lineItems) > 1 }\n                ) }\n            >\n                <div className=\"cartDrawer-imageWrapper\">\n                    { getImage(lineItems) }\n                </div>\n            </figure>\n            <div className=\"cartDrawer-body\">\n                <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                    <TranslatedString\n                        id=\"cart.item_count_text\"\n                        data={ { count: getItemsCount(lineItems) } }\n                    />\n                </h3>\n                <a>\n                    <TranslatedString id=\"cart.show_details_action\" />\n                </a>\n            </div>\n            <div className=\"cartDrawer-actions\">\n                <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                    <ShopperCurrency amount={ total } />\n                </h3>\n            </div>\n        </div> }\n    </ModalTrigger>\n);\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return <img\n            alt={ productWithImage.name }\n            data-test=\"cart-item-image\"\n            src={ productWithImage.imageUrl }\n        />;\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default OrderSummaryDrawer;\n","import React, { FunctionComponent } from 'react';\n\nimport { withCheckout } from '../checkout';\nimport OrderSummaryDrawer from '../order/OrderSummaryDrawer';\n\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\nimport withRedeemable from './withRedeemable';\nimport { CartSummaryProps, WithCheckoutCartSummaryProps } from './CartSummary';\nimport EditLink from './EditLink';\n\nconst CartSummaryDrawer: FunctionComponent<CartSummaryProps & WithCheckoutCartSummaryProps> = ({\n    cartUrl,\n    ...props\n}) => (\n    withRedeemable(OrderSummaryDrawer)({\n        ...props,\n        cartUrl,\n        headerLink: (\n            <EditLink\n                className=\"modal-header-link cart-modal-link\"\n                url={ cartUrl }\n            />\n        ),\n    })\n);\n\nexport default withCheckout(mapToCartSummaryProps)(CartSummaryDrawer);\n"],"sourceRoot":""}